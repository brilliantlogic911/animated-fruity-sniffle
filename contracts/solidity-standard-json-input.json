{"id":"a915dbe37e7d33b888058e0112b45614","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC2981.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     *\n     * NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n     * royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"},"@openzeppelin/contracts/token/common/ERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC2981} from \"../../interfaces/IERC2981.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 tokenId => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The default royalty receiver is invalid.\n     */\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\n\n    /**\n     * @dev The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The royalty receiver for `tokenId` is invalid.\n     */\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC2981\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) public view virtual returns (address receiver, uint256 amount) {\n        RoyaltyInfo storage _royaltyInfo = _tokenRoyaltyInfo[tokenId];\n        address royaltyReceiver = _royaltyInfo.receiver;\n        uint96 royaltyFraction = _royaltyInfo.royaltyFraction;\n\n        if (royaltyReceiver == address(0)) {\n            royaltyReceiver = _defaultRoyaltyInfo.receiver;\n            royaltyFraction = _defaultRoyaltyInfo.royaltyFraction;\n        }\n\n        uint256 royaltyAmount = (salePrice * royaltyFraction) / _feeDenominator();\n\n        return (royaltyReceiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\n        }\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\n        }\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /// @inheritdoc IERC1155\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /// @inheritdoc IERC1155\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC1155\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /// @inheritdoc IERC1155\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /// @inheritdoc IERC1155\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @title ERC-721 Burnable Token\n * @dev ERC-721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes[] storage arr, uint256 pos) internal pure returns (StorageSlot.BytesSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytesSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(string[] storage arr, uint256 pos) internal pure returns (StorageSlot.StringSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getStringSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes[] memory arr, uint256 pos) internal pure returns (bytes memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(string[] memory arr, uint256 pos) internal pure returns (string memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(string[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Base64.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Base64.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     * See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    string internal constant _TABLE_URL = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        return _encode(data, _TABLE, true);\n    }\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64Url `string` representation.\n     * Output is not padded with `=` as specified in https://www.rfc-editor.org/rfc/rfc4648[rfc4648].\n     */\n    function encodeURL(bytes memory data) internal pure returns (string memory) {\n        return _encode(data, _TABLE_URL, false);\n    }\n\n    /**\n     * @dev Internal table-agnostic conversion\n     */\n    function _encode(bytes memory data, string memory table, bool withPadding) private pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // If padding is enabled, the final length should be `bytes` data length divided by 3 rounded up and then\n        // multiplied by 4 so that it leaves room for padding the last chunk\n        // - `data.length + 2`  -> Prepare for division rounding up\n        // - `/ 3`              -> Number of 3-bytes chunks (rounded up)\n        // - `4 *`              -> 4 characters for each chunk\n        // This is equivalent to: 4 * Math.ceil(data.length / 3)\n        //\n        // If padding is disabled, the final length should be `bytes` data length multiplied by 4/3 rounded up as\n        // opposed to when padding is required to fill the last chunk.\n        // - `4 * data.length`  -> 4 characters for each chunk\n        // - ` + 2`             -> Prepare for division rounding up\n        // - `/ 3`              -> Number of 3-bytes chunks (rounded up)\n        // This is equivalent to: Math.ceil((4 * data.length) / 3)\n        uint256 resultLength = withPadding ? 4 * ((data.length + 2) / 3) : (4 * data.length + 2) / 3;\n\n        string memory result = new string(resultLength);\n\n        assembly (\"memory-safe\") {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 0x20)\n            let dataPtr := data\n            let endPtr := add(data, mload(data))\n\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\n            // set it to zero to make sure no dirty bytes are read in that section.\n            let afterPtr := add(endPtr, 0x20)\n            let afterCache := mload(afterPtr)\n            mstore(afterPtr, 0x00)\n\n            // Run over the input, 3 bytes at a time\n            for {} lt(dataPtr, endPtr) {} {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 byte (24 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\n                // Use this as an index into the lookup table, mload an entire word\n                // so the desired character is in the least significant byte, and\n                // mstore8 this least significant byte into the result and continue.\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // Reset the value that was cached\n            mstore(afterPtr, afterCache)\n\n            if withPadding {\n                // When data `bytes` is not exactly 3 bytes long\n                // it is padded with `=` characters at the end\n                switch mod(mload(data), 3)\n                case 1 {\n                    mstore8(sub(resultPtr, 1), 0x3d)\n                    mstore8(sub(resultPtr, 2), 0x3d)\n                }\n                case 2 {\n                    mstore8(sub(resultPtr, 1), 0x3d)\n                }\n            }\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/StaticFruitDeliciousAnimated.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\n/*\r\n * StaticFruit – Delicious NFTs (Animated)\r\n * - ERC-721 + EIP-2981\r\n * - On-chain, animated SVG with tier-specific shapes\r\n * - \"Deliciousness\" (0..100) drives visuals + animation intensity\r\n */\r\n\r\nimport {ERC721} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport {ERC721Burnable} from \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {ERC2981} from \"@openzeppelin/contracts/token/common/ERC2981.sol\";\r\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport {Base64} from \"@openzeppelin/contracts/utils/Base64.sol\";\r\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport {Address} from \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\ncontract StaticFruitDeliciousAnimated is ERC721, ERC2981, ERC721Burnable, Ownable, ReentrancyGuard {\r\n    using Strings for uint256;\r\n    using Strings for uint8;\r\n    using Address for address payable;\r\n\r\n    uint256 public nextId;\r\n    uint256 public immutable maxSupply;\r\n    uint256 public mintPrice; // set 0 for free\r\n    address public payout;\r\n\r\n    string public brand = \"StaticFruit\";\r\n    string public collection = \"Delicious\";\r\n\r\n    bool public mintOpen = true;\r\n\r\n    constructor(\r\n        uint96 royaltyBps,\r\n        uint256 _maxSupply,\r\n        uint256 _price,\r\n        address _payout\r\n    ) ERC721(\"StaticFruit Delicious (Animated)\", \"FRUTX\") Ownable(_payout) {\r\n        _setDefaultRoyalty(_payout, royaltyBps);\r\n        maxSupply = _maxSupply;\r\n        mintPrice = _price;\r\n        payout = _payout;\r\n    }\r\n\r\n    // ----- Events -----\r\n    event MintToggled(bool open);\r\n    event MintPriceUpdated(uint256 newPrice);\r\n    event PayoutAddressUpdated(address newPayout);\r\n    event BrandingUpdated(string newBrand, string newCollection);\r\n    event Withdrawal(address indexed to, uint256 amount);\r\n\r\n    // ----- Admin -----\r\n    function toggleMint(bool open) external onlyOwner {\r\n        mintOpen = open;\r\n        emit MintToggled(open);\r\n    }\r\n    \r\n    function setMintPrice(uint256 p) external onlyOwner {\r\n        mintPrice = p;\r\n        emit MintPriceUpdated(p);\r\n    }\r\n    \r\n    function setPayout(address p) external onlyOwner {\r\n        payout = p;\r\n        emit PayoutAddressUpdated(p);\r\n    }\r\n    \r\n    function setBranding(string calldata _brand, string calldata _collection) external onlyOwner {\r\n        brand = _brand;\r\n        collection = _collection;\r\n        emit BrandingUpdated(_brand, _collection);\r\n    }\r\n\r\n    // ----- Mint -----\r\n    function mint(uint256 qty) external payable nonReentrant {\r\n        require(mintOpen, \"Mint closed\");\r\n        require(qty > 0 && qty <= 5, \"qty 1..5\");\r\n        require(nextId + qty <= maxSupply, \"sold out\");\r\n        require(msg.value >= mintPrice * qty, \"insufficient ETH\");\r\n        unchecked {\r\n            for (uint256 i; i < qty; ++i) {\r\n                _safeMint(msg.sender, nextId);\r\n                ++nextId;\r\n            }\r\n        }\r\n        if (address(this).balance > 0) {\r\n            payable(payout).sendValue(address(this).balance);\r\n        }\r\n    }\r\n\r\n    // ----- Traits -----\r\n    function _seed(uint256 tokenId) internal view returns (bytes32) {\r\n        return keccak256(abi.encodePacked(address(this), tokenId, block.chainid));\r\n    }\r\n\r\n    // 0..100 (light bias upward to avoid flat lows)\r\n    function deliciousnessOf(uint256 tokenId) public view returns (uint8) {\r\n        require(_ownerOf(tokenId) != address(0), \"NA\");\r\n        uint8 score = uint8(uint256(_seed(tokenId)) % 101);\r\n        if (score < 8) score += 8;\r\n        return score;\r\n    }\r\n\r\n    function _tier(uint8 d) internal pure returns (string memory) {\r\n        if (d >= 90) return \"Legendary\";\r\n        if (d >= 70) return \"Prime\";\r\n        if (d >= 50) return \"Juicy\";\r\n        if (d >= 30) return \"Tangy\";\r\n        return \"Raw\";\r\n    }\r\n\r\n    function _fruitOf(uint256 tokenId) internal view returns (string memory fruit, uint8 idx) {\r\n        string[8] memory fruits = [\"Mango\",\"Berry\",\"Dragonfruit\",\"Grape\",\"Peach\",\"Lime\",\"Plum\",\"Guava\"];\r\n        idx = uint8(uint256(_seed(tokenId) >> 32) % fruits.length);\r\n        fruit = fruits[idx];\r\n    }\r\n\r\n    function _palette(uint8 idx, uint8 delicious) internal pure returns (string memory bg, string memory fg) {\r\n        string[8] memory bgs = [\"#0d1117\",\"#121212\",\"#0b0f14\",\"#1a1020\",\"#0f1320\",\"#101314\",\"#0e1117\",\"#141016\"];\r\n        string[8] memory fgs = [\"#FF7E4B\",\"#A16BFF\",\"#FF3FA4\",\"#8B5CF6\",\"#FFB86B\",\"#7CF5C9\",\"#9B59B6\",\"#7FDBFF\"];\r\n        bg = bgs[idx];\r\n        uint8 j = delicious > 66 ? (idx + 1) % 8 : delicious > 33 ? (idx + 2) % 8 : (idx + 3) % 8;\r\n        fg = fgs[j];\r\n    }\r\n\r\n    // Tier-specific primary shape path centered near blob\r\n    function _shapePath(string memory tier) internal pure returns (string memory d) {\r\n        // Coordinates built for 1000x1000 canvas around (500,520)\r\n        if (keccak256(bytes(tier)) == keccak256(\"Raw\")) {\r\n            // Triangle\r\n            return \"M500,240 L320,720 L680,720 Z\";\r\n        } else if (keccak256(bytes(tier)) == keccak256(\"Tangy\")) {\r\n            // Diamond\r\n            return \"M500,240 L300,520 L500,800 L700,520 Z\";\r\n        } else if (keccak256(bytes(tier)) == keccak256(\"Juicy\")) {\r\n            // Rounded blob (organic)\r\n            return \"M500,260 C360,300 320,560 460,720 C580,820 720,700 700,520 C680,360 640,300 500,260 Z\";\r\n        } else if (keccak256(bytes(tier)) == keccak256(\"Prime\")) {\r\n            // Star (5-point)\r\n            return \"M500,240 L540,420 L720,420 L580,520 L620,700 L500,600 L380,700 L420,520 L280,420 L460,420 Z\";\r\n        } else {\r\n            // Legendary: crown-like starburst\r\n            return \"M500,240 L560,420 L720,380 L600,500 L720,620 L560,580 L500,760 L440,580 L280,620 L400,500 L280,380 L440,420 Z\";\r\n        }\r\n    }\r\n\r\n    // Small sparkle glyph for Prime/Legendary tiers\r\n    function _sparklePath() internal pure returns (string memory) {\r\n        return \"M0,-20 L6,-6 L20,0 L6,6 L0,20 L-6,6 L-20,0 L-6,-6 Z\";\r\n    }\r\n\r\n    // ----- Rendering -----\r\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\r\n        require(_ownerOf(tokenId) != address(0), \"NA\");\r\n\r\n        (string memory fruit, uint8 idx) = _fruitOf(tokenId);\r\n        uint8 d = deliciousnessOf(tokenId);\r\n        (string memory bg, string memory fg) = _palette(idx, d);\r\n        string memory tier = _tier(d);\r\n\r\n        string memory name_ = string.concat(brand, \" \", collection, \" #\", tokenId.toString());\r\n        string memory desc  = string.concat(\r\n            \"A \", brand, \" \", collection,\r\n            \" piece. Flavor: \", fruit,\r\n            \". Tier: \", tier,\r\n            \". Deliciousness: \", d.toString(), \"/100. Animated on-chain SVG.\"\r\n        );\r\n\r\n        string memory svg = _svg(fruit, tier, d, bg, fg, tokenId);\r\n        bytes memory json = abi.encodePacked(\r\n            '{\"name\":\"', name_,\r\n            '\",\"description\":\"', desc,\r\n            '\",\"image\":\"data:image/svg+xml;base64,', Base64.encode(bytes(svg)),\r\n            '\",\"attributes\":[',\r\n              '{\"trait_type\":\"Flavor\",\"value\":\"', fruit, '\"},',\r\n              '{\"trait_type\":\"Tier\",\"value\":\"', tier, '\"},',\r\n              '{\"trait_type\":\"Deliciousness\",\"value\":', d.toString(), '}',\r\n            ']}'\r\n        );\r\n        return string(abi.encodePacked(\"data:application/json;base64,\", Base64.encode(json)));\r\n    }\r\n\r\n    function _svg(\r\n        string memory fruit,\r\n        string memory tier,\r\n        uint8 d,\r\n        string memory bg,\r\n        string memory fg,\r\n        uint256 tokenId\r\n    ) internal view returns (string memory) {\r\n        // Animation speeds scale with Deliciousness (faster if juicier)\r\n        // Clamp durations to pleasant ranges.\r\n        uint256 pulseDur = 8 - (uint256(d) / 20);    // 8..3s\r\n        if (pulseDur < 3) pulseDur = 3;\r\n        uint256 spinDur  = 14 - (uint256(d) / 12);   // 14..6s\r\n        if (spinDur < 6) spinDur = 6;\r\n        uint256 shimmerDur = 12 - (uint256(d) / 15);// 12..5s\r\n        if (shimmerDur < 5) shimmerDur = 5;\r\n\r\n        string memory meterW = _barWidth(d);\r\n        string memory path   = _shapePath(tier);\r\n\r\n        // Prime/Legendary sparkle glyph showing subtle rotation\r\n        bool showSparkle = (keccak256(bytes(tier)) == keccak256(\"Prime\")\r\n                         || keccak256(bytes(tier)) == keccak256(\"Legendary\"));\r\n\r\n        return string(\r\n            abi.encodePacked(\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1000\" height=\"1000\">',\r\n                '<defs>',\r\n                  '<style>@font-face{font-family:Inter;src:local(Inter);} .t{font-family:Inter,system-ui,sans-serif;fill:#fff}</style>',\r\n\r\n                  // Pulsing radial gradient for the juice blob\r\n                  '<radialGradient id=\"g\">',\r\n                    '<stop offset=\"0%\" stop-color=\"', fg, '\" stop-opacity=\"0.95\">',\r\n                      '<animate attributeName=\"offset\" values=\"0%;20%;0%\" dur=\"', pulseDur.toString(), 's\" repeatCount=\"indefinite\"/>',\r\n                    '</stop>',\r\n                    '<stop offset=\"100%\" stop-color=\"', fg, '\" stop-opacity=\"0.12\"/>',\r\n                  '</radialGradient>',\r\n\r\n                  // Shimmer gradient for the meter bar\r\n                  '<linearGradient id=\"shimmer\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">',\r\n                    '<stop offset=\"0%\" stop-color=\"#ffffff20\"/>',\r\n                    '<stop offset=\"50%\" stop-color=\"#ffffff60\">',\r\n                      '<animate attributeName=\"offset\" values=\"0%;100%\" dur=\"', shimmerDur.toString(), 's\" repeatCount=\"indefinite\"/>',\r\n                    '</stop>',\r\n                    '<stop offset=\"100%\" stop-color=\"#ffffff20\"/>',\r\n                  '</linearGradient>',\r\n                '</defs>',\r\n\r\n                // Backdrop\r\n                '<rect width=\"100%\" height=\"100%\" rx=\"48\" fill=\"', bg, '\"/>',\r\n\r\n                // Juice blob with subtle scale pulse\r\n                '<g transform=\"translate(500,520)\">',\r\n                  '<g>',\r\n                    '<circle r=\"360\" fill=\"url(#g)\">',\r\n                      '<animateTransform attributeName=\"transform\" type=\"scale\" values=\"1;1.05;1\" dur=\"', pulseDur.toString(), 's\" repeatCount=\"indefinite\"/>',\r\n                    '</circle>',\r\n                  '</g>',\r\n\r\n                  // Tier-specific shape overlay\r\n                  '<path d=\"', path, '\" transform=\"translate(-500,-520)\" fill=\"', fg, '\" opacity=\"0.18\"/>',\r\n\r\n                  // Sparkle (Prime/Legendary)\r\n                  showSparkle\r\n                    ? string(\r\n                        abi.encodePacked(\r\n                          '<g transform=\"translate(0,-200)\">',\r\n                            '<path d=\"', _sparklePath(), '\" fill=\"#ffffffd0\">',\r\n                              '<animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 0 0\" to=\"360 0 0\" dur=\"', spinDur.toString(), 's\" repeatCount=\"indefinite\"/>',\r\n                            '</path>',\r\n                          '</g>'\r\n                        )\r\n                      )\r\n                    : '',\r\n\r\n                '</g>',\r\n\r\n                // Title & token number\r\n                '<text x=\"80\" y=\"200\" class=\"t\" font-size=\"64\" opacity=\"0.9\">', fruit, ' - ', tier, '</text>',\r\n                '<text x=\"80\" y=\"280\" class=\"t\" font-size=\"36\" opacity=\"0.6\">#', tokenId.toString(), '</text>',\r\n\r\n                // Meter label\r\n                '<text x=\"80\" y=\"700\" class=\"t\" font-size=\"28\" opacity=\"0.85\">Deliciousness ', d.toString(), '/100</text>',\r\n\r\n                // Meter track + fill (with shimmer)\r\n                '<rect x=\"80\" y=\"720\" width=\"840\" height=\"36\" rx=\"18\" fill=\"#ffffff20\"/>',\r\n                '<rect x=\"80\" y=\"720\" width=\"', meterW, '\" height=\"36\" rx=\"18\" fill=\"url(#shimmer)\"/>',\r\n\r\n                // Badge\r\n                '<rect x=\"80\" y=\"820\" rx=\"14\" width=\"840\" height=\"56\" fill=\"#ffffff10\"/>',\r\n                '<text x=\"100\" y=\"860\" class=\"t\" font-size=\"28\" opacity=\"0.9\">', collection, ' - ', fruit, '</text>',\r\n\r\n                '</svg>'\r\n            )\r\n        );\r\n    }\r\n\r\n    function _barWidth(uint8 d) internal pure returns (string memory) {\r\n        uint256 w = (uint256(d) * 840) / 100;\r\n        return w.toString();\r\n    }\r\n\r\n    // ----- 2981 / Interface -----\r\n    function supportsInterface(bytes4 iid) public view override(ERC721, ERC2981) returns (bool) {\r\n        return super.supportsInterface(iid);\r\n    }\r\n\r\n    // ----- Safety -----\r\n    function withdraw() external onlyOwner {\r\n        uint256 amount = address(this).balance;\r\n        emit Withdrawal(payout, amount);\r\n        payable(payout).sendValue(amount);\r\n    }\r\n}"},"contracts/StaticSeeds.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\n/**\r\n * @title StaticSeeds\r\n * @dev ERC1155 token for StaticFruit seeds with horoscope-based minting\r\n */\r\ncontract StaticSeeds is ERC1155, Ownable, ReentrancyGuard {\r\n    using Strings for uint256;\r\n    using Address for address payable;\r\n    \r\n    // Token IDs for different zodiac signs\r\n    mapping(string => uint256) public signToTokenId;\r\n    mapping(uint256 => string) public tokenIdToSign;\r\n\r\n    // Minting configuration\r\n    uint256 public constant MAX_SUPPLY_PER_SIGN = 10000;\r\n    uint256 public constant MINT_PRICE = 0.01 ether;\r\n\r\n    // Tracking\r\n    mapping(uint256 => uint256) public totalSupply;\r\n    mapping(address => mapping(uint256 => uint256)) public userMints;\r\n\r\n    // Events\r\n    event SeedMinted(address indexed user, uint256 indexed tokenId, string sign, uint256 amount);\r\n    event HoroscopeClaimed(address indexed user, uint256 indexed tokenId, string theme);\r\n    event Withdrawal(address indexed to, uint256 amount);\r\n\r\n    constructor(address initialOwner)\r\n        ERC1155(\"https://staticfruit.xyz/api/metadata/{id}.json\")\r\n        Ownable(initialOwner)\r\n    {\r\n        // Initialize zodiac signs\r\n        _initializeZodiacSigns();\r\n    }\r\n\r\n    function _initializeZodiacSigns() internal {\r\n        string[12] memory signs = [\r\n            \"aries\", \"taurus\", \"gemini\", \"cancer\",\r\n            \"leo\", \"virgo\", \"libra\", \"scorpio\",\r\n            \"sagittarius\", \"capricorn\", \"aquarius\", \"pisces\"\r\n        ];\r\n\r\n        for (uint256 i = 0; i < signs.length; i++) {\r\n            uint256 tokenId = i + 1;\r\n            signToTokenId[signs[i]] = tokenId;\r\n            tokenIdToSign[tokenId] = signs[i];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mint seeds based on horoscope\r\n     * @param sign Zodiac sign\r\n     * @param amount Amount to mint\r\n     */\r\n    function mintSeed(string calldata sign, uint256 amount)\r\n        external\r\n        payable\r\n        nonReentrant\r\n    {\r\n        uint256 tokenId = signToTokenId[sign];\r\n        require(tokenId != 0, \"Invalid zodiac sign\");\r\n        require(msg.value >= MINT_PRICE * amount, \"Insufficient payment\");\r\n        require(totalSupply[tokenId] + amount <= MAX_SUPPLY_PER_SIGN, \"Exceeds max supply\");\r\n        require(userMints[msg.sender][tokenId] + amount <= 10, \"Max 10 per user per sign\");\r\n\r\n        totalSupply[tokenId] += amount;\r\n        userMints[msg.sender][tokenId] += amount;\r\n\r\n        _mint(msg.sender, tokenId, amount, \"\");\r\n\r\n        emit SeedMinted(msg.sender, tokenId, sign, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Claim horoscope reading (burns seed)\r\n     * @param tokenId Token ID to burn\r\n     * @param theme Generated horoscope theme\r\n     */\r\n    function claimHoroscope(uint256 tokenId, string calldata theme)\r\n        external\r\n        nonReentrant\r\n    {\r\n        require(balanceOf(msg.sender, tokenId) > 0, \"No seeds to claim\");\r\n\r\n        _burn(msg.sender, tokenId, 1);\r\n\r\n        emit HoroscopeClaimed(msg.sender, tokenId, theme);\r\n    }\r\n\r\n    /**\r\n     * @dev Get token URI for metadata\r\n     * @param tokenId Token ID\r\n     * @return URI string\r\n     */\r\n    function uri(uint256 tokenId) public view override returns (string memory) {\r\n        string memory baseURI = super.uri(tokenId);\r\n        return string(abi.encodePacked(baseURI, Strings.toString(tokenId)));\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw contract funds\r\n     */\r\n    function withdraw() external onlyOwner {\r\n        uint256 amount = address(this).balance;\r\n        emit Withdrawal(owner(), amount);\r\n        payable(owner()).sendValue(amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Get zodiac sign for token ID\r\n     * @param tokenId Token ID\r\n     * @return Zodiac sign string\r\n     */\r\n    function getSign(uint256 tokenId) external view returns (string memory) {\r\n        return tokenIdToSign[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Get token ID for zodiac sign\r\n     * @param sign Zodiac sign\r\n     * @return Token ID\r\n     */\r\n    function getTokenId(string calldata sign) external view returns (uint256) {\r\n        return signToTokenId[sign];\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":1000},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[4444],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":4445,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":4444,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,4444],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","exportedSymbols":{"IERC165":[6279],"IERC2981":[167]},"id":168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":168,"sourceUnit":6280,"src":"133:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"141:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":153,"name":"IERC165","nameLocations":["476:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":6279,"src":"476:7:1"},"id":154,"nodeType":"InheritanceSpecifier","src":"476:7:1"}],"canonicalName":"IERC2981","contractDependencies":[],"contractKind":"interface","documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"194:259:1","text":" @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."},"fullyImplemented":false,"id":167,"linearizedBaseContracts":[167,6279],"name":"IERC2981","nameLocation":"464:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"490:473:1","text":" @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."},"functionSelector":"2a55205a","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"977:11:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:1","nodeType":"VariableDeclaration","scope":166,"src":"998:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"salePrice","nameLocation":"1031:9:1","nodeType":"VariableDeclaration","scope":166,"src":"1023:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:58:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"receiver","nameLocation":"1078:8:1","nodeType":"VariableDeclaration","scope":166,"src":"1070:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"royaltyAmount","nameLocation":"1096:13:1","nodeType":"VariableDeclaration","scope":166,"src":"1088:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:41:1"},"scope":167,"src":"968:143:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":168,"src":"454:659:1","usedErrors":[],"usedEvents":[]}],"src":"107:1007:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[304],"IERC20Errors":[209],"IERC721Errors":[257]},"id":305,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":169,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":209,"linearizedBaseContracts":[209],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":179,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":179,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":179,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":179,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":184,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":184,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":189,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":189,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":198,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":198,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":198,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":198,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":203,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":203,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":208,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":208,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":305,"src":"280:1764:2","usedErrors":[179,184,189,198,203,208],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":257,"linearizedBaseContracts":[257],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":215,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":215,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":220,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":220,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":229,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":229,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":229,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":229,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":234,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":234,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":239,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":239,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":246,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":246,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":246,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":251,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":251,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":256,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":305,"src":"2190:2092:2","usedErrors":[215,220,229,234,239,246,251,256],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":304,"linearizedBaseContracts":[304],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":269,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":269,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":269,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":269,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":269,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":274,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":274,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":279,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":279,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":286,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":286,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":286,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":291,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":296,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":296,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":303,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":303,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":303,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":305,"src":"4430:2107:2","usedErrors":[269,274,279,286,291,296,303],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[4287],"Context":[4444],"ERC1155":[1221],"ERC1155Utils":[1556],"ERC165":[6267],"IERC1155":[1344],"IERC1155Errors":[304],"IERC1155MetadataURI":[1402],"IERC165":[6279]},"id":1222,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":306,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":1345,"src":"135:40:3","symbolAliases":[{"foreign":{"id":307,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"143:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":1403,"src":"176:73:3","symbolAliases":[{"foreign":{"id":309,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"184:19:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":1557,"src":"250:54:3","symbolAliases":[{"foreign":{"id":311,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"258:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":314,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":4445,"src":"305:48:3","symbolAliases":[{"foreign":{"id":313,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"313:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":6268,"src":"354:69:3","symbolAliases":[{"foreign":{"id":315,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"362:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":316,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6267,"src":"371:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":4288,"src":"424:46:3","symbolAliases":[{"foreign":{"id":318,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"432:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":305,"src":"471:67:3","symbolAliases":[{"foreign":{"id":320,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"479:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":323,"name":"Context","nameLocations":["754:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4444,"src":"754:7:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"754:7:3"},{"baseName":{"id":325,"name":"ERC165","nameLocations":["763:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":6267,"src":"763:6:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"763:6:3"},{"baseName":{"id":327,"name":"IERC1155","nameLocations":["771:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1344,"src":"771:8:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"771:8:3"},{"baseName":{"id":329,"name":"IERC1155MetadataURI","nameLocations":["781:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"781:19:3"},"id":330,"nodeType":"InheritanceSpecifier","src":"781:19:3"},{"baseName":{"id":331,"name":"IERC1155Errors","nameLocations":["802:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":304,"src":"802:14:3"},"id":332,"nodeType":"InheritanceSpecifier","src":"802:14:3"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"540:184:3","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1221,"linearizedBaseContracts":[1221,304,1402,1344,6267,6279,4444],"name":"ERC1155","nameLocation":"743:7:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":336,"libraryName":{"id":333,"name":"Arrays","nameLocations":["829:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4287,"src":"829:6:3"},"nodeType":"UsingForDirective","src":"823:27:3","typeName":{"baseType":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":335,"nodeType":"ArrayTypeName","src":"840:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":340,"libraryName":{"id":337,"name":"Arrays","nameLocations":["861:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4287,"src":"861:6:3"},"nodeType":"UsingForDirective","src":"855:27:3","typeName":{"baseType":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":339,"nodeType":"ArrayTypeName","src":"872:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":346,"mutability":"mutable","name":"_balances","nameLocation":"955:9:3","nodeType":"VariableDeclaration","scope":1221,"src":"888:76:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":345,"keyName":"id","keyNameLocation":"904:2:3","keyType":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":344,"keyName":"account","keyNameLocation":"926:7:3","keyType":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":352,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:3","nodeType":"VariableDeclaration","scope":1221,"src":"971:88:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":351,"keyName":"account","keyNameLocation":"987:7:3","keyType":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":350,"keyName":"operator","keyNameLocation":"1014:8:3","keyType":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":349,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":354,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:3","nodeType":"VariableDeclaration","scope":1221,"src":"1180:19:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":353,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":364,"nodeType":"Block","src":"1281:30:3","statements":[{"expression":{"arguments":[{"id":361,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1299:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":360,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"1291:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"1291:13:3"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"1206:38:3","text":" @dev See {_setURI}."},"id":365,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:3","nodeType":"VariableDeclaration","scope":365,"src":"1261:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":356,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:3"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"1281:0:3"},"scope":1221,"src":"1249:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6266,6278],"body":{"id":395,"nodeType":"Block","src":"1453:197:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":376,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1482:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":378,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"1502:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1344_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1344_$","typeString":"type(contract IERC1155)"}],"id":377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1497:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1344","typeString":"type(contract IERC1155)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1512:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1497:26:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1482:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":382,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1539:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":384,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1559:19:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1402_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1402_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":383,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1554:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1402","typeString":"type(contract IERC1155MetadataURI)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1580:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1554:37:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1539:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:109:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":391,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1631:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":389,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1607:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1221_$","typeString":"type(contract super ERC1155)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1613:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6266,"src":"1607:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1607:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:161:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":375,"id":394,"nodeType":"Return","src":"1463:180:3"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"1317:23:3","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":396,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1354:17:3","nodeType":"FunctionDefinition","overrides":{"id":372,"nodeType":"OverrideSpecifier","overrides":[{"id":370,"name":"ERC165","nameLocations":["1421:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":6267,"src":"1421:6:3"},{"id":371,"name":"IERC165","nameLocations":["1429:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":6279,"src":"1429:7:3"}],"src":"1412:25:3"},"parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"interfaceId","nameLocation":"1379:11:3","nodeType":"VariableDeclaration","scope":396,"src":"1372:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":367,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1372:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1371:20:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":396,"src":"1447:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":373,"name":"bool","nodeType":"ElementaryTypeName","src":"1447:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1446:6:3"},"scope":1221,"src":"1345:305:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1401],"body":{"id":406,"nodeType":"Block","src":"2124:28:3","statements":[{"expression":{"id":404,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"2141:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":403,"id":405,"nodeType":"Return","src":"2134:11:3"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"1656:388:3","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":407,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2058:3:3","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"2062:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2061:18:3"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"2109:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":401,"name":"string","nodeType":"ElementaryTypeName","src":"2109:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2108:15:3"},"scope":1221,"src":"2049:103:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1282],"body":{"id":423,"nodeType":"Block","src":"2273:46:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":417,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2290:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":419,"indexExpression":{"id":418,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"2300:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"2304:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":416,"id":422,"nodeType":"Return","src":"2283:29:3"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"2158:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"00fdd58e","id":424,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2196:9:3","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"account","nameLocation":"2214:7:3","nodeType":"VariableDeclaration","scope":424,"src":"2206:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"2206:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"id","nameLocation":"2231:2:3","nodeType":"VariableDeclaration","scope":424,"src":"2223:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2205:29:3"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":424,"src":"2264:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"2264:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:9:3"},"scope":1221,"src":"2187:132:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1295],"body":{"id":493,"nodeType":"Block","src":"2618:410:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":437,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2632:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2641:6:3","memberName":"length","nodeType":"MemberAccess","src":"2632:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":439,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2651:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2655:6:3","memberName":"length","nodeType":"MemberAccess","src":"2651:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2632:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":450,"nodeType":"IfStatement","src":"2628:121:3","trueBody":{"id":449,"nodeType":"Block","src":"2663:86:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":443,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2710:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2714:6:3","memberName":"length","nodeType":"MemberAccess","src":"2710:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":445,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2722:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2731:6:3","memberName":"length","nodeType":"MemberAccess","src":"2722:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":442,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2684:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":448,"nodeType":"RevertStatement","src":"2677:61:3"}]}},{"assignments":[455],"declarations":[{"constant":false,"id":455,"mutability":"mutable","name":"batchBalances","nameLocation":"2776:13:3","nodeType":"VariableDeclaration","scope":493,"src":"2759:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2759:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ArrayTypeName","src":"2759:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":462,"initialValue":{"arguments":[{"expression":{"id":459,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2806:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2815:6:3","memberName":"length","nodeType":"MemberAccess","src":"2806:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2792:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2796:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":457,"nodeType":"ArrayTypeName","src":"2796:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2759:63:3"},{"body":{"id":489,"nodeType":"Block","src":"2879:112:3","statements":[{"expression":{"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":474,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"2893:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":476,"indexExpression":{"id":475,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2907:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2893:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2950:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":478,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2922:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4179,"src":"2922:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2977:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":482,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2954:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2958:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4205,"src":"2954:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2954:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2912:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2893:87:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":488,"nodeType":"ExpressionStatement","src":"2893:87:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2853:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":468,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2857:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2866:6:3","memberName":"length","nodeType":"MemberAccess","src":"2857:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2853:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":490,"initializationExpression":{"assignments":[464],"declarations":[{"constant":false,"id":464,"mutability":"mutable","name":"i","nameLocation":"2846:1:3","nodeType":"VariableDeclaration","scope":490,"src":"2838:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2838:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":466,"initialValue":{"hexValue":"30","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2850:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2838:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2874:3:3","subExpression":{"id":471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2876:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":473,"nodeType":"ExpressionStatement","src":"2874:3:3"},"nodeType":"ForStatement","src":"2833:158:3"},{"expression":{"id":491,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"3008:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":436,"id":492,"nodeType":"Return","src":"3001:20:3"}]},"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"2325:146:3","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":494,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2485:14:3","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"accounts","nameLocation":"2526:8:3","nodeType":"VariableDeclaration","scope":494,"src":"2509:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"2509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":427,"nodeType":"ArrayTypeName","src":"2509:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"ids","nameLocation":"2561:3:3","nodeType":"VariableDeclaration","scope":494,"src":"2544:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2544:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":430,"nodeType":"ArrayTypeName","src":"2544:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2499:71:3"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":494,"src":"2600:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2600:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":434,"nodeType":"ArrayTypeName","src":"2600:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2599:18:3"},"scope":1221,"src":"2476:552:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1303],"body":{"id":509,"nodeType":"Block","src":"3138:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":503,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"3167:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3181:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":506,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"3191:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":502,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"3148:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"3148:52:3"}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"3034:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"a22cb465","id":510,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3072:17:3","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"operator","nameLocation":"3098:8:3","nodeType":"VariableDeclaration","scope":510,"src":"3090:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"approved","nameLocation":"3113:8:3","nodeType":"VariableDeclaration","scope":510,"src":"3108:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":498,"name":"bool","nodeType":"ElementaryTypeName","src":"3108:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3089:33:3"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[],"src":"3138:0:3"},"scope":1221,"src":"3063:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1313],"body":{"id":526,"nodeType":"Block","src":"3338:61:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":520,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"3355:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":522,"indexExpression":{"id":521,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3374:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":524,"indexExpression":{"id":523,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3383:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":519,"id":525,"nodeType":"Return","src":"3348:44:3"}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"3213:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"e985e9c5","id":527,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3251:16:3","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"account","nameLocation":"3276:7:3","nodeType":"VariableDeclaration","scope":527,"src":"3268:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"3268:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"operator","nameLocation":"3293:8:3","nodeType":"VariableDeclaration","scope":527,"src":"3285:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"3285:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3267:35:3"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":527,"src":"3332:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":517,"name":"bool","nodeType":"ElementaryTypeName","src":"3332:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3331:6:3"},"scope":1221,"src":"3242:157:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1327],"body":{"id":570,"nodeType":"Block","src":"3547:238:3","statements":[{"assignments":[542],"declarations":[{"constant":false,"id":542,"mutability":"mutable","name":"sender","nameLocation":"3565:6:3","nodeType":"VariableDeclaration","scope":570,"src":"3557:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"3557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":545,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":543,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"3574:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3574:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3557:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":546,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3600:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":547,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3608:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3600:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3618:31:3","subExpression":{"arguments":[{"id":550,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3636:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":551,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3642:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":549,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3619:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3600:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"3596:129:3","trueBody":{"id":560,"nodeType":"Block","src":"3651:74:3","statements":[{"errorCall":{"arguments":[{"id":556,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3701:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":557,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3709:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":555,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3672:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"RevertStatement","src":"3665:49:3"}]}},{"expression":{"arguments":[{"id":563,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3752:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":564,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3758:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"3762:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3766:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":567,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"3773:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":562,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3734:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"ExpressionStatement","src":"3734:44:3"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"3405:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"f242432a","id":571,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3443:16:3","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"from","nameLocation":"3468:4:3","nodeType":"VariableDeclaration","scope":571,"src":"3460:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"3460:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"to","nameLocation":"3482:2:3","nodeType":"VariableDeclaration","scope":571,"src":"3474:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"id","nameLocation":"3494:2:3","nodeType":"VariableDeclaration","scope":571,"src":"3486:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"3486:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"3506:5:3","nodeType":"VariableDeclaration","scope":571,"src":"3498:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3498:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"data","nameLocation":"3526:4:3","nodeType":"VariableDeclaration","scope":571,"src":"3513:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":537,"name":"bytes","nodeType":"ElementaryTypeName","src":"3513:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:72:3"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"3547:0:3"},"scope":1221,"src":"3434:351:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1343],"body":{"id":616,"nodeType":"Block","src":"4004:245:3","statements":[{"assignments":[588],"declarations":[{"constant":false,"id":588,"mutability":"mutable","name":"sender","nameLocation":"4022:6:3","nodeType":"VariableDeclaration","scope":616,"src":"4014:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"4014:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":591,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":589,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"4031:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4014:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":592,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4057:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":593,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4065:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4057:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4075:31:3","subExpression":{"arguments":[{"id":596,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4093:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":597,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4099:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":595,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"4076:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4076:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4057:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":607,"nodeType":"IfStatement","src":"4053:129:3","trueBody":{"id":606,"nodeType":"Block","src":"4108:74:3","statements":[{"errorCall":{"arguments":[{"id":602,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4158:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":603,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4166:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":601,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"4129:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4129:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":605,"nodeType":"RevertStatement","src":"4122:49:3"}]}},{"expression":{"arguments":[{"id":609,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4214:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"4220:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4224:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":612,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"4229:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":613,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4237:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":608,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"4191:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":615,"nodeType":"ExpressionStatement","src":"4191:51:3"}]},"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"3791:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"2eb2c2d6","id":617,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3829:21:3","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"from","nameLocation":"3868:4:3","nodeType":"VariableDeclaration","scope":617,"src":"3860:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"3860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"to","nameLocation":"3890:2:3","nodeType":"VariableDeclaration","scope":617,"src":"3882:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"3882:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"ids","nameLocation":"3919:3:3","nodeType":"VariableDeclaration","scope":617,"src":"3902:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":578,"nodeType":"ArrayTypeName","src":"3902:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"values","nameLocation":"3949:6:3","nodeType":"VariableDeclaration","scope":617,"src":"3932:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3932:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":581,"nodeType":"ArrayTypeName","src":"3932:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"data","nameLocation":"3978:4:3","nodeType":"VariableDeclaration","scope":617,"src":"3965:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":583,"name":"bytes","nodeType":"ElementaryTypeName","src":"3965:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3850:138:3"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"4004:0:3"},"scope":1221,"src":"3820:429:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":769,"nodeType":"Block","src":"5057:1174:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":631,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5071:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:3","memberName":"length","nodeType":"MemberAccess","src":"5071:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":633,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5085:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5092:6:3","memberName":"length","nodeType":"MemberAccess","src":"5085:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5071:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":644,"nodeType":"IfStatement","src":"5067:117:3","trueBody":{"id":643,"nodeType":"Block","src":"5100:84:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":637,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5147:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5151:6:3","memberName":"length","nodeType":"MemberAccess","src":"5147:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":639,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5159:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5166:6:3","memberName":"length","nodeType":"MemberAccess","src":"5159:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":636,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5121:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"RevertStatement","src":"5114:59:3"}]}},{"assignments":[646],"declarations":[{"constant":false,"id":646,"mutability":"mutable","name":"operator","nameLocation":"5202:8:3","nodeType":"VariableDeclaration","scope":769,"src":"5194:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"5194:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":647,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"5213:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5194:31:3"},{"body":{"id":730,"nodeType":"Block","src":"5277:650:3","statements":[{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"id","nameLocation":"5299:2:3","nodeType":"VariableDeclaration","scope":730,"src":"5291:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5291:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":667,"initialValue":{"arguments":[{"id":665,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5327:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":663,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5304:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5308:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4205,"src":"5304:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5304:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5291:38:3"},{"assignments":[669],"declarations":[{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"5351:5:3","nodeType":"VariableDeclaration","scope":730,"src":"5343:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"5343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":674,"initialValue":{"arguments":[{"id":672,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5385:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":670,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5359:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5366:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4205,"src":"5359:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5359:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5343:44:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":675,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5406:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5422:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5414:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:3","typeDescriptions":{}}},"id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5406:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":713,"nodeType":"IfStatement","src":"5402:420:3","trueBody":{"id":712,"nodeType":"Block","src":"5426:396:3","statements":[{"assignments":[682],"declarations":[{"constant":false,"id":682,"mutability":"mutable","name":"fromBalance","nameLocation":"5452:11:3","nodeType":"VariableDeclaration","scope":712,"src":"5444:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"5444:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":688,"initialValue":{"baseExpression":{"baseExpression":{"id":683,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5466:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":685,"indexExpression":{"id":684,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5476:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":687,"indexExpression":{"id":686,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5480:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5444:41:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":689,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5507:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"5521:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5507:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":700,"nodeType":"IfStatement","src":"5503:129:3","trueBody":{"id":699,"nodeType":"Block","src":"5528:104:3","statements":[{"errorCall":{"arguments":[{"id":693,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5584:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":694,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5590:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"5603:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":696,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5610:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":692,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"5557:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5557:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":698,"nodeType":"RevertStatement","src":"5550:63:3"}]}},{"id":711,"nodeType":"UncheckedBlock","src":"5649:159:3","statements":[{"expression":{"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":701,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5748:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":704,"indexExpression":{"id":702,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5758:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5748:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":705,"indexExpression":{"id":703,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5762:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5748:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":706,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5770:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"5784:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5770:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5748:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":710,"nodeType":"ExpressionStatement","src":"5748:41:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":714,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5840:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5854:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5846:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"5846:7:3","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5840:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":729,"nodeType":"IfStatement","src":"5836:81:3","trueBody":{"id":728,"nodeType":"Block","src":"5858:59:3","statements":[{"expression":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":720,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5876:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":723,"indexExpression":{"id":721,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5886:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5876:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":724,"indexExpression":{"id":722,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5890:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5876:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"5897:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5876:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":727,"nodeType":"ExpressionStatement","src":"5876:26:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5256:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":655,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5260:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5264:6:3","memberName":"length","nodeType":"MemberAccess","src":"5260:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5256:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"initializationExpression":{"assignments":[651],"declarations":[{"constant":false,"id":651,"mutability":"mutable","name":"i","nameLocation":"5249:1:3","nodeType":"VariableDeclaration","scope":731,"src":"5241:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":653,"initialValue":{"hexValue":"30","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5253:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5241:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5272:3:3","subExpression":{"id":658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5274:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":660,"nodeType":"ExpressionStatement","src":"5272:3:3"},"nodeType":"ForStatement","src":"5236:691:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":732,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5941:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5945:6:3","memberName":"length","nodeType":"MemberAccess","src":"5941:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5955:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5941:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":767,"nodeType":"Block","src":"6149:76:3","statements":[{"eventCall":{"arguments":[{"id":760,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"6182:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":761,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6192:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":762,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6198:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":763,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"6202:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":764,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"6207:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":759,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"6168:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6168:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"EmitStatement","src":"6163:51:3"}]},"id":768,"nodeType":"IfStatement","src":"5937:288:3","trueBody":{"id":758,"nodeType":"Block","src":"5958:185:3","statements":[{"assignments":[737],"declarations":[{"constant":false,"id":737,"mutability":"mutable","name":"id","nameLocation":"5980:2:3","nodeType":"VariableDeclaration","scope":758,"src":"5972:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"5972:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":742,"initialValue":{"arguments":[{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6008:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":738,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5985:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5989:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4205,"src":"5985:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5985:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5972:38:3"},{"assignments":[744],"declarations":[{"constant":false,"id":744,"mutability":"mutable","name":"value","nameLocation":"6032:5:3","nodeType":"VariableDeclaration","scope":758,"src":"6024:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"6024:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":749,"initialValue":{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6066:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":745,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"6040:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6047:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4205,"src":"6040:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6024:44:3"},{"eventCall":{"arguments":[{"id":751,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"6102:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":752,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6112:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":753,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6118:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":754,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6122:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6126:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":750,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"6087:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":757,"nodeType":"EmitStatement","src":"6082:50:3"}]}}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"4255:690:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":770,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"4959:7:3","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"from","nameLocation":"4975:4:3","nodeType":"VariableDeclaration","scope":770,"src":"4967:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"4967:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"to","nameLocation":"4989:2:3","nodeType":"VariableDeclaration","scope":770,"src":"4981:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"4981:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"ids","nameLocation":"5010:3:3","nodeType":"VariableDeclaration","scope":770,"src":"4993:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":624,"nodeType":"ArrayTypeName","src":"4993:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"values","nameLocation":"5032:6:3","nodeType":"VariableDeclaration","scope":770,"src":"5015:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"5015:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":627,"nodeType":"ArrayTypeName","src":"5015:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4966:73:3"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"5057:0:3"},"scope":1221,"src":"4950:1281:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":849,"nodeType":"Block","src":"7001:509:3","statements":[{"expression":{"arguments":[{"id":787,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7019:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":788,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7025:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7029:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":790,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"7034:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":786,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"7011:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"7011:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":793,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7055:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7069:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7061:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"7061:7:3","typeDescriptions":{}}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7061:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7055:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":848,"nodeType":"IfStatement","src":"7051:453:3","trueBody":{"id":847,"nodeType":"Block","src":"7073:431:3","statements":[{"assignments":[800],"declarations":[{"constant":false,"id":800,"mutability":"mutable","name":"operator","nameLocation":"7095:8:3","nodeType":"VariableDeclaration","scope":847,"src":"7087:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"7087:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":803,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":801,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"7106:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7087:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":804,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7136:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7140:6:3","memberName":"length","nodeType":"MemberAccess","src":"7136:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7136:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":845,"nodeType":"Block","src":"7382:112:3","statements":[{"expression":{"arguments":[{"id":837,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"7441:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":838,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7451:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7457:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7461:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":841,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"7466:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":842,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7474:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":834,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"7400:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1556_$","typeString":"type(library ERC1155Utils)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7413:27:3","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"7400:40:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"ExpressionStatement","src":"7400:79:3"}]},"id":846,"nodeType":"IfStatement","src":"7132:362:3","trueBody":{"id":833,"nodeType":"Block","src":"7153:223:3","statements":[{"assignments":[809],"declarations":[{"constant":false,"id":809,"mutability":"mutable","name":"id","nameLocation":"7179:2:3","nodeType":"VariableDeclaration","scope":833,"src":"7171:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"7171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":814,"initialValue":{"arguments":[{"hexValue":"30","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7207:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":810,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7184:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7188:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4205,"src":"7184:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7171:38:3"},{"assignments":[816],"declarations":[{"constant":false,"id":816,"mutability":"mutable","name":"value","nameLocation":"7235:5:3","nodeType":"VariableDeclaration","scope":833,"src":"7227:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"7227:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":821,"initialValue":{"arguments":[{"hexValue":"30","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":817,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"7243:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7250:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4205,"src":"7243:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7243:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7227:44:3"},{"expression":{"arguments":[{"id":825,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"7325:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":826,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7335:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":827,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7341:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":828,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"7345:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"7349:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":830,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7356:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":822,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"7289:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1556_$","typeString":"type(library ERC1155Utils)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7302:22:3","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1481,"src":"7289:35:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7289:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":832,"nodeType":"ExpressionStatement","src":"7289:72:3"}]}}]}}]},"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"6237:568:3","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":850,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"6819:26:3","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"from","nameLocation":"6863:4:3","nodeType":"VariableDeclaration","scope":850,"src":"6855:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"6855:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":775,"mutability":"mutable","name":"to","nameLocation":"6885:2:3","nodeType":"VariableDeclaration","scope":850,"src":"6877:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"6877:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"ids","nameLocation":"6914:3:3","nodeType":"VariableDeclaration","scope":850,"src":"6897:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"6897:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":777,"nodeType":"ArrayTypeName","src":"6897:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"values","nameLocation":"6944:6:3","nodeType":"VariableDeclaration","scope":850,"src":"6927:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":780,"nodeType":"ArrayTypeName","src":"6927:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"data","nameLocation":"6973:4:3","nodeType":"VariableDeclaration","scope":850,"src":"6960:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":782,"name":"bytes","nodeType":"ElementaryTypeName","src":"6960:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6845:138:3"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"7001:0:3"},"scope":1221,"src":"6810:700:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":915,"nodeType":"Block","src":"8075:355:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8089:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8103:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8095:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"8095:7:3","typeDescriptions":{}}},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8095:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8089:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":878,"nodeType":"IfStatement","src":"8085:88:3","trueBody":{"id":877,"nodeType":"Block","src":"8107:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8159:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8151:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"8151:7:3","typeDescriptions":{}}},"id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8151:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":870,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"8128:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8128:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":876,"nodeType":"RevertStatement","src":"8121:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":879,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8186:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8202:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8194:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:3","typeDescriptions":{}}},"id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8194:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8186:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":893,"nodeType":"IfStatement","src":"8182:88:3","trueBody":{"id":892,"nodeType":"Block","src":"8206:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8256:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8248:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"8248:7:3","typeDescriptions":{}}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8248:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":885,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8227:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"RevertStatement","src":"8220:39:3"}]}},{"assignments":[898,901],"declarations":[{"constant":false,"id":898,"mutability":"mutable","name":"ids","nameLocation":"8297:3:3","nodeType":"VariableDeclaration","scope":915,"src":"8280:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"8280:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":897,"nodeType":"ArrayTypeName","src":"8280:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"values","nameLocation":"8319:6:3","nodeType":"VariableDeclaration","scope":915,"src":"8302:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"8302:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":900,"nodeType":"ArrayTypeName","src":"8302:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":906,"initialValue":{"arguments":[{"id":903,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"8348:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"8352:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":902,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8329:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8279:79:3"},{"expression":{"arguments":[{"id":908,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8395:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":909,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8401:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"8405:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":911,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"8410:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":912,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"8418:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":907,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"8368:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8368:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"8368:55:3"}]},"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"7516:446:3","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":916,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"7976:17:3","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"from","nameLocation":"8002:4:3","nodeType":"VariableDeclaration","scope":916,"src":"7994:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"7994:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"to","nameLocation":"8016:2:3","nodeType":"VariableDeclaration","scope":916,"src":"8008:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"8008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"id","nameLocation":"8028:2:3","nodeType":"VariableDeclaration","scope":916,"src":"8020:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"8020:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"8040:5:3","nodeType":"VariableDeclaration","scope":916,"src":"8032:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"8032:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"data","nameLocation":"8060:4:3","nodeType":"VariableDeclaration","scope":916,"src":"8047:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":860,"name":"bytes","nodeType":"ElementaryTypeName","src":"8047:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7993:72:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[],"src":"8075:0:3"},"scope":1221,"src":"7967:463:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":970,"nodeType":"Block","src":"9010:266:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"9024:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9038:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9030:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"9030:7:3","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9030:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9024:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"IfStatement","src":"9020:88:3","trueBody":{"id":945,"nodeType":"Block","src":"9042:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9094:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9086:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:3","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9086:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":938,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"9063:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9063:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"RevertStatement","src":"9056:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":947,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"9121:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9137:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9129:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"9129:7:3","typeDescriptions":{}}},"id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9129:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9121:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":961,"nodeType":"IfStatement","src":"9117:88:3","trueBody":{"id":960,"nodeType":"Block","src":"9141:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9191:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9183:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"9183:7:3","typeDescriptions":{}}},"id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9183:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":953,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"9162:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":959,"nodeType":"RevertStatement","src":"9155:39:3"}]}},{"expression":{"arguments":[{"id":963,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"9241:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"9247:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":965,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9251:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":966,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"9256:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":967,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"9264:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":962,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"9214:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9214:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":969,"nodeType":"ExpressionStatement","src":"9214:55:3"}]},"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"8436:390:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":971,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"8840:22:3","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"from","nameLocation":"8880:4:3","nodeType":"VariableDeclaration","scope":971,"src":"8872:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"8872:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"to","nameLocation":"8902:2:3","nodeType":"VariableDeclaration","scope":971,"src":"8894:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"8894:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"ids","nameLocation":"8931:3:3","nodeType":"VariableDeclaration","scope":971,"src":"8914:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"8914:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":923,"nodeType":"ArrayTypeName","src":"8914:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"values","nameLocation":"8961:6:3","nodeType":"VariableDeclaration","scope":971,"src":"8944:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"8944:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":926,"nodeType":"ArrayTypeName","src":"8944:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"data","nameLocation":"8990:4:3","nodeType":"VariableDeclaration","scope":971,"src":"8977:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":928,"name":"bytes","nodeType":"ElementaryTypeName","src":"8977:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8862:138:3"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[],"src":"9010:0:3"},"scope":1221,"src":"8831:445:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"10154:30:3","statements":[{"expression":{"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":977,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"10164:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":978,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"10171:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10164:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":980,"nodeType":"ExpressionStatement","src":"10164:13:3"}]},"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"9282:811:3","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10107:7:3","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"newuri","nameLocation":"10129:6:3","nodeType":"VariableDeclaration","scope":982,"src":"10115:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":973,"name":"string","nodeType":"ElementaryTypeName","src":"10115:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10114:22:3"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"10154:0:3"},"scope":1221,"src":"10098:86:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"10644:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":994,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"10658:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10672:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10664:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"10664:7:3","typeDescriptions":{}}},"id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10664:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10658:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1008,"nodeType":"IfStatement","src":"10654:88:3","trueBody":{"id":1007,"nodeType":"Block","src":"10676:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10728:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10720:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"10720:7:3","typeDescriptions":{}}},"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10720:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1000,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"10697:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10697:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"RevertStatement","src":"10690:41:3"}]}},{"assignments":[1013,1016],"declarations":[{"constant":false,"id":1013,"mutability":"mutable","name":"ids","nameLocation":"10769:3:3","nodeType":"VariableDeclaration","scope":1033,"src":"10752:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"10752:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1012,"nodeType":"ArrayTypeName","src":"10752:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"values","nameLocation":"10791:6:3","nodeType":"VariableDeclaration","scope":1033,"src":"10774:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"10774:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1015,"nodeType":"ArrayTypeName","src":"10774:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1021,"initialValue":{"arguments":[{"id":1018,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"10820:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"10824:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1017,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"10801:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10801:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10751:79:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10875:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10867:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"10867:7:3","typeDescriptions":{}}},"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10867:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1027,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"10879:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1028,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"10883:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1029,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"10888:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1030,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"10896:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1022,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"10840:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1032,"nodeType":"ExpressionStatement","src":"10840:61:3"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"10190:367:3","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10571:5:3","nodeType":"FunctionDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"to","nameLocation":"10585:2:3","nodeType":"VariableDeclaration","scope":1034,"src":"10577:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"10577:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"id","nameLocation":"10597:2:3","nodeType":"VariableDeclaration","scope":1034,"src":"10589:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"10589:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"value","nameLocation":"10609:5:3","nodeType":"VariableDeclaration","scope":1034,"src":"10601:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"10601:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"data","nameLocation":"10629:4:3","nodeType":"VariableDeclaration","scope":1034,"src":"10616:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":990,"name":"bytes","nodeType":"ElementaryTypeName","src":"10616:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10576:58:3"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[],"src":"10644:0:3"},"scope":1221,"src":"10562:346:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1074,"nodeType":"Block","src":"11446:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"11460:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11474:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11466:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:3","typeDescriptions":{}}},"id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11466:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11460:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1062,"nodeType":"IfStatement","src":"11456:88:3","trueBody":{"id":1061,"nodeType":"Block","src":"11478:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11530:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11522:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"11522:7:3","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11522:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1054,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"11499:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11499:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1060,"nodeType":"RevertStatement","src":"11492:41:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11588:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11580:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"11580:7:3","typeDescriptions":{}}},"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11580:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1068,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"11592:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"11596:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1070,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"11601:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1071,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"11609:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1063,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"11553:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11553:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"11553:61:3"}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"10914:420:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1075,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11348:10:3","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"to","nameLocation":"11367:2:3","nodeType":"VariableDeclaration","scope":1075,"src":"11359:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"11359:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"ids","nameLocation":"11388:3:3","nodeType":"VariableDeclaration","scope":1075,"src":"11371:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"11371:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1039,"nodeType":"ArrayTypeName","src":"11371:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1043,"mutability":"mutable","name":"values","nameLocation":"11410:6:3","nodeType":"VariableDeclaration","scope":1075,"src":"11393:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"11393:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1042,"nodeType":"ArrayTypeName","src":"11393:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"data","nameLocation":"11431:4:3","nodeType":"VariableDeclaration","scope":1075,"src":"11418:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1044,"name":"bytes","nodeType":"ElementaryTypeName","src":"11418:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11358:78:3"},"returnParameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"11446:0:3"},"scope":1221,"src":"11339:282:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"11980:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1085,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"11994:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12010:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12002:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"12002:7:3","typeDescriptions":{}}},"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12002:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11994:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1099,"nodeType":"IfStatement","src":"11990:88:3","trueBody":{"id":1098,"nodeType":"Block","src":"12014:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12056:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"12056:7:3","typeDescriptions":{}}},"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12056:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1091,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"12035:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12035:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1097,"nodeType":"RevertStatement","src":"12028:39:3"}]}},{"assignments":[1104,1107],"declarations":[{"constant":false,"id":1104,"mutability":"mutable","name":"ids","nameLocation":"12105:3:3","nodeType":"VariableDeclaration","scope":1124,"src":"12088:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"12088:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1103,"nodeType":"ArrayTypeName","src":"12088:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"values","nameLocation":"12127:6:3","nodeType":"VariableDeclaration","scope":1124,"src":"12110:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"12110:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1106,"nodeType":"ArrayTypeName","src":"12110:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1112,"initialValue":{"arguments":[{"id":1109,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12156:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"12160:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1108,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"12137:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12087:79:3"},{"expression":{"arguments":[{"id":1114,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"12203:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12217:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12209:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"12209:7:3","typeDescriptions":{}}},"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12209:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1119,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"12221:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1120,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"12226:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12234:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1113,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12176:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12176:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"12176:61:3"}]},"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"11627:283:3","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11924:5:3","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"from","nameLocation":"11938:4:3","nodeType":"VariableDeclaration","scope":1125,"src":"11930:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"11930:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"id","nameLocation":"11952:2:3","nodeType":"VariableDeclaration","scope":1125,"src":"11944:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"11944:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"value","nameLocation":"11964:5:3","nodeType":"VariableDeclaration","scope":1125,"src":"11956:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"11956:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11929:41:3"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[],"src":"11980:0:3"},"scope":1221,"src":"11915:329:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1163,"nodeType":"Block","src":"12690:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"12704:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12720:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12712:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"12712:7:3","typeDescriptions":{}}},"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12712:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12704:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1151,"nodeType":"IfStatement","src":"12700:88:3","trueBody":{"id":1150,"nodeType":"Block","src":"12724:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12766:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"12766:7:3","typeDescriptions":{}}},"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12766:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1143,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"12745:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12745:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"RevertStatement","src":"12738:39:3"}]}},{"expression":{"arguments":[{"id":1153,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"12824:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12838:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12830:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"12830:7:3","typeDescriptions":{}}},"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12830:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1158,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"12842:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1159,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"12847:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12855:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1152,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12797:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12797:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"ExpressionStatement","src":"12797:61:3"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"12250:345:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1164,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12609:10:3","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"from","nameLocation":"12628:4:3","nodeType":"VariableDeclaration","scope":1164,"src":"12620:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"12620:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"ids","nameLocation":"12651:3:3","nodeType":"VariableDeclaration","scope":1164,"src":"12634:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"12634:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1130,"nodeType":"ArrayTypeName","src":"12634:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"values","nameLocation":"12673:6:3","nodeType":"VariableDeclaration","scope":1164,"src":"12656:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1133,"nodeType":"ArrayTypeName","src":"12656:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12619:61:3"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[],"src":"12690:0:3"},"scope":1221,"src":"12600:265:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1203,"nodeType":"Block","src":"13177:222:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"13191:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13211:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13203:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"13203:7:3","typeDescriptions":{}}},"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13203:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13191:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1188,"nodeType":"IfStatement","src":"13187:94:3","trueBody":{"id":1187,"nodeType":"Block","src":"13215:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13267:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13259:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"13259:7:3","typeDescriptions":{}}},"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13259:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1180,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"13236:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13236:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"RevertStatement","src":"13229:41:3"}]}},{"expression":{"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1189,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"13290:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1192,"indexExpression":{"id":1190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"13309:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13290:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1193,"indexExpression":{"id":1191,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"13316:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13290:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1194,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"13328:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13290:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"ExpressionStatement","src":"13290:46:3"},{"eventCall":{"arguments":[{"id":1198,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"13366:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"13373:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1200,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"13383:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1197,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"13351:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13351:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"EmitStatement","src":"13346:46:3"}]},"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"12871:208:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13093:18:3","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"owner","nameLocation":"13120:5:3","nodeType":"VariableDeclaration","scope":1204,"src":"13112:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"operator","nameLocation":"13135:8:3","nodeType":"VariableDeclaration","scope":1204,"src":"13127:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"13127:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"approved","nameLocation":"13150:8:3","nodeType":"VariableDeclaration","scope":1204,"src":"13145:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1170,"name":"bool","nodeType":"ElementaryTypeName","src":"13145:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13111:48:3"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"13177:0:3"},"scope":1221,"src":"13084:315:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1219,"nodeType":"Block","src":"13673:664:3","statements":[{"AST":{"nativeSrc":"13708:623:3","nodeType":"YulBlock","src":"13708:623:3","statements":[{"nativeSrc":"13766:21:3","nodeType":"YulAssignment","src":"13766:21:3","value":{"arguments":[{"kind":"number","nativeSrc":"13782:4:3","nodeType":"YulLiteral","src":"13782:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"13776:5:3","nodeType":"YulIdentifier","src":"13776:5:3"},"nativeSrc":"13776:11:3","nodeType":"YulFunctionCall","src":"13776:11:3"},"variableNames":[{"name":"array1","nativeSrc":"13766:6:3","nodeType":"YulIdentifier","src":"13766:6:3"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"13844:6:3","nodeType":"YulIdentifier","src":"13844:6:3"},{"kind":"number","nativeSrc":"13852:1:3","nodeType":"YulLiteral","src":"13852:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"13837:6:3","nodeType":"YulIdentifier","src":"13837:6:3"},"nativeSrc":"13837:17:3","nodeType":"YulFunctionCall","src":"13837:17:3"},"nativeSrc":"13837:17:3","nodeType":"YulExpressionStatement","src":"13837:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"13975:6:3","nodeType":"YulIdentifier","src":"13975:6:3"},{"kind":"number","nativeSrc":"13983:4:3","nodeType":"YulLiteral","src":"13983:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13971:3:3","nodeType":"YulIdentifier","src":"13971:3:3"},"nativeSrc":"13971:17:3","nodeType":"YulFunctionCall","src":"13971:17:3"},{"name":"element1","nativeSrc":"13990:8:3","nodeType":"YulIdentifier","src":"13990:8:3"}],"functionName":{"name":"mstore","nativeSrc":"13964:6:3","nodeType":"YulIdentifier","src":"13964:6:3"},"nativeSrc":"13964:35:3","nodeType":"YulFunctionCall","src":"13964:35:3"},"nativeSrc":"13964:35:3","nodeType":"YulExpressionStatement","src":"13964:35:3"},{"nativeSrc":"14090:27:3","nodeType":"YulAssignment","src":"14090:27:3","value":{"arguments":[{"name":"array1","nativeSrc":"14104:6:3","nodeType":"YulIdentifier","src":"14104:6:3"},{"kind":"number","nativeSrc":"14112:4:3","nodeType":"YulLiteral","src":"14112:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14100:3:3","nodeType":"YulIdentifier","src":"14100:3:3"},"nativeSrc":"14100:17:3","nodeType":"YulFunctionCall","src":"14100:17:3"},"variableNames":[{"name":"array2","nativeSrc":"14090:6:3","nodeType":"YulIdentifier","src":"14090:6:3"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"14137:6:3","nodeType":"YulIdentifier","src":"14137:6:3"},{"kind":"number","nativeSrc":"14145:1:3","nodeType":"YulLiteral","src":"14145:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"14130:6:3","nodeType":"YulIdentifier","src":"14130:6:3"},"nativeSrc":"14130:17:3","nodeType":"YulFunctionCall","src":"14130:17:3"},"nativeSrc":"14130:17:3","nodeType":"YulExpressionStatement","src":"14130:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"14171:6:3","nodeType":"YulIdentifier","src":"14171:6:3"},{"kind":"number","nativeSrc":"14179:4:3","nodeType":"YulLiteral","src":"14179:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14167:3:3","nodeType":"YulIdentifier","src":"14167:3:3"},"nativeSrc":"14167:17:3","nodeType":"YulFunctionCall","src":"14167:17:3"},{"name":"element2","nativeSrc":"14186:8:3","nodeType":"YulIdentifier","src":"14186:8:3"}],"functionName":{"name":"mstore","nativeSrc":"14160:6:3","nodeType":"YulIdentifier","src":"14160:6:3"},"nativeSrc":"14160:35:3","nodeType":"YulFunctionCall","src":"14160:35:3"},"nativeSrc":"14160:35:3","nodeType":"YulExpressionStatement","src":"14160:35:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14297:4:3","nodeType":"YulLiteral","src":"14297:4:3","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"14307:6:3","nodeType":"YulIdentifier","src":"14307:6:3"},{"kind":"number","nativeSrc":"14315:4:3","nodeType":"YulLiteral","src":"14315:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14303:3:3","nodeType":"YulIdentifier","src":"14303:3:3"},"nativeSrc":"14303:17:3","nodeType":"YulFunctionCall","src":"14303:17:3"}],"functionName":{"name":"mstore","nativeSrc":"14290:6:3","nodeType":"YulIdentifier","src":"14290:6:3"},"nativeSrc":"14290:31:3","nodeType":"YulFunctionCall","src":"14290:31:3"},"nativeSrc":"14290:31:3","nodeType":"YulExpressionStatement","src":"14290:31:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":1213,"isOffset":false,"isSlot":false,"src":"13766:6:3","valueSize":1},{"declaration":1213,"isOffset":false,"isSlot":false,"src":"13844:6:3","valueSize":1},{"declaration":1213,"isOffset":false,"isSlot":false,"src":"13975:6:3","valueSize":1},{"declaration":1213,"isOffset":false,"isSlot":false,"src":"14104:6:3","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"14090:6:3","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"14137:6:3","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"14171:6:3","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"14307:6:3","valueSize":1},{"declaration":1207,"isOffset":false,"isSlot":false,"src":"13990:8:3","valueSize":1},{"declaration":1209,"isOffset":false,"isSlot":false,"src":"14186:8:3","valueSize":1}],"flags":["memory-safe"],"id":1218,"nodeType":"InlineAssembly","src":"13683:648:3"}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"13405:105:3","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1220,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13524:18:3","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"element1","nameLocation":"13560:8:3","nodeType":"VariableDeclaration","scope":1220,"src":"13552:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"13552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"element2","nameLocation":"13586:8:3","nodeType":"VariableDeclaration","scope":1220,"src":"13578:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"13578:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13542:58:3"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"array1","nameLocation":"13640:6:3","nodeType":"VariableDeclaration","scope":1220,"src":"13623:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"13623:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1212,"nodeType":"ArrayTypeName","src":"13623:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"array2","nameLocation":"13665:6:3","nodeType":"VariableDeclaration","scope":1220,"src":"13648:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"13648:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1215,"nodeType":"ArrayTypeName","src":"13648:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13622:50:3"},"scope":1221,"src":"13515:822:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1222,"src":"725:13614:3","usedErrors":[269,274,279,286,291,296,303],"usedEvents":[1241,1256,1265,1272]}],"src":"109:14231:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1344],"IERC165":[6279]},"id":1345,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1223,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"110:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1345,"sourceUnit":6280,"src":"136:62:4","symbolAliases":[{"foreign":{"id":1224,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"144:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1227,"name":"IERC165","nameLocations":["359:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":6279,"src":"359:7:4"},"id":1228,"nodeType":"InheritanceSpecifier","src":"359:7:4"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"200:136:4","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1344,"linearizedBaseContracts":[1344,6279],"name":"IERC1155","nameLocation":"347:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"373:125:4","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1241,"name":"TransferSingle","nameLocation":"509:14:4","nodeType":"EventDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:4","nodeType":"VariableDeclaration","scope":1241,"src":"524:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:4","nodeType":"VariableDeclaration","scope":1241,"src":"550:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:4","nodeType":"VariableDeclaration","scope":1241,"src":"572:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:4","nodeType":"VariableDeclaration","scope":1241,"src":"592:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:4","nodeType":"VariableDeclaration","scope":1241,"src":"604:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:4"},"src":"503:116:4"},{"anonymous":false,"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"625:144:4","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1256,"name":"TransferBatch","nameLocation":"780:13:4","nodeType":"EventDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:4","nodeType":"VariableDeclaration","scope":1256,"src":"803:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1246,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:4","nodeType":"VariableDeclaration","scope":1256,"src":"837:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1248,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:4","nodeType":"VariableDeclaration","scope":1256,"src":"867:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:4","nodeType":"VariableDeclaration","scope":1256,"src":"895:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ArrayTypeName","src":"895:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1254,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:4","nodeType":"VariableDeclaration","scope":1256,"src":"918:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ArrayTypeName","src":"918:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:4"},"src":"774:167:4"},{"anonymous":false,"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"947:147:4","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1265,"name":"ApprovalForAll","nameLocation":"1105:14:4","nodeType":"EventDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:4","nodeType":"VariableDeclaration","scope":1265,"src":"1120:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:4","nodeType":"VariableDeclaration","scope":1265,"src":"1145:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:4","nodeType":"VariableDeclaration","scope":1265,"src":"1171:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1262,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:4"},"src":"1099:87:4"},{"anonymous":false,"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"1192:343:4","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1272,"name":"URI","nameLocation":"1546:3:4","nodeType":"EventDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:4","nodeType":"VariableDeclaration","scope":1272,"src":"1550:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1267,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1270,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:4","nodeType":"VariableDeclaration","scope":1272,"src":"1564:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:4"},"src":"1540:44:4"},{"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"1590:90:4","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1282,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:4","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"account","nameLocation":"1712:7:4","nodeType":"VariableDeclaration","scope":1282,"src":"1704:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"id","nameLocation":"1729:2:4","nodeType":"VariableDeclaration","scope":1282,"src":"1721:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:4"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"1756:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:4"},"scope":1344,"src":"1685:80:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"1771:188:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1295,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:4","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:4","nodeType":"VariableDeclaration","scope":1295,"src":"1997:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1285,"nodeType":"ArrayTypeName","src":"1997:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"ids","nameLocation":"2053:3:4","nodeType":"VariableDeclaration","scope":1295,"src":"2034:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1288,"nodeType":"ArrayTypeName","src":"2034:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:4"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"2086:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ArrayTypeName","src":"2086:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:4"},"scope":1344,"src":"1964:140:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"2110:254:4","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:4","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"operator","nameLocation":"2404:8:4","nodeType":"VariableDeclaration","scope":1303,"src":"2396:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"approved","nameLocation":"2419:8:4","nodeType":"VariableDeclaration","scope":1303,"src":"2414:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1299,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:4"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"2437:0:4"},"scope":1344,"src":"2369:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"2444:135:4","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1313,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:4","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"account","nameLocation":"2618:7:4","nodeType":"VariableDeclaration","scope":1313,"src":"2610:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"operator","nameLocation":"2635:8:4","nodeType":"VariableDeclaration","scope":1313,"src":"2627:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:4"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1313,"src":"2668:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1310,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:4"},"scope":1344,"src":"2584:90:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"2680:927:4","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1327,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:4","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"from","nameLocation":"3646:4:4","nodeType":"VariableDeclaration","scope":1327,"src":"3638:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"to","nameLocation":"3660:2:4","nodeType":"VariableDeclaration","scope":1327,"src":"3652:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"id","nameLocation":"3672:2:4","nodeType":"VariableDeclaration","scope":1327,"src":"3664:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"value","nameLocation":"3684:5:4","nodeType":"VariableDeclaration","scope":1327,"src":"3676:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"data","nameLocation":"3706:4:4","nodeType":"VariableDeclaration","scope":1327,"src":"3691:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1323,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:4"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[],"src":"3720:0:4"},"scope":1344,"src":"3612:109:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"3727:831:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1343,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:4","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"from","nameLocation":"4611:4:4","nodeType":"VariableDeclaration","scope":1343,"src":"4603:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"to","nameLocation":"4633:2:4","nodeType":"VariableDeclaration","scope":1343,"src":"4625:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"ids","nameLocation":"4664:3:4","nodeType":"VariableDeclaration","scope":1343,"src":"4645:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1334,"nodeType":"ArrayTypeName","src":"4645:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"values","nameLocation":"4696:6:4","nodeType":"VariableDeclaration","scope":1343,"src":"4677:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1337,"nodeType":"ArrayTypeName","src":"4677:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"data","nameLocation":"4727:4:4","nodeType":"VariableDeclaration","scope":1343,"src":"4712:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1339,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:4"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"4746:0:4"},"scope":1344,"src":"4563:184:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1345,"src":"337:4412:4","usedErrors":[],"usedEvents":[1241,1256,1265,1272]}],"src":"110:4640:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1386],"IERC165":[6279]},"id":1387,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1346,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"118:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1387,"sourceUnit":6280,"src":"144:62:5","symbolAliases":[{"foreign":{"id":1347,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"152:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1350,"name":"IERC165","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":6279,"src":"357:7:5"},"id":1351,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"208:118:5","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1386,"linearizedBaseContracts":[1386,6279],"name":"IERC1155Receiver","nameLocation":"337:16:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"371:827:5","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1367,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:5","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"operator","nameLocation":"1247:8:5","nodeType":"VariableDeclaration","scope":1367,"src":"1239:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"from","nameLocation":"1273:4:5","nodeType":"VariableDeclaration","scope":1367,"src":"1265:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"id","nameLocation":"1295:2:5","nodeType":"VariableDeclaration","scope":1367,"src":"1287:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"value","nameLocation":"1315:5:5","nodeType":"VariableDeclaration","scope":1367,"src":"1307:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"data","nameLocation":"1345:4:5","nodeType":"VariableDeclaration","scope":1367,"src":"1330:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1361,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:5"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1367,"src":"1374:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1364,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:5"},"scope":1386,"src":"1203:179:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"1388:995:5","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1385,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:5","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"operator","nameLocation":"2437:8:5","nodeType":"VariableDeclaration","scope":1385,"src":"2429:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"from","nameLocation":"2463:4:5","nodeType":"VariableDeclaration","scope":1385,"src":"2455:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"ids","nameLocation":"2496:3:5","nodeType":"VariableDeclaration","scope":1385,"src":"2477:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"nodeType":"ArrayTypeName","src":"2477:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"values","nameLocation":"2528:6:5","nodeType":"VariableDeclaration","scope":1385,"src":"2509:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1377,"nodeType":"ArrayTypeName","src":"2509:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"data","nameLocation":"2559:4:5","nodeType":"VariableDeclaration","scope":1385,"src":"2544:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1379,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:5"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"2588:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1382,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:5"},"scope":1386,"src":"2388:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1387,"src":"327:2271:5","usedErrors":[],"usedEvents":[]}],"src":"118:2481:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1344],"IERC1155MetadataURI":[1402]},"id":1403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1388,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"132:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1403,"sourceUnit":1345,"src":"158:41:6","symbolAliases":[{"foreign":{"id":1389,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"166:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1392,"name":"IERC1155","nameLocations":["399:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1344,"src":"399:8:6"},"id":1393,"nodeType":"InheritanceSpecifier","src":"399:8:6"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"201:164:6","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1402,"linearizedBaseContracts":[1402,1344,6279],"name":"IERC1155MetadataURI","nameLocation":"376:19:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"414:192:6","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1401,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:6","nodeType":"FunctionDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"id","nameLocation":"632:2:6","nodeType":"VariableDeclaration","scope":1401,"src":"624:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:6"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1401,"src":"659:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1398,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:6"},"scope":1402,"src":"611:63:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1403,"src":"366:310:6","usedErrors":[],"usedEvents":[1241,1256,1265,1272]}],"src":"132:545:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1556],"IERC1155Errors":[304],"IERC1155Receiver":[1386]},"id":1557,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1404,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":1387,"src":"146:57:7","symbolAliases":[{"foreign":{"id":1405,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"154:16:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":305,"src":"204:70:7","symbolAliases":[{"foreign":{"id":1407,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"212:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"276:162:7","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1556,"linearizedBaseContracts":[1556],"name":"ERC1155Utils","nameLocation":"447:12:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1480,"nodeType":"Block","src":"1191:776:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1425,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1205:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:7","memberName":"code","nodeType":"MemberAccess","src":"1205:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:7","memberName":"length","nodeType":"MemberAccess","src":"1205:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1479,"nodeType":"IfStatement","src":"1201:760:7","trueBody":{"id":1478,"nodeType":"Block","src":"1225:736:7","statements":[{"clauses":[{"block":{"id":1456,"nodeType":"Block","src":"1341:221:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1443,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"1363:8:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1444,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"1375:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1386_$","typeString":"type(contract IERC1155Receiver)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:7","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"1375:34:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"nodeType":"IfStatement","src":"1359:189:7","trueBody":{"id":1454,"nodeType":"Block","src":"1420:128:7","statements":[{"errorCall":{"arguments":[{"id":1451,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1526:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1448,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1488:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$304_$","typeString":"type(contract IERC1155Errors)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:7","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":279,"src":"1488:37:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1453,"nodeType":"RevertStatement","src":"1481:48:7"}]}}]},"errorName":"","id":1457,"nodeType":"TryCatchClause","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"response","nameLocation":"1331:8:7","nodeType":"VariableDeclaration","scope":1457,"src":"1324:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1440,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:7"},"src":"1315:247:7"},{"block":{"id":1475,"nodeType":"Block","src":"1591:360:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1461,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"1613:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:7","memberName":"length","nodeType":"MemberAccess","src":"1613:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1473,"nodeType":"Block","src":"1784:153:7","statements":[{"AST":{"nativeSrc":"1831:88:7","nodeType":"YulBlock","src":"1831:88:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1868:6:7","nodeType":"YulIdentifier","src":"1868:6:7"},{"kind":"number","nativeSrc":"1876:4:7","nodeType":"YulLiteral","src":"1876:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1864:3:7","nodeType":"YulIdentifier","src":"1864:3:7"},"nativeSrc":"1864:17:7","nodeType":"YulFunctionCall","src":"1864:17:7"},{"arguments":[{"name":"reason","nativeSrc":"1889:6:7","nodeType":"YulIdentifier","src":"1889:6:7"}],"functionName":{"name":"mload","nativeSrc":"1883:5:7","nodeType":"YulIdentifier","src":"1883:5:7"},"nativeSrc":"1883:13:7","nodeType":"YulFunctionCall","src":"1883:13:7"}],"functionName":{"name":"revert","nativeSrc":"1857:6:7","nodeType":"YulIdentifier","src":"1857:6:7"},"nativeSrc":"1857:40:7","nodeType":"YulFunctionCall","src":"1857:40:7"},"nativeSrc":"1857:40:7","nodeType":"YulExpressionStatement","src":"1857:40:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1459,"isOffset":false,"isSlot":false,"src":"1868:6:7","valueSize":1},{"declaration":1459,"isOffset":false,"isSlot":false,"src":"1889:6:7","valueSize":1}],"flags":["memory-safe"],"id":1472,"nodeType":"InlineAssembly","src":"1806:113:7"}]},"id":1474,"nodeType":"IfStatement","src":"1609:328:7","trueBody":{"id":1471,"nodeType":"Block","src":"1633:145:7","statements":[{"errorCall":{"arguments":[{"id":1468,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1756:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1465,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1718:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$304_$","typeString":"type(contract IERC1155Errors)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:7","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":279,"src":"1718:37:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"RevertStatement","src":"1711:48:7"}]}}]},"errorName":"","id":1476,"nodeType":"TryCatchClause","parameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"reason","nameLocation":"1583:6:7","nodeType":"VariableDeclaration","scope":1476,"src":"1570:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1458,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:7"},"src":"1563:388:7"}],"externalCall":{"arguments":[{"id":1434,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"1282:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"1292:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1436,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1298:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1302:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1438,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"1309:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1260:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1430,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"1243:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1386_$","typeString":"type(contract IERC1155Receiver)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1386","typeString":"contract IERC1155Receiver"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:7","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"1243:38:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1477,"nodeType":"TryStatement","src":"1239:712:7"}]}}]},"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"466:535:7","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:7","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"operator","nameLocation":"1055:8:7","nodeType":"VariableDeclaration","scope":1481,"src":"1047:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"from","nameLocation":"1081:4:7","nodeType":"VariableDeclaration","scope":1481,"src":"1073:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"to","nameLocation":"1103:2:7","nodeType":"VariableDeclaration","scope":1481,"src":"1095:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"id","nameLocation":"1123:2:7","nodeType":"VariableDeclaration","scope":1481,"src":"1115:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"value","nameLocation":"1143:5:7","nodeType":"VariableDeclaration","scope":1481,"src":"1135:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"data","nameLocation":"1171:4:7","nodeType":"VariableDeclaration","scope":1481,"src":"1158:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:7"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"1191:0:7"},"scope":1556,"src":"1006:961:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1554,"nodeType":"Block","src":"2733:818:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1499,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2747:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:4:7","memberName":"code","nodeType":"MemberAccess","src":"2747:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2755:6:7","memberName":"length","nodeType":"MemberAccess","src":"2747:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2747:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1553,"nodeType":"IfStatement","src":"2743:802:7","trueBody":{"id":1552,"nodeType":"Block","src":"2767:778:7","statements":[{"clauses":[{"block":{"id":1530,"nodeType":"Block","src":"2920:226:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"2942:8:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1518,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"2954:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1386_$","typeString":"type(contract IERC1155Receiver)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2971:22:7","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1385,"src":"2954:39:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2994:8:7","memberName":"selector","nodeType":"MemberAccess","src":"2954:48:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2942:60:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1529,"nodeType":"IfStatement","src":"2938:194:7","trueBody":{"id":1528,"nodeType":"Block","src":"3004:128:7","statements":[{"errorCall":{"arguments":[{"id":1525,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"3110:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1522,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3072:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$304_$","typeString":"type(contract IERC1155Errors)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3087:22:7","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":279,"src":"3072:37:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1527,"nodeType":"RevertStatement","src":"3065:48:7"}]}}]},"errorName":"","id":1531,"nodeType":"TryCatchClause","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"response","nameLocation":"2897:8:7","nodeType":"VariableDeclaration","scope":1531,"src":"2890:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1514,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2890:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2872:47:7"},"src":"2864:282:7"},{"block":{"id":1549,"nodeType":"Block","src":"3175:360:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1535,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"3197:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:6:7","memberName":"length","nodeType":"MemberAccess","src":"3197:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3197:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1547,"nodeType":"Block","src":"3368:153:7","statements":[{"AST":{"nativeSrc":"3415:88:7","nodeType":"YulBlock","src":"3415:88:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"3452:6:7","nodeType":"YulIdentifier","src":"3452:6:7"},{"kind":"number","nativeSrc":"3460:4:7","nodeType":"YulLiteral","src":"3460:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3448:3:7","nodeType":"YulIdentifier","src":"3448:3:7"},"nativeSrc":"3448:17:7","nodeType":"YulFunctionCall","src":"3448:17:7"},{"arguments":[{"name":"reason","nativeSrc":"3473:6:7","nodeType":"YulIdentifier","src":"3473:6:7"}],"functionName":{"name":"mload","nativeSrc":"3467:5:7","nodeType":"YulIdentifier","src":"3467:5:7"},"nativeSrc":"3467:13:7","nodeType":"YulFunctionCall","src":"3467:13:7"}],"functionName":{"name":"revert","nativeSrc":"3441:6:7","nodeType":"YulIdentifier","src":"3441:6:7"},"nativeSrc":"3441:40:7","nodeType":"YulFunctionCall","src":"3441:40:7"},"nativeSrc":"3441:40:7","nodeType":"YulExpressionStatement","src":"3441:40:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1533,"isOffset":false,"isSlot":false,"src":"3452:6:7","valueSize":1},{"declaration":1533,"isOffset":false,"isSlot":false,"src":"3473:6:7","valueSize":1}],"flags":["memory-safe"],"id":1546,"nodeType":"InlineAssembly","src":"3390:113:7"}]},"id":1548,"nodeType":"IfStatement","src":"3193:328:7","trueBody":{"id":1545,"nodeType":"Block","src":"3217:145:7","statements":[{"errorCall":{"arguments":[{"id":1542,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"3340:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1539,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3302:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$304_$","typeString":"type(contract IERC1155Errors)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3317:22:7","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":279,"src":"3302:37:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1544,"nodeType":"RevertStatement","src":"3295:48:7"}]}}]},"errorName":"","id":1550,"nodeType":"TryCatchClause","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"reason","nameLocation":"3167:6:7","nodeType":"VariableDeclaration","scope":1550,"src":"3154:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1532,"name":"bytes","nodeType":"ElementaryTypeName","src":"3154:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3153:21:7"},"src":"3147:388:7"}],"externalCall":{"arguments":[{"id":1508,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"2829:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1509,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"2839:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1510,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"2845:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1511,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"2850:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1512,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"2858:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2802:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1504,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"2785:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1386_$","typeString":"type(contract IERC1155Receiver)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1386","typeString":"contract IERC1155Receiver"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:22:7","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1385,"src":"2785:43:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:78:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1551,"nodeType":"TryStatement","src":"2781:754:7"}]}}]},"documentation":{"id":1482,"nodeType":"StructuredDocumentation","src":"1973:545:7","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2532:27:7","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"operator","nameLocation":"2577:8:7","nodeType":"VariableDeclaration","scope":1555,"src":"2569:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"from","nameLocation":"2603:4:7","nodeType":"VariableDeclaration","scope":1555,"src":"2595:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"to","nameLocation":"2625:2:7","nodeType":"VariableDeclaration","scope":1555,"src":"2617:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1491,"mutability":"mutable","name":"ids","nameLocation":"2654:3:7","nodeType":"VariableDeclaration","scope":1555,"src":"2637:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1490,"nodeType":"ArrayTypeName","src":"2637:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"values","nameLocation":"2684:6:7","nodeType":"VariableDeclaration","scope":1555,"src":"2667:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1493,"nodeType":"ArrayTypeName","src":"2667:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"data","nameLocation":"2713:4:7","nodeType":"VariableDeclaration","scope":1555,"src":"2700:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1495,"name":"bytes","nodeType":"ElementaryTypeName","src":"2700:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2559:164:7"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"2733:0:7"},"scope":1556,"src":"2523:1028:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1557,"src":"439:3114:7","usedErrors":[],"usedEvents":[]}],"src":"120:3434:7"},"id":7},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[4444],"ERC165":[6267],"ERC721":[2513],"ERC721Utils":[2782],"IERC165":[6279],"IERC721":[2630],"IERC721Errors":[257],"IERC721Metadata":[2705],"Strings":[6243]},"id":2514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1558,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2514,"sourceUnit":2631,"src":"133:38:8","symbolAliases":[{"foreign":{"id":1559,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"141:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1562,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2514,"sourceUnit":2706,"src":"172:65:8","symbolAliases":[{"foreign":{"id":1561,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"180:15:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":1564,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2514,"sourceUnit":2783,"src":"238:52:8","symbolAliases":[{"foreign":{"id":1563,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"246:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2514,"sourceUnit":4445,"src":"291:48:8","symbolAliases":[{"foreign":{"id":1565,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"299:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2514,"sourceUnit":6244,"src":"340:48:8","symbolAliases":[{"foreign":{"id":1567,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"348:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2514,"sourceUnit":6268,"src":"389:69:8","symbolAliases":[{"foreign":{"id":1569,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"397:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1570,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6267,"src":"406:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2514,"sourceUnit":305,"src":"459:66:8","symbolAliases":[{"foreign":{"id":1572,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"467:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1575,"name":"Context","nameLocations":["803:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4444,"src":"803:7:8"},"id":1576,"nodeType":"InheritanceSpecifier","src":"803:7:8"},{"baseName":{"id":1577,"name":"ERC165","nameLocations":["812:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":6267,"src":"812:6:8"},"id":1578,"nodeType":"InheritanceSpecifier","src":"812:6:8"},{"baseName":{"id":1579,"name":"IERC721","nameLocations":["820:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2630,"src":"820:7:8"},"id":1580,"nodeType":"InheritanceSpecifier","src":"820:7:8"},{"baseName":{"id":1581,"name":"IERC721Metadata","nameLocations":["829:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":2705,"src":"829:15:8"},"id":1582,"nodeType":"InheritanceSpecifier","src":"829:15:8"},{"baseName":{"id":1583,"name":"IERC721Errors","nameLocations":["846:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":257,"src":"846:13:8"},"id":1584,"nodeType":"InheritanceSpecifier","src":"846:13:8"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"527:247:8","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2513,"linearizedBaseContracts":[2513,257,2705,2630,6267,6279,4444],"name":"ERC721","nameLocation":"793:6:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1587,"libraryName":{"id":1585,"name":"Strings","nameLocations":["872:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":6243,"src":"872:7:8"},"nodeType":"UsingForDirective","src":"866:26:8","typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1589,"mutability":"mutable","name":"_name","nameLocation":"931:5:8","nodeType":"VariableDeclaration","scope":2513,"src":"916:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1588,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1591,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:8","nodeType":"VariableDeclaration","scope":2513,"src":"963:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1590,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1595,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:8","nodeType":"VariableDeclaration","scope":2513,"src":"992:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1594,"keyName":"tokenId","keyNameLocation":"1008:7:8","keyType":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1599,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:8","nodeType":"VariableDeclaration","scope":2513,"src":"1050:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1598,"keyName":"owner","keyNameLocation":"1066:5:8","keyType":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1597,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1603,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:8","nodeType":"VariableDeclaration","scope":2513,"src":"1108:59:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1602,"keyName":"tokenId","keyNameLocation":"1124:7:8","keyType":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1609,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:8","nodeType":"VariableDeclaration","scope":2513,"src":"1174:86:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1608,"keyName":"owner","keyNameLocation":"1190:5:8","keyType":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1607,"keyName":"operator","keyNameLocation":"1215:8:8","keyType":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1606,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1625,"nodeType":"Block","src":"1436:57:8","statements":[{"expression":{"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1617,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"1446:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1618,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"1454:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1620,"nodeType":"ExpressionStatement","src":"1446:13:8"},{"expression":{"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1621,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"1469:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1622,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1479:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1624,"nodeType":"ExpressionStatement","src":"1469:17:8"}]},"documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"1267:108:8","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1626,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"name_","nameLocation":"1406:5:8","nodeType":"VariableDeclaration","scope":1626,"src":"1392:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1611,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1614,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:8","nodeType":"VariableDeclaration","scope":1626,"src":"1413:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1613,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:8"},"returnParameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"1436:0:8"},"scope":2513,"src":"1380:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6266,6278],"body":{"id":1656,"nodeType":"Block","src":"1635:192:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"1664:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1639,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"1684:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2630_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2630_$","typeString":"type(contract IERC721)"}],"id":1638,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2630","typeString":"type(contract IERC721)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1643,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"1720:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1645,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1740:15:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2705_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2705_$","typeString":"type(contract IERC721Metadata)"}],"id":1644,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2705","typeString":"type(contract IERC721Metadata)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1652,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"1808:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1650,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2513_$","typeString":"type(contract super ERC721)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:8","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6266,"src":"1784:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1636,"id":1655,"nodeType":"Return","src":"1645:175:8"}]},"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"1499:23:8","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:8","nodeType":"FunctionDefinition","overrides":{"id":1633,"nodeType":"OverrideSpecifier","overrides":[{"id":1631,"name":"ERC165","nameLocations":["1603:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":6267,"src":"1603:6:8"},{"id":1632,"name":"IERC165","nameLocations":["1611:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":6279,"src":"1611:7:8"}],"src":"1594:25:8"},"parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:8","nodeType":"VariableDeclaration","scope":1657,"src":"1554:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1628,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:8"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1657,"src":"1629:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1634,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:8"},"scope":2513,"src":"1527:300:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2555],"body":{"id":1684,"nodeType":"Block","src":"1933:136:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1665,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"1947:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:8","typeDescriptions":{}}},"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1679,"nodeType":"IfStatement","src":"1943:87:8","trueBody":{"id":1678,"nodeType":"Block","src":"1968:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:8","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1671,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1989:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1677,"nodeType":"RevertStatement","src":"1982:37:8"}]}},{"expression":{"baseExpression":{"id":1680,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2046:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1682,"indexExpression":{"id":1681,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2056:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1664,"id":1683,"nodeType":"Return","src":"2039:23:8"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"1833:23:8","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:8","nodeType":"FunctionDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"owner","nameLocation":"1888:5:8","nodeType":"VariableDeclaration","scope":1685,"src":"1880:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:8"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1685,"src":"1924:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:8"},"scope":2513,"src":"1861:208:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2563],"body":{"id":1697,"nodeType":"Block","src":"2175:46:8","statements":[{"expression":{"arguments":[{"id":1694,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"2206:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2192:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1692,"id":1696,"nodeType":"Return","src":"2185:29:8"}]},"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"2075:23:8","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":1698,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:8","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:8","nodeType":"VariableDeclaration","scope":1698,"src":"2120:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:8"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1698,"src":"2166:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:8"},"scope":2513,"src":"2103:118:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2690],"body":{"id":1706,"nodeType":"Block","src":"2323:29:8","statements":[{"expression":{"id":1704,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"2340:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1703,"id":1705,"nodeType":"Return","src":"2333:12:8"}]},"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"2227:31:8","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:8","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[],"src":"2276:2:8"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1707,"src":"2308:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1701,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:8"},"scope":2513,"src":"2263:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2696],"body":{"id":1715,"nodeType":"Block","src":"2456:31:8","statements":[{"expression":{"id":1713,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"2473:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1712,"id":1714,"nodeType":"Return","src":"2466:14:8"}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"2358:31:8","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":1716,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:8","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[],"src":"2409:2:8"},"returnParameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2441:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1710,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:8"},"scope":2513,"src":"2394:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2704],"body":{"id":1751,"nodeType":"Block","src":"2608:176:8","statements":[{"expression":{"arguments":[{"id":1725,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2632:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1724,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2618:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1727,"nodeType":"ExpressionStatement","src":"2618:22:8"},{"assignments":[1729],"declarations":[{"constant":false,"id":1729,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:8","nodeType":"VariableDeclaration","scope":1751,"src":"2651:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1728,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1732,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1730,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2675:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:8"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1735,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"2708:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1733,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:8","typeDescriptions":{}}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:8","memberName":"length","nodeType":"MemberAccess","src":"2702:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:8","trueExpression":{"arguments":[{"id":1743,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"2744:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1744,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"2753:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1740,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:8","typeDescriptions":{}}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:8","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:8","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1723,"id":1750,"nodeType":"Return","src":"2695:82:8"}]},"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2493:31:8","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":1752,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:8","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:8","nodeType":"VariableDeclaration","scope":1752,"src":"2547:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:8"},"returnParameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1752,"src":"2593:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1721,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:8"},"scope":2513,"src":"2529:255:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1760,"nodeType":"Block","src":"3092:26:8","statements":[{"expression":{"hexValue":"","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1757,"id":1759,"nodeType":"Return","src":"3102:9:8"}]},"documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"2790:231:8","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1761,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:8","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[],"src":"3043:2:8"},"returnParameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1761,"src":"3077:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1755,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:8"},"scope":2513,"src":"3026:92:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2603],"body":{"id":1776,"nodeType":"Block","src":"3213:52:8","statements":[{"expression":{"arguments":[{"id":1770,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"3232:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1771,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"3236:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1772,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"3245:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1769,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2380,2446],"referencedDeclaration":2380,"src":"3223:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1775,"nodeType":"ExpressionStatement","src":"3223:35:8"}]},"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"3124:23:8","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:8","nodeType":"FunctionDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"to","nameLocation":"3177:2:8","nodeType":"VariableDeclaration","scope":1777,"src":"3169:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:8","nodeType":"VariableDeclaration","scope":1777,"src":"3181:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:8"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[],"src":"3213:0:8"},"scope":2513,"src":"3152:113:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2619],"body":{"id":1793,"nodeType":"Block","src":"3375:78:8","statements":[{"expression":{"arguments":[{"id":1786,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"3399:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1785,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3385:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1788,"nodeType":"ExpressionStatement","src":"3385:22:8"},{"expression":{"arguments":[{"id":1790,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"3438:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1789,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"3425:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1784,"id":1792,"nodeType":"Return","src":"3418:28:8"}]},"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"3271:23:8","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":1794,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:8","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:8","nodeType":"VariableDeclaration","scope":1794,"src":"3320:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:8"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"3366:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1782,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:8"},"scope":2513,"src":"3299:154:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2611],"body":{"id":1809,"nodeType":"Block","src":"3562:69:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1803,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"3591:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1805,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"3605:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1806,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"3615:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1802,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"3572:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"ExpressionStatement","src":"3572:52:8"}]},"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"3459:23:8","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":1810,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:8","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"operator","nameLocation":"3522:8:8","nodeType":"VariableDeclaration","scope":1810,"src":"3514:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"approved","nameLocation":"3537:8:8","nodeType":"VariableDeclaration","scope":1810,"src":"3532:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1798,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:8"},"returnParameters":{"id":1801,"nodeType":"ParameterList","parameters":[],"src":"3562:0:8"},"scope":2513,"src":"3487:144:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2629],"body":{"id":1826,"nodeType":"Block","src":"3759:59:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1820,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3776:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1822,"indexExpression":{"id":1821,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"3795:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1824,"indexExpression":{"id":1823,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"3802:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1819,"id":1825,"nodeType":"Return","src":"3769:42:8"}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"3637:23:8","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":1827,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:8","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"owner","nameLocation":"3699:5:8","nodeType":"VariableDeclaration","scope":1827,"src":"3691:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"operator","nameLocation":"3714:8:8","nodeType":"VariableDeclaration","scope":1827,"src":"3706:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:8"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1827,"src":"3753:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1817,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:8"},"scope":2513,"src":"3665:153:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2595],"body":{"id":1872,"nodeType":"Block","src":"3932:498:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1837,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3946:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:8","typeDescriptions":{}}},"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1851,"nodeType":"IfStatement","src":"3942:87:8","trueBody":{"id":1850,"nodeType":"Block","src":"3964:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1844,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:8","typeDescriptions":{}}},"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1843,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"3985:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1849,"nodeType":"RevertStatement","src":"3978:40:8"}]}},{"assignments":[1853],"declarations":[{"constant":false,"id":1853,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:8","nodeType":"VariableDeclaration","scope":1872,"src":"4247:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1860,"initialValue":{"arguments":[{"id":1855,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"4279:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1856,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"4283:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1857,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"4292:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1854,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"4271:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"4319:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1862,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"4336:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1871,"nodeType":"IfStatement","src":"4315:109:8","trueBody":{"id":1870,"nodeType":"Block","src":"4342:82:8","statements":[{"errorCall":{"arguments":[{"id":1865,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"4384:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1866,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"4390:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1867,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"4399:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1864,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4363:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1869,"nodeType":"RevertStatement","src":"4356:57:8"}]}}]},"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"3824:23:8","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:8","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"from","nameLocation":"3882:4:8","nodeType":"VariableDeclaration","scope":1873,"src":"3874:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"to","nameLocation":"3896:2:8","nodeType":"VariableDeclaration","scope":1873,"src":"3888:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:8","nodeType":"VariableDeclaration","scope":1873,"src":"3900:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:8"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[],"src":"3932:0:8"},"scope":2513,"src":"3852:578:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2585],"body":{"id":1890,"nodeType":"Block","src":"4540:56:8","statements":[{"expression":{"arguments":[{"id":1884,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"4567:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4573:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1886,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"4577:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1883,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1891,1921],"referencedDeclaration":1921,"src":"4550:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1889,"nodeType":"ExpressionStatement","src":"4550:39:8"}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"4436:23:8","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:8","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"from","nameLocation":"4498:4:8","nodeType":"VariableDeclaration","scope":1891,"src":"4490:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"to","nameLocation":"4512:2:8","nodeType":"VariableDeclaration","scope":1891,"src":"4504:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:8","nodeType":"VariableDeclaration","scope":1891,"src":"4516:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:8"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"4540:0:8"},"scope":2513,"src":"4464:132:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2575],"body":{"id":1920,"nodeType":"Block","src":"4733:130:8","statements":[{"expression":{"arguments":[{"id":1904,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4756:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1905,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"4762:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1906,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"4766:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1903,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"4743:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1908,"nodeType":"ExpressionStatement","src":"4743:31:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1912,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"4818:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1914,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4832:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1915,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"4838:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1916,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"4842:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"4851:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1909,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"4784:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2782_$","typeString":"type(library ERC721Utils)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2781,"src":"4784:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1919,"nodeType":"ExpressionStatement","src":"4784:72:8"}]},"documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"4602:23:8","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":1921,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:8","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"from","nameLocation":"4664:4:8","nodeType":"VariableDeclaration","scope":1921,"src":"4656:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"to","nameLocation":"4678:2:8","nodeType":"VariableDeclaration","scope":1921,"src":"4670:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:8","nodeType":"VariableDeclaration","scope":1921,"src":"4682:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"data","nameLocation":"4712:4:8","nodeType":"VariableDeclaration","scope":1921,"src":"4699:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1899,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:8"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[],"src":"4733:0:8"},"scope":2513,"src":"4630:233:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1933,"nodeType":"Block","src":"5453:40:8","statements":[{"expression":{"baseExpression":{"id":1929,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"5470:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1931,"indexExpression":{"id":1930,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"5478:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1928,"id":1932,"nodeType":"Return","src":"5463:23:8"}]},"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"4869:504:8","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1934,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:8","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:8","nodeType":"VariableDeclaration","scope":1934,"src":"5396:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:8"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1934,"src":"5444:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:8"},"scope":2513,"src":"5378:115:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1946,"nodeType":"Block","src":"5688:48:8","statements":[{"expression":{"baseExpression":{"id":1942,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"5705:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1944,"indexExpression":{"id":1943,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"5721:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1941,"id":1945,"nodeType":"Return","src":"5698:31:8"}]},"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"5499:105:8","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1947,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:8","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:8","nodeType":"VariableDeclaration","scope":1947,"src":"5631:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:8"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"5679:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:8"},"scope":2513,"src":"5609:127:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1982,"nodeType":"Block","src":"6156:163:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1959,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"6185:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:8","typeDescriptions":{}}},"id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1965,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"6223:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1966,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"6232:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1969,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"6260:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1970,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"6267:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1968,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"6243:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1974,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"6292:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1973,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"6279:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1976,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"6304:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1958,"id":1981,"nodeType":"Return","src":"6166:146:8"}]},"documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"5742:300:8","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1983,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:8","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"owner","nameLocation":"6078:5:8","nodeType":"VariableDeclaration","scope":1983,"src":"6070:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"spender","nameLocation":"6093:7:8","nodeType":"VariableDeclaration","scope":1983,"src":"6085:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:8","nodeType":"VariableDeclaration","scope":1983,"src":"6102:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1953,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:8"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1983,"src":"6150:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1956,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:8"},"scope":2513,"src":"6047:272:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2019,"nodeType":"Block","src":"6848:271:8","statements":[{"condition":{"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:8","subExpression":{"arguments":[{"id":1994,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"6877:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1995,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6884:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6893:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1993,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"6863:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2018,"nodeType":"IfStatement","src":"6858:255:8","trueBody":{"id":2017,"nodeType":"Block","src":"6903:210:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"6921:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2000,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:8","typeDescriptions":{}}},"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2015,"nodeType":"Block","src":"7019:84:8","statements":[{"errorCall":{"arguments":[{"id":2011,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"7071:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2012,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"7080:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2010,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"7044:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2014,"nodeType":"RevertStatement","src":"7037:51:8"}]},"id":2016,"nodeType":"IfStatement","src":"6917:186:8","trueBody":{"id":2009,"nodeType":"Block","src":"6942:71:8","statements":[{"errorCall":{"arguments":[{"id":2006,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2005,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6967:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2008,"nodeType":"RevertStatement","src":"6960:38:8"}]}}]}}]},"documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"6325:421:8","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:8","nodeType":"FunctionDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"owner","nameLocation":"6785:5:8","nodeType":"VariableDeclaration","scope":2020,"src":"6777:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1985,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"spender","nameLocation":"6800:7:8","nodeType":"VariableDeclaration","scope":2020,"src":"6792:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:8","nodeType":"VariableDeclaration","scope":2020,"src":"6809:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:8"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[],"src":"6848:0:8"},"scope":2513,"src":"6751:368:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2035,"nodeType":"Block","src":"7836:78:8","statements":[{"id":2034,"nodeType":"UncheckedBlock","src":"7846:62:8","statements":[{"expression":{"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2028,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"7870:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2030,"indexExpression":{"id":2029,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"7880:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"7892:5:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2033,"nodeType":"ExpressionStatement","src":"7870:27:8"}]}]},"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"7125:631:8","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":2036,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:8","nodeType":"FunctionDefinition","parameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"account","nameLocation":"7795:7:8","nodeType":"VariableDeclaration","scope":2036,"src":"7787:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"value","nameLocation":"7812:5:8","nodeType":"VariableDeclaration","scope":2036,"src":"7804:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2024,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:8"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[],"src":"7836:0:8"},"scope":2513,"src":"7761:153:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2125,"nodeType":"Block","src":"8602:700:8","statements":[{"assignments":[2049],"declarations":[{"constant":false,"id":2049,"mutability":"mutable","name":"from","nameLocation":"8620:4:8","nodeType":"VariableDeclaration","scope":2125,"src":"8612:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2048,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2053,"initialValue":{"arguments":[{"id":2051,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8636:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2050,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"8627:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2054,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8704:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:8","typeDescriptions":{}}},"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2067,"nodeType":"IfStatement","src":"8700:86:8","trueBody":{"id":2066,"nodeType":"Block","src":"8724:62:8","statements":[{"expression":{"arguments":[{"id":2061,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"8755:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2062,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8761:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2063,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8767:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2060,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"8738:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"8738:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2068,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"8830:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:8","typeDescriptions":{}}},"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2095,"nodeType":"IfStatement","src":"8826:256:8","trueBody":{"id":2094,"nodeType":"Block","src":"8850:232:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:8","typeDescriptions":{}}},"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2079,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8967:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:8","typeDescriptions":{}}},"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2074,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2380,2446],"referencedDeclaration":2446,"src":"8946:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"ExpressionStatement","src":"8946:48:8"},{"id":2093,"nodeType":"UncheckedBlock","src":"9009:63:8","statements":[{"expression":{"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2087,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"9037:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2089,"indexExpression":{"id":2088,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"9047:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2092,"nodeType":"ExpressionStatement","src":"9037:20:8"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2096,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"9096:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:8","typeDescriptions":{}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2110,"nodeType":"IfStatement","src":"9092:107:8","trueBody":{"id":2109,"nodeType":"Block","src":"9114:85:8","statements":[{"id":2108,"nodeType":"UncheckedBlock","src":"9128:61:8","statements":[{"expression":{"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2102,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"9156:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2104,"indexExpression":{"id":2103,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"9166:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2107,"nodeType":"ExpressionStatement","src":"9156:18:8"}]}]}},{"expression":{"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2111,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"9209:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2113,"indexExpression":{"id":2112,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9217:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2114,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"9228:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2116,"nodeType":"ExpressionStatement","src":"9209:21:8"},{"eventCall":{"arguments":[{"id":2118,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"9255:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2119,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"9261:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2120,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9265:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2117,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"9246:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2122,"nodeType":"EmitStatement","src":"9241:32:8"},{"expression":{"id":2123,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"9291:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2047,"id":2124,"nodeType":"Return","src":"9284:11:8"}]},"documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"7920:582:8","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2126,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:8","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"to","nameLocation":"8532:2:8","nodeType":"VariableDeclaration","scope":2126,"src":"8524:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:8","nodeType":"VariableDeclaration","scope":2126,"src":"8536:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"auth","nameLocation":"8561:4:8","nodeType":"VariableDeclaration","scope":2126,"src":"8553:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:8"},"returnParameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2126,"src":"8593:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:8"},"scope":2513,"src":"8507:795:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2175,"nodeType":"Block","src":"9677:274:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2134,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"9691:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:8","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2148,"nodeType":"IfStatement","src":"9687:87:8","trueBody":{"id":2147,"nodeType":"Block","src":"9709:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2141,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:8","typeDescriptions":{}}},"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2140,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"9730:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2146,"nodeType":"RevertStatement","src":"9723:40:8"}]}},{"assignments":[2150],"declarations":[{"constant":false,"id":2150,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:8","nodeType":"VariableDeclaration","scope":2175,"src":"9783:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2149,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2159,"initialValue":{"arguments":[{"id":2152,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"9815:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2153,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"9819:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2154,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:8","typeDescriptions":{}}},"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2151,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"9807:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2160,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"9853:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:8","typeDescriptions":{}}},"id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2174,"nodeType":"IfStatement","src":"9849:96:8","trueBody":{"id":2173,"nodeType":"Block","src":"9882:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:8","typeDescriptions":{}}},"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2166,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"9903:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2172,"nodeType":"RevertStatement","src":"9896:38:8"}]}}]},"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"9308:311:8","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2176,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:8","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"to","nameLocation":"9647:2:8","nodeType":"VariableDeclaration","scope":2176,"src":"9639:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2131,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:8","nodeType":"VariableDeclaration","scope":2176,"src":"9651:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:8"},"returnParameters":{"id":2133,"nodeType":"ParameterList","parameters":[],"src":"9677:0:8"},"scope":2513,"src":"9624:327:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2190,"nodeType":"Block","src":"10359:43:8","statements":[{"expression":{"arguments":[{"id":2185,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"10379:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2186,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"10383:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2184,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2191,2221],"referencedDeclaration":2221,"src":"10369:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2189,"nodeType":"ExpressionStatement","src":"10369:26:8"}]},"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"9957:340:8","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:8","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"to","nameLocation":"10329:2:8","nodeType":"VariableDeclaration","scope":2191,"src":"10321:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:8","nodeType":"VariableDeclaration","scope":2191,"src":"10333:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:8"},"returnParameters":{"id":2183,"nodeType":"ParameterList","parameters":[],"src":"10359:0:8"},"scope":2513,"src":"10302:100:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2220,"nodeType":"Block","src":"10707:123:8","statements":[{"expression":{"arguments":[{"id":2202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"10723:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2203,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"10727:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2201,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"10717:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2205,"nodeType":"ExpressionStatement","src":"10717:18:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2209,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"10779:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:8","typeDescriptions":{}}},"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2215,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"10805:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2216,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"10809:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2217,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"10818:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2206,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"10745:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2782_$","typeString":"type(library ERC721Utils)"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2781,"src":"10745:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2219,"nodeType":"ExpressionStatement","src":"10745:78:8"}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"10408:210:8","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2221,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:8","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"to","nameLocation":"10650:2:8","nodeType":"VariableDeclaration","scope":2221,"src":"10642:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2193,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2196,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:8","nodeType":"VariableDeclaration","scope":2221,"src":"10654:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2195,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"data","nameLocation":"10684:4:8","nodeType":"VariableDeclaration","scope":2221,"src":"10671:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2197,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:8"},"returnParameters":{"id":2200,"nodeType":"ParameterList","parameters":[],"src":"10707:0:8"},"scope":2513,"src":"10623:207:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2253,"nodeType":"Block","src":"11197:186:8","statements":[{"assignments":[2228],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:8","nodeType":"VariableDeclaration","scope":2253,"src":"11207:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2240,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2230,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:8","typeDescriptions":{}}},"id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2234,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"11251:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:8","typeDescriptions":{}}},"id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2229,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"11231:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"11285:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:8","typeDescriptions":{}}},"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2252,"nodeType":"IfStatement","src":"11281:96:8","trueBody":{"id":2251,"nodeType":"Block","src":"11314:63:8","statements":[{"errorCall":{"arguments":[{"id":2248,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"11358:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2247,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"11335:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2250,"nodeType":"RevertStatement","src":"11328:38:8"}]}}]},"documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"10836:315:8","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2254,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:8","nodeType":"FunctionDefinition","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:8","nodeType":"VariableDeclaration","scope":2254,"src":"11171:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:8"},"returnParameters":{"id":2226,"nodeType":"ParameterList","parameters":[],"src":"11197:0:8"},"scope":2513,"src":"11156:227:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2313,"nodeType":"Block","src":"11778:389:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"11792:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:8","typeDescriptions":{}}},"id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2278,"nodeType":"IfStatement","src":"11788:87:8","trueBody":{"id":2277,"nodeType":"Block","src":"11810:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:8","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2270,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"11831:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2276,"nodeType":"RevertStatement","src":"11824:40:8"}]}},{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:8","nodeType":"VariableDeclaration","scope":2313,"src":"11884:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2279,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2289,"initialValue":{"arguments":[{"id":2282,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"11916:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2283,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"11920:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:8","typeDescriptions":{}}},"id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2281,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"11908:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2290,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"11954:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:8","typeDescriptions":{}}},"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2301,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"12056:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2302,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"12073:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2311,"nodeType":"IfStatement","src":"12052:109:8","trueBody":{"id":2310,"nodeType":"Block","src":"12079:82:8","statements":[{"errorCall":{"arguments":[{"id":2305,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"12121:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2306,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"12127:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2307,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"12136:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2304,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"12100:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2309,"nodeType":"RevertStatement","src":"12093:57:8"}]}},"id":2312,"nodeType":"IfStatement","src":"11950:211:8","trueBody":{"id":2300,"nodeType":"Block","src":"11983:63:8","statements":[{"errorCall":{"arguments":[{"id":2297,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"12027:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2296,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"12004:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2299,"nodeType":"RevertStatement","src":"11997:38:8"}]}}]},"documentation":{"id":2255,"nodeType":"StructuredDocumentation","src":"11389:313:8","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2314,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:8","nodeType":"FunctionDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"from","nameLocation":"11734:4:8","nodeType":"VariableDeclaration","scope":2314,"src":"11726:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2259,"mutability":"mutable","name":"to","nameLocation":"11748:2:8","nodeType":"VariableDeclaration","scope":2314,"src":"11740:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:8","nodeType":"VariableDeclaration","scope":2314,"src":"11752:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2260,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:8"},"returnParameters":{"id":2263,"nodeType":"ParameterList","parameters":[],"src":"11778:0:8"},"scope":2513,"src":"11707:460:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2331,"nodeType":"Block","src":"13176:53:8","statements":[{"expression":{"arguments":[{"id":2325,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"13200:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2326,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"13206:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2327,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"13210:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2324,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2332,2362],"referencedDeclaration":2362,"src":"13186:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2330,"nodeType":"ExpressionStatement","src":"13186:36:8"}]},"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"12173:923:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:8","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"from","nameLocation":"13132:4:8","nodeType":"VariableDeclaration","scope":2332,"src":"13124:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"to","nameLocation":"13146:2:8","nodeType":"VariableDeclaration","scope":2332,"src":"13138:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2318,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:8","nodeType":"VariableDeclaration","scope":2332,"src":"13150:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:8"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[],"src":"13176:0:8"},"scope":2513,"src":"13101:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2361,"nodeType":"Block","src":"13568:127:8","statements":[{"expression":{"arguments":[{"id":2345,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"13588:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2346,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"13594:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2347,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"13598:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2344,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"13578:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2349,"nodeType":"ExpressionStatement","src":"13578:28:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2353,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"13650:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2355,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"13664:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2356,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"13670:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2357,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"13674:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2358,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"13683:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2350,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"13616:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2782_$","typeString":"type(library ERC721Utils)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2781,"src":"13616:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2360,"nodeType":"ExpressionStatement","src":"13616:72:8"}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"13235:226:8","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2362,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:8","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"from","nameLocation":"13497:4:8","nodeType":"VariableDeclaration","scope":2362,"src":"13489:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"to","nameLocation":"13511:2:8","nodeType":"VariableDeclaration","scope":2362,"src":"13503:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:8","nodeType":"VariableDeclaration","scope":2362,"src":"13515:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"data","nameLocation":"13545:4:8","nodeType":"VariableDeclaration","scope":2362,"src":"13532:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2340,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:8"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[],"src":"13568:0:8"},"scope":2513,"src":"13466:229:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2379,"nodeType":"Block","src":"14208:50:8","statements":[{"expression":{"arguments":[{"id":2373,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"14227:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2374,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"14231:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2375,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"14240:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2372,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2380,2446],"referencedDeclaration":2446,"src":"14218:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2378,"nodeType":"ExpressionStatement","src":"14218:33:8"}]},"documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"13701:432:8","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:8","nodeType":"FunctionDefinition","parameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"to","nameLocation":"14164:2:8","nodeType":"VariableDeclaration","scope":2380,"src":"14156:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2364,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:8","nodeType":"VariableDeclaration","scope":2380,"src":"14168:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"auth","nameLocation":"14193:4:8","nodeType":"VariableDeclaration","scope":2380,"src":"14185:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2368,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:8"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[],"src":"14208:0:8"},"scope":2513,"src":"14138:120:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2445,"nodeType":"Block","src":"14534:568:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2392,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"14600:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2393,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"14613:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2394,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:8","typeDescriptions":{}}},"id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2438,"nodeType":"IfStatement","src":"14596:460:8","trueBody":{"id":2437,"nodeType":"Block","src":"14633:423:8","statements":[{"assignments":[2401],"declarations":[{"constant":false,"id":2401,"mutability":"mutable","name":"owner","nameLocation":"14655:5:8","nodeType":"VariableDeclaration","scope":2437,"src":"14647:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2405,"initialValue":{"arguments":[{"id":2403,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"14677:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2402,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"14663:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"14813:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:8","typeDescriptions":{}}},"id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2412,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"14835:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2413,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"14844:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:8","subExpression":{"arguments":[{"id":2417,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"14870:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2418,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"14877:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2416,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"14853:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2427,"nodeType":"IfStatement","src":"14809:142:8","trueBody":{"id":2426,"nodeType":"Block","src":"14884:67:8","statements":[{"errorCall":{"arguments":[{"id":2423,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"14931:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2422,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"14909:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2425,"nodeType":"RevertStatement","src":"14902:34:8"}]}},{"condition":{"id":2428,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"14969:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2436,"nodeType":"IfStatement","src":"14965:81:8","trueBody":{"id":2435,"nodeType":"Block","src":"14980:66:8","statements":[{"eventCall":{"arguments":[{"id":2430,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"15012:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"15019:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2432,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"15023:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2429,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"15003:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2434,"nodeType":"EmitStatement","src":"14998:33:8"}]}}]}},{"expression":{"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2439,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"15066:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2441,"indexExpression":{"id":2440,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"15082:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2442,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"15093:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2444,"nodeType":"ExpressionStatement","src":"15066:29:8"}]},"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"14264:171:8","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2446,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:8","nodeType":"FunctionDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"to","nameLocation":"14466:2:8","nodeType":"VariableDeclaration","scope":2446,"src":"14458:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:8","nodeType":"VariableDeclaration","scope":2446,"src":"14470:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"auth","nameLocation":"14495:4:8","nodeType":"VariableDeclaration","scope":2446,"src":"14487:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2386,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2389,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:8","nodeType":"VariableDeclaration","scope":2446,"src":"14501:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2388,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:8"},"returnParameters":{"id":2391,"nodeType":"ParameterList","parameters":[],"src":"14534:0:8"},"scope":2513,"src":"14440:662:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2482,"nodeType":"Block","src":"15404:219:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"15418:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:8","typeDescriptions":{}}},"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2467,"nodeType":"IfStatement","src":"15414:91:8","trueBody":{"id":2466,"nodeType":"Block","src":"15442:63:8","statements":[{"errorCall":{"arguments":[{"id":2463,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"15485:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2462,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"15463:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2465,"nodeType":"RevertStatement","src":"15456:38:8"}]}},{"expression":{"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2468,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"15514:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2471,"indexExpression":{"id":2469,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"15533:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2472,"indexExpression":{"id":2470,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"15540:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2473,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"15552:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"nodeType":"ExpressionStatement","src":"15514:46:8"},{"eventCall":{"arguments":[{"id":2477,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"15590:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2478,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"15597:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2479,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"15607:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2476,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"15575:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2481,"nodeType":"EmitStatement","src":"15570:46:8"}]},"documentation":{"id":2447,"nodeType":"StructuredDocumentation","src":"15108:198:8","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2483,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:8","nodeType":"FunctionDefinition","parameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"owner","nameLocation":"15347:5:8","nodeType":"VariableDeclaration","scope":2483,"src":"15339:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2448,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2451,"mutability":"mutable","name":"operator","nameLocation":"15362:8:8","nodeType":"VariableDeclaration","scope":2483,"src":"15354:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2450,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2453,"mutability":"mutable","name":"approved","nameLocation":"15377:8:8","nodeType":"VariableDeclaration","scope":2483,"src":"15372:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2452,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:8"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[],"src":"15404:0:8"},"scope":2513,"src":"15311:312:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"15930:169:8","statements":[{"assignments":[2492],"declarations":[{"constant":false,"id":2492,"mutability":"mutable","name":"owner","nameLocation":"15948:5:8","nodeType":"VariableDeclaration","scope":2511,"src":"15940:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2491,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2496,"initialValue":{"arguments":[{"id":2494,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"15965:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2493,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"15956:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2497,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"15987:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2498,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:8","typeDescriptions":{}}},"id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2508,"nodeType":"IfStatement","src":"15983:88:8","trueBody":{"id":2507,"nodeType":"Block","src":"16008:63:8","statements":[{"errorCall":{"arguments":[{"id":2504,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"16052:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2503,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"16029:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2506,"nodeType":"RevertStatement","src":"16022:38:8"}]}},{"expression":{"id":2509,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"16087:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2490,"id":2510,"nodeType":"Return","src":"16080:12:8"}]},"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"15629:224:8","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:8","nodeType":"FunctionDefinition","parameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:8","nodeType":"VariableDeclaration","scope":2512,"src":"15881:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:8"},"returnParameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"15921:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:8"},"scope":2513,"src":"15858:241:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2514,"src":"775:15326:8","usedErrors":[215,220,229,234,239,246,251,256],"usedEvents":[2529,2538,2547]}],"src":"107:15995:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[6279],"IERC721":[2630]},"id":2631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2515,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2517,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2631,"sourceUnit":6280,"src":"134:62:9","symbolAliases":[{"foreign":{"id":2516,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"142:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2519,"name":"IERC165","nameLocations":["288:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":6279,"src":"288:7:9"},"id":2520,"nodeType":"InheritanceSpecifier","src":"288:7:9"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"198:68:9","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2630,"linearizedBaseContracts":[2630,6279],"name":"IERC721","nameLocation":"277:7:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"302:88:9","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2529,"name":"Transfer","nameLocation":"401:8:9","nodeType":"EventDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:9","nodeType":"VariableDeclaration","scope":2529,"src":"410:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2522,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2525,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:9","nodeType":"VariableDeclaration","scope":2529,"src":"432:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2524,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2527,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:9","nodeType":"VariableDeclaration","scope":2529,"src":"452:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2526,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:9"},"src":"395:82:9"},{"anonymous":false,"documentation":{"id":2530,"nodeType":"StructuredDocumentation","src":"483:94:9","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2538,"name":"Approval","nameLocation":"588:8:9","nodeType":"EventDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:9","nodeType":"VariableDeclaration","scope":2538,"src":"597:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2531,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2534,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:9","nodeType":"VariableDeclaration","scope":2538,"src":"620:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2536,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:9","nodeType":"VariableDeclaration","scope":2538,"src":"646:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:9"},"src":"582:89:9"},{"anonymous":false,"documentation":{"id":2539,"nodeType":"StructuredDocumentation","src":"677:117:9","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2547,"name":"ApprovalForAll","nameLocation":"805:14:9","nodeType":"EventDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:9","nodeType":"VariableDeclaration","scope":2547,"src":"820:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2540,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2543,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:9","nodeType":"VariableDeclaration","scope":2547,"src":"843:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2545,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:9","nodeType":"VariableDeclaration","scope":2547,"src":"869:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2544,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:9"},"src":"799:85:9"},{"documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"890:76:9","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2555,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:9","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"owner","nameLocation":"998:5:9","nodeType":"VariableDeclaration","scope":2555,"src":"990:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:9"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"balance","nameLocation":"1036:7:9","nodeType":"VariableDeclaration","scope":2555,"src":"1028:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:9"},"scope":2630,"src":"971:74:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"1051:131:9","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2563,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:9","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:9","nodeType":"VariableDeclaration","scope":2563,"src":"1204:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:9"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"owner","nameLocation":"1252:5:9","nodeType":"VariableDeclaration","scope":2563,"src":"1244:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2560,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:9"},"scope":2630,"src":"1187:72:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"1265:565:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2575,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:9","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"from","nameLocation":"1869:4:9","nodeType":"VariableDeclaration","scope":2575,"src":"1861:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2565,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"to","nameLocation":"1883:2:9","nodeType":"VariableDeclaration","scope":2575,"src":"1875:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2567,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:9","nodeType":"VariableDeclaration","scope":2575,"src":"1887:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"data","nameLocation":"1919:4:9","nodeType":"VariableDeclaration","scope":2575,"src":"1904:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2571,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:9"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[],"src":"1933:0:9"},"scope":2630,"src":"1835:99:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"1940:706:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2585,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:9","nodeType":"FunctionDefinition","parameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"from","nameLocation":"2685:4:9","nodeType":"VariableDeclaration","scope":2585,"src":"2677:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"to","nameLocation":"2699:2:9","nodeType":"VariableDeclaration","scope":2585,"src":"2691:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2582,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:9","nodeType":"VariableDeclaration","scope":2585,"src":"2703:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:9"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[],"src":"2728:0:9"},"scope":2630,"src":"2651:78:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"2735:733:9","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2595,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:9","nodeType":"FunctionDefinition","parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"from","nameLocation":"3503:4:9","nodeType":"VariableDeclaration","scope":2595,"src":"3495:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2587,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"to","nameLocation":"3517:2:9","nodeType":"VariableDeclaration","scope":2595,"src":"3509:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:9","nodeType":"VariableDeclaration","scope":2595,"src":"3521:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:9"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[],"src":"3546:0:9"},"scope":2630,"src":"3473:74:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"3553:452:9","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2603,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:9","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"to","nameLocation":"4035:2:9","nodeType":"VariableDeclaration","scope":2603,"src":"4027:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2597,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:9","nodeType":"VariableDeclaration","scope":2603,"src":"4039:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:9"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[],"src":"4064:0:9"},"scope":2630,"src":"4010:55:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"4071:315:9","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2611,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:9","nodeType":"FunctionDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"operator","nameLocation":"4426:8:9","nodeType":"VariableDeclaration","scope":2611,"src":"4418:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"approved","nameLocation":"4441:8:9","nodeType":"VariableDeclaration","scope":2611,"src":"4436:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2607,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:9"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[],"src":"4459:0:9"},"scope":2630,"src":"4391:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2612,"nodeType":"StructuredDocumentation","src":"4466:139:9","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2619,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:9","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:9","nodeType":"VariableDeclaration","scope":2619,"src":"4631:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:9"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"operator","nameLocation":"4679:8:9","nodeType":"VariableDeclaration","scope":2619,"src":"4671:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2616,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:9"},"scope":2630,"src":"4610:79:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2620,"nodeType":"StructuredDocumentation","src":"4695:138:9","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2629,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:9","nodeType":"FunctionDefinition","parameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"owner","nameLocation":"4872:5:9","nodeType":"VariableDeclaration","scope":2629,"src":"4864:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"operator","nameLocation":"4887:8:9","nodeType":"VariableDeclaration","scope":2629,"src":"4879:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:9"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"4920:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2626,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:9"},"scope":2630,"src":"4838:88:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2631,"src":"267:4661:9","usedErrors":[],"usedEvents":[2529,2538,2547]}],"src":"108:4821:9"},"id":9},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2648]},"id":2649,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2632,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"142:154:10","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2648,"linearizedBaseContracts":[2648],"name":"IERC721Receiver","nameLocation":"307:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"329:500:10","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2647,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:10","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"operator","nameLocation":"877:8:10","nodeType":"VariableDeclaration","scope":2647,"src":"869:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2638,"mutability":"mutable","name":"from","nameLocation":"903:4:10","nodeType":"VariableDeclaration","scope":2647,"src":"895:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2640,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:10","nodeType":"VariableDeclaration","scope":2647,"src":"917:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"data","nameLocation":"957:4:10","nodeType":"VariableDeclaration","scope":2647,"src":"942:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2641,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:10"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2647,"src":"986:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2644,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:10"},"scope":2648,"src":"834:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2649,"src":"297:699:10","usedErrors":[],"usedEvents":[]}],"src":"116:881:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","exportedSymbols":{"Context":[4444],"ERC721":[2513],"ERC721Burnable":[2677]},"id":2678,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2650,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2678,"sourceUnit":2514,"src":"152:37:11","symbolAliases":[{"foreign":{"id":2651,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"160:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":2654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2678,"sourceUnit":4445,"src":"190:51:11","symbolAliases":[{"foreign":{"id":2653,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"198:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2656,"name":"Context","nameLocations":["374:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4444,"src":"374:7:11"},"id":2657,"nodeType":"InheritanceSpecifier","src":"374:7:11"},{"baseName":{"id":2658,"name":"ERC721","nameLocations":["383:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"383:6:11"},"id":2659,"nodeType":"InheritanceSpecifier","src":"383:6:11"}],"canonicalName":"ERC721Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"243:94:11","text":" @title ERC-721 Burnable Token\n @dev ERC-721 Token that can be burned (destroyed)."},"fullyImplemented":true,"id":2677,"linearizedBaseContracts":[2677,2513,257,2705,2630,6267,6279,4444],"name":"ERC721Burnable","nameLocation":"356:14:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2675,"nodeType":"Block","src":"609:268:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"844:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"836:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:11","typeDescriptions":{}}},"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"836:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2670,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"848:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2671,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"857:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"857:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2665,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"828:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"828:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2674,"nodeType":"ExpressionStatement","src":"828:42:11"}]},"documentation":{"id":2660,"nodeType":"StructuredDocumentation","src":"396:162:11","text":" @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."},"functionSelector":"42966c68","id":2676,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"572:4:11","nodeType":"FunctionDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"tokenId","nameLocation":"585:7:11","nodeType":"VariableDeclaration","scope":2676,"src":"577:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"576:17:11"},"returnParameters":{"id":2664,"nodeType":"ParameterList","parameters":[],"src":"609:0:11"},"scope":2677,"src":"563:314:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2678,"src":"338:541:11","usedErrors":[215,220,229,234,239,246,251,256],"usedEvents":[2529,2538,2547]}],"src":"126:754:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2630],"IERC721Metadata":[2705]},"id":2706,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2679,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2681,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2706,"sourceUnit":2631,"src":"153:39:12","symbolAliases":[{"foreign":{"id":2680,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"161:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2683,"name":"IERC721","nameLocations":["357:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2630,"src":"357:7:12"},"id":2684,"nodeType":"InheritanceSpecifier","src":"357:7:12"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"194:133:12","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2705,"linearizedBaseContracts":[2705,2630,6279],"name":"IERC721Metadata","nameLocation":"338:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2685,"nodeType":"StructuredDocumentation","src":"371:58:12","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2690,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:12","nodeType":"FunctionDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[],"src":"447:2:12"},"returnParameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2690,"src":"473:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2687,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:12"},"scope":2705,"src":"434:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"494:60:12","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2696,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:12","nodeType":"FunctionDefinition","parameters":{"id":2692,"nodeType":"ParameterList","parameters":[],"src":"574:2:12"},"returnParameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"600:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2693,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:12"},"scope":2705,"src":"559:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2697,"nodeType":"StructuredDocumentation","src":"621:90:12","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2704,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:12","nodeType":"FunctionDefinition","parameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:12","nodeType":"VariableDeclaration","scope":2704,"src":"734:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:12"},"returnParameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2704,"src":"774:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2701,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:12"},"scope":2705,"src":"716:73:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2706,"src":"328:463:12","usedErrors":[],"usedEvents":[2529,2538,2547]}],"src":"127:665:12"},"id":12},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2782],"IERC721Errors":[257],"IERC721Receiver":[2648]},"id":2783,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2707,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2709,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2783,"sourceUnit":2649,"src":"144:55:13","symbolAliases":[{"foreign":{"id":2708,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"152:15:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2711,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2783,"sourceUnit":305,"src":"200:69:13","symbolAliases":[{"foreign":{"id":2710,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"208:13:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"271:159:13","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2782,"linearizedBaseContracts":[2782],"name":"ERC721Utils","nameLocation":"439:11:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2780,"nodeType":"Block","src":"1159:760:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2726,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"1173:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:13","memberName":"code","nodeType":"MemberAccess","src":"1173:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:13","memberName":"length","nodeType":"MemberAccess","src":"1173:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2779,"nodeType":"IfStatement","src":"1169:744:13","trueBody":{"id":2778,"nodeType":"Block","src":"1193:720:13","statements":[{"clauses":[{"block":{"id":2756,"nodeType":"Block","src":"1303:214:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1325:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2744,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"1335:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2648_$","typeString":"type(contract IERC721Receiver)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:13","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2647,"src":"1335:32:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:13","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2755,"nodeType":"IfStatement","src":"1321:182:13","trueBody":{"id":2754,"nodeType":"Block","src":"1378:125:13","statements":[{"errorCall":{"arguments":[{"id":2751,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"1481:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2748,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1445:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$257_$","typeString":"type(contract IERC721Errors)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:13","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":239,"src":"1445:35:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2753,"nodeType":"RevertStatement","src":"1438:46:13"}]}}]},"errorName":"","id":2757,"nodeType":"TryCatchClause","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"retval","nameLocation":"1295:6:13","nodeType":"VariableDeclaration","scope":2757,"src":"1288:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2740,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:13"},"src":"1279:238:13"},{"block":{"id":2775,"nodeType":"Block","src":"1546:357:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2761,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"1568:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:13","memberName":"length","nodeType":"MemberAccess","src":"1568:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2773,"nodeType":"Block","src":"1736:153:13","statements":[{"AST":{"nativeSrc":"1783:88:13","nodeType":"YulBlock","src":"1783:88:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1820:6:13","nodeType":"YulIdentifier","src":"1820:6:13"},{"kind":"number","nativeSrc":"1828:4:13","nodeType":"YulLiteral","src":"1828:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1816:3:13","nodeType":"YulIdentifier","src":"1816:3:13"},"nativeSrc":"1816:17:13","nodeType":"YulFunctionCall","src":"1816:17:13"},{"arguments":[{"name":"reason","nativeSrc":"1841:6:13","nodeType":"YulIdentifier","src":"1841:6:13"}],"functionName":{"name":"mload","nativeSrc":"1835:5:13","nodeType":"YulIdentifier","src":"1835:5:13"},"nativeSrc":"1835:13:13","nodeType":"YulFunctionCall","src":"1835:13:13"}],"functionName":{"name":"revert","nativeSrc":"1809:6:13","nodeType":"YulIdentifier","src":"1809:6:13"},"nativeSrc":"1809:40:13","nodeType":"YulFunctionCall","src":"1809:40:13"},"nativeSrc":"1809:40:13","nodeType":"YulExpressionStatement","src":"1809:40:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2759,"isOffset":false,"isSlot":false,"src":"1820:6:13","valueSize":1},{"declaration":2759,"isOffset":false,"isSlot":false,"src":"1841:6:13","valueSize":1}],"flags":["memory-safe"],"id":2772,"nodeType":"InlineAssembly","src":"1758:113:13"}]},"id":2774,"nodeType":"IfStatement","src":"1564:325:13","trueBody":{"id":2771,"nodeType":"Block","src":"1588:142:13","statements":[{"errorCall":{"arguments":[{"id":2768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"1708:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2765,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1672:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$257_$","typeString":"type(contract IERC721Errors)"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:13","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":239,"src":"1672:35:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2770,"nodeType":"RevertStatement","src":"1665:46:13"}]}}]},"errorName":"","id":2776,"nodeType":"TryCatchClause","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"reason","nameLocation":"1538:6:13","nodeType":"VariableDeclaration","scope":2776,"src":"1525:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2758,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:13"},"src":"1518:385:13"}],"externalCall":{"arguments":[{"id":2735,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"1248:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2736,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"1258:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2737,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1264:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2738,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"1273:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2732,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"1227:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2731,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"1211:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2648_$","typeString":"type(contract IERC721Receiver)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2648","typeString":"contract IERC721Receiver"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:13","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2647,"src":"1211:36:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:13","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2777,"nodeType":"TryStatement","src":"1207:696:13"}]}}]},"documentation":{"id":2713,"nodeType":"StructuredDocumentation","src":"457:531:13","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:13","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"operator","nameLocation":"1041:8:13","nodeType":"VariableDeclaration","scope":2781,"src":"1033:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2714,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"from","nameLocation":"1067:4:13","nodeType":"VariableDeclaration","scope":2781,"src":"1059:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"to","nameLocation":"1089:2:13","nodeType":"VariableDeclaration","scope":2781,"src":"1081:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2718,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:13","nodeType":"VariableDeclaration","scope":2781,"src":"1101:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"data","nameLocation":"1139:4:13","nodeType":"VariableDeclaration","scope":2781,"src":"1126:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2722,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:13"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[],"src":"1159:0:13"},"scope":2782,"src":"993:926:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2783,"src":"431:1490:13","usedErrors":[],"usedEvents":[]}],"src":"118:1804:13"},"id":13},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","exportedSymbols":{"ERC165":[6267],"ERC2981":[3049],"IERC165":[6279],"IERC2981":[167]},"id":3050,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2784,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:14"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","file":"../../interfaces/IERC2981.sol","id":2786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3050,"sourceUnit":168,"src":"134:55:14","symbolAliases":[{"foreign":{"id":2785,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"142:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":2789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3050,"sourceUnit":6268,"src":"190:69:14","symbolAliases":[{"foreign":{"id":2787,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"198:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2788,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6267,"src":"207:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2791,"name":"IERC2981","nameLocations":["1135:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":167,"src":"1135:8:14"},"id":2792,"nodeType":"InheritanceSpecifier","src":"1135:8:14"},{"baseName":{"id":2793,"name":"ERC165","nameLocations":["1145:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6267,"src":"1145:6:14"},"id":2794,"nodeType":"InheritanceSpecifier","src":"1145:6:14"}],"canonicalName":"ERC2981","contractDependencies":[],"contractKind":"contract","documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"261:844:14","text":" @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."},"fullyImplemented":true,"id":3049,"linearizedBaseContracts":[3049,6267,167,6279],"name":"ERC2981","nameLocation":"1124:7:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC2981.RoyaltyInfo","id":2799,"members":[{"constant":false,"id":2796,"mutability":"mutable","name":"receiver","nameLocation":"1195:8:14","nodeType":"VariableDeclaration","scope":2799,"src":"1187:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2795,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"royaltyFraction","nameLocation":"1220:15:14","nodeType":"VariableDeclaration","scope":2799,"src":"1213:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2797,"name":"uint96","nodeType":"ElementaryTypeName","src":"1213:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"RoyaltyInfo","nameLocation":"1165:11:14","nodeType":"StructDefinition","scope":3049,"src":"1158:84:14","visibility":"public"},{"constant":false,"id":2802,"mutability":"mutable","name":"_defaultRoyaltyInfo","nameLocation":"1268:19:14","nodeType":"VariableDeclaration","scope":3049,"src":"1248:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":2801,"nodeType":"UserDefinedTypeName","pathNode":{"id":2800,"name":"RoyaltyInfo","nameLocations":["1248:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2799,"src":"1248:11:14"},"referencedDeclaration":2799,"src":"1248:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"private"},{"constant":false,"id":2807,"mutability":"mutable","name":"_tokenRoyaltyInfo","nameLocation":"1341:17:14","nodeType":"VariableDeclaration","scope":3049,"src":"1293:65:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2799_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"typeName":{"id":2806,"keyName":"tokenId","keyNameLocation":"1309:7:14","keyType":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1293:39:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2799_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2805,"nodeType":"UserDefinedTypeName","pathNode":{"id":2804,"name":"RoyaltyInfo","nameLocations":["1320:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2799,"src":"1320:11:14"},"referencedDeclaration":2799,"src":"1320:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}}},"visibility":"private"},{"documentation":{"id":2808,"nodeType":"StructuredDocumentation","src":"1365:96:14","text":" @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"6f483d09","id":2814,"name":"ERC2981InvalidDefaultRoyalty","nameLocation":"1472:28:14","nodeType":"ErrorDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"numerator","nameLocation":"1509:9:14","nodeType":"VariableDeclaration","scope":2814,"src":"1501:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1501:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"denominator","nameLocation":"1528:11:14","nodeType":"VariableDeclaration","scope":2814,"src":"1520:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1500:40:14"},"src":"1466:75:14"},{"documentation":{"id":2815,"nodeType":"StructuredDocumentation","src":"1547:64:14","text":" @dev The default royalty receiver is invalid."},"errorSelector":"b6d9900a","id":2819,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nameLocation":"1622:36:14","nodeType":"ErrorDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"receiver","nameLocation":"1667:8:14","nodeType":"VariableDeclaration","scope":2819,"src":"1659:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2816,"name":"address","nodeType":"ElementaryTypeName","src":"1659:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1658:18:14"},"src":"1616:61:14"},{"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"1683:113:14","text":" @dev The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"dfd1fc1b","id":2828,"name":"ERC2981InvalidTokenRoyalty","nameLocation":"1807:26:14","nodeType":"ErrorDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"tokenId","nameLocation":"1842:7:14","nodeType":"VariableDeclaration","scope":2828,"src":"1834:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"numerator","nameLocation":"1859:9:14","nodeType":"VariableDeclaration","scope":2828,"src":"1851:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"denominator","nameLocation":"1878:11:14","nodeType":"VariableDeclaration","scope":2828,"src":"1870:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:57:14"},"src":"1801:90:14"},{"documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"1897:70:14","text":" @dev The royalty receiver for `tokenId` is invalid."},"errorSelector":"969f0852","id":2835,"name":"ERC2981InvalidTokenRoyaltyReceiver","nameLocation":"1978:34:14","nodeType":"ErrorDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"tokenId","nameLocation":"2021:7:14","nodeType":"VariableDeclaration","scope":2835,"src":"2013:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"receiver","nameLocation":"2038:8:14","nodeType":"VariableDeclaration","scope":2835,"src":"2030:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"2030:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2012:35:14"},"src":"1972:76:14"},{"baseFunctions":[6266,6278],"body":{"id":2858,"nodeType":"Block","src":"2190:105:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2846,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"2207:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2848,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2227:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2981_$167_$","typeString":"type(contract IERC2981)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC2981_$167_$","typeString":"type(contract IERC2981)"}],"id":2847,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2222:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2222:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC2981_$167","typeString":"type(contract IERC2981)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2237:11:14","memberName":"interfaceId","nodeType":"MemberAccess","src":"2222:26:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2207:41:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2854,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"2276:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2852,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2252:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2981_$3049_$","typeString":"type(contract super ERC2981)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2258:17:14","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6266,"src":"2252:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2252:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2207:81:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2845,"id":2857,"nodeType":"Return","src":"2200:88:14"}]},"documentation":{"id":2836,"nodeType":"StructuredDocumentation","src":"2054:23:14","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2859,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2091:17:14","nodeType":"FunctionDefinition","overrides":{"id":2842,"nodeType":"OverrideSpecifier","overrides":[{"id":2840,"name":"IERC165","nameLocations":["2158:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":6279,"src":"2158:7:14"},{"id":2841,"name":"ERC165","nameLocations":["2167:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6267,"src":"2167:6:14"}],"src":"2149:25:14"},"parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"interfaceId","nameLocation":"2116:11:14","nodeType":"VariableDeclaration","scope":2859,"src":"2109:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2837,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2109:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2108:20:14"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2859,"src":"2184:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2843,"name":"bool","nodeType":"ElementaryTypeName","src":"2184:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2183:6:14"},"scope":3049,"src":"2082:213:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[166],"body":{"id":2920,"nodeType":"Block","src":"2472:515:14","statements":[{"assignments":[2873],"declarations":[{"constant":false,"id":2873,"mutability":"mutable","name":"_royaltyInfo","nameLocation":"2502:12:14","nodeType":"VariableDeclaration","scope":2920,"src":"2482:32:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":2872,"nodeType":"UserDefinedTypeName","pathNode":{"id":2871,"name":"RoyaltyInfo","nameLocations":["2482:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2799,"src":"2482:11:14"},"referencedDeclaration":2799,"src":"2482:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"internal"}],"id":2877,"initialValue":{"baseExpression":{"id":2874,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"2517:17:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2799_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2876,"indexExpression":{"id":2875,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"2535:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2517:26:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2482:61:14"},{"assignments":[2879],"declarations":[{"constant":false,"id":2879,"mutability":"mutable","name":"royaltyReceiver","nameLocation":"2561:15:14","nodeType":"VariableDeclaration","scope":2920,"src":"2553:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2878,"name":"address","nodeType":"ElementaryTypeName","src":"2553:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2882,"initialValue":{"expression":{"id":2880,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"2579:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":2881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2592:8:14","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":2796,"src":"2579:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2553:47:14"},{"assignments":[2884],"declarations":[{"constant":false,"id":2884,"mutability":"mutable","name":"royaltyFraction","nameLocation":"2617:15:14","nodeType":"VariableDeclaration","scope":2920,"src":"2610:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2883,"name":"uint96","nodeType":"ElementaryTypeName","src":"2610:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":2887,"initialValue":{"expression":{"id":2885,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"2635:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":2886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2648:15:14","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":2798,"src":"2635:28:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"2610:53:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2888,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"2678:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2705:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2697:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"2697:7:14","typeDescriptions":{}}},"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2697:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2678:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2905,"nodeType":"IfStatement","src":"2674:173:14","trueBody":{"id":2904,"nodeType":"Block","src":"2709:138:14","statements":[{"expression":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2894,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"2723:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2895,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"2741:19:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:14","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":2796,"src":"2741:28:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2723:46:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2898,"nodeType":"ExpressionStatement","src":"2723:46:14"},{"expression":{"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2899,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"2783:15:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2900,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"2801:19:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2821:15:14","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":2798,"src":"2801:35:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2783:53:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2903,"nodeType":"ExpressionStatement","src":"2783:53:14"}]}},{"assignments":[2907],"declarations":[{"constant":false,"id":2907,"mutability":"mutable","name":"royaltyAmount","nameLocation":"2865:13:14","nodeType":"VariableDeclaration","scope":2920,"src":"2857:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2857:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2915,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2908,"name":"salePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"2882:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2909,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"2894:15:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2882:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2881:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2912,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"2913:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2881:49:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2857:73:14"},{"expression":{"components":[{"id":2916,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"2949:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2917,"name":"royaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2966:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2948:32:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":2870,"id":2919,"nodeType":"Return","src":"2941:39:14"}]},"documentation":{"id":2860,"nodeType":"StructuredDocumentation","src":"2301:24:14","text":"@inheritdoc IERC2981"},"functionSelector":"2a55205a","id":2921,"implemented":true,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"2339:11:14","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"tokenId","nameLocation":"2368:7:14","nodeType":"VariableDeclaration","scope":2921,"src":"2360:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"2360:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2864,"mutability":"mutable","name":"salePrice","nameLocation":"2393:9:14","nodeType":"VariableDeclaration","scope":2921,"src":"2385:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"2385:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2350:58:14"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"receiver","nameLocation":"2446:8:14","nodeType":"VariableDeclaration","scope":2921,"src":"2438:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2866,"name":"address","nodeType":"ElementaryTypeName","src":"2438:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2869,"mutability":"mutable","name":"amount","nameLocation":"2464:6:14","nodeType":"VariableDeclaration","scope":2921,"src":"2456:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"2456:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2437:34:14"},"scope":3049,"src":"2330:657:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2929,"nodeType":"Block","src":"3328:29:14","statements":[{"expression":{"hexValue":"3130303030","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3345:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"functionReturnParameters":2926,"id":2928,"nodeType":"Return","src":"3338:12:14"}]},"documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"2993:264:14","text":" @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."},"id":2930,"implemented":true,"kind":"function","modifiers":[],"name":"_feeDenominator","nameLocation":"3271:15:14","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[],"src":"3286:2:14"},"returnParameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2930,"src":"3320:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2924,"name":"uint96","nodeType":"ElementaryTypeName","src":"3320:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3319:8:14"},"scope":3049,"src":"3262:95:14","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":2975,"nodeType":"Block","src":"3702:423:14","statements":[{"assignments":[2939],"declarations":[{"constant":false,"id":2939,"mutability":"mutable","name":"denominator","nameLocation":"3720:11:14","nodeType":"VariableDeclaration","scope":2975,"src":"3712:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3712:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2942,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2940,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"3734:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3712:39:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2943,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"3765:12:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2944,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3780:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3765:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2952,"nodeType":"IfStatement","src":"3761:173:14","trueBody":{"id":2951,"nodeType":"Block","src":"3793:141:14","statements":[{"errorCall":{"arguments":[{"id":2947,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"3897:12:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2948,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3911:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2946,"name":"ERC2981InvalidDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"3868:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2950,"nodeType":"RevertStatement","src":"3861:62:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"3947:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3967:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3959:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2954,"name":"address","nodeType":"ElementaryTypeName","src":"3959:7:14","typeDescriptions":{}}},"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3959:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3947:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2967,"nodeType":"IfStatement","src":"3943:108:14","trueBody":{"id":2966,"nodeType":"Block","src":"3971:80:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4037:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4029:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2960,"name":"address","nodeType":"ElementaryTypeName","src":"4029:7:14","typeDescriptions":{}}},"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2959,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"3992:36:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3992:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2965,"nodeType":"RevertStatement","src":"3985:55:14"}]}},{"expression":{"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2968,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"4061:19:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2970,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"4095:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2971,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"4105:12:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2969,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"4083:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$2799_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4083:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"4061:57:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2974,"nodeType":"ExpressionStatement","src":"4061:57:14"}]},"documentation":{"id":2931,"nodeType":"StructuredDocumentation","src":"3363:250:14","text":" @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":2976,"implemented":true,"kind":"function","modifiers":[],"name":"_setDefaultRoyalty","nameLocation":"3627:18:14","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"receiver","nameLocation":"3654:8:14","nodeType":"VariableDeclaration","scope":2976,"src":"3646:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2932,"name":"address","nodeType":"ElementaryTypeName","src":"3646:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"feeNumerator","nameLocation":"3671:12:14","nodeType":"VariableDeclaration","scope":2976,"src":"3664:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2934,"name":"uint96","nodeType":"ElementaryTypeName","src":"3664:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3645:39:14"},"returnParameters":{"id":2937,"nodeType":"ParameterList","parameters":[],"src":"3702:0:14"},"scope":3049,"src":"3618:507:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2983,"nodeType":"Block","src":"4246:43:14","statements":[{"expression":{"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4256:26:14","subExpression":{"id":2980,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"4263:19:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2982,"nodeType":"ExpressionStatement","src":"4256:26:14"}]},"documentation":{"id":2977,"nodeType":"StructuredDocumentation","src":"4131:60:14","text":" @dev Removes default royalty information."},"id":2984,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteDefaultRoyalty","nameLocation":"4205:21:14","nodeType":"FunctionDefinition","parameters":{"id":2978,"nodeType":"ParameterList","parameters":[],"src":"4226:2:14"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[],"src":"4246:0:14"},"scope":3049,"src":"4196:93:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3035,"nodeType":"Block","src":"4658:444:14","statements":[{"assignments":[2995],"declarations":[{"constant":false,"id":2995,"mutability":"mutable","name":"denominator","nameLocation":"4676:11:14","nodeType":"VariableDeclaration","scope":3035,"src":"4668:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"4668:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2998,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2996,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"4690:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4668:39:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"4721:12:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3000,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"4736:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4721:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3009,"nodeType":"IfStatement","src":"4717:180:14","trueBody":{"id":3008,"nodeType":"Block","src":"4749:148:14","statements":[{"errorCall":{"arguments":[{"id":3003,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4851:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3004,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"4860:12:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3005,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"4874:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3002,"name":"ERC2981InvalidTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"4824:26:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4824:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3007,"nodeType":"RevertStatement","src":"4817:69:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"4910:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4930:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4922:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"4922:7:14","typeDescriptions":{}}},"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4922:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4910:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3025,"nodeType":"IfStatement","src":"4906:115:14","trueBody":{"id":3024,"nodeType":"Block","src":"4934:87:14","statements":[{"errorCall":{"arguments":[{"id":3017,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5007:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4999:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3018,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:14","typeDescriptions":{}}},"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4999:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3016,"name":"ERC2981InvalidTokenRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"4955:34:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) pure"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4955:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3023,"nodeType":"RevertStatement","src":"4948:62:14"}]}},{"expression":{"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3026,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"5031:17:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2799_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":3028,"indexExpression":{"id":3027,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"5049:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5031:26:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3030,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5072:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3031,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"5082:12:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3029,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"5060:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$2799_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5060:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"5031:64:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":3034,"nodeType":"ExpressionStatement","src":"5031:64:14"}]},"documentation":{"id":2985,"nodeType":"StructuredDocumentation","src":"4295:259:14","text":" @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":3036,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenRoyalty","nameLocation":"4568:16:14","nodeType":"FunctionDefinition","parameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"tokenId","nameLocation":"4593:7:14","nodeType":"VariableDeclaration","scope":3036,"src":"4585:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint256","nodeType":"ElementaryTypeName","src":"4585:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2989,"mutability":"mutable","name":"receiver","nameLocation":"4610:8:14","nodeType":"VariableDeclaration","scope":3036,"src":"4602:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2988,"name":"address","nodeType":"ElementaryTypeName","src":"4602:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"feeNumerator","nameLocation":"4627:12:14","nodeType":"VariableDeclaration","scope":3036,"src":"4620:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2990,"name":"uint96","nodeType":"ElementaryTypeName","src":"4620:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4584:56:14"},"returnParameters":{"id":2993,"nodeType":"ParameterList","parameters":[],"src":"4658:0:14"},"scope":3049,"src":"4559:543:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3047,"nodeType":"Block","src":"5270:50:14","statements":[{"expression":{"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5280:33:14","subExpression":{"baseExpression":{"id":3042,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"5287:17:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2799_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":3044,"indexExpression":{"id":3043,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"5305:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5287:26:14","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2799_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3046,"nodeType":"ExpressionStatement","src":"5280:33:14"}]},"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"5108:95:14","text":" @dev Resets royalty information for the token id back to the global default."},"id":3048,"implemented":true,"kind":"function","modifiers":[],"name":"_resetTokenRoyalty","nameLocation":"5217:18:14","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"tokenId","nameLocation":"5244:7:14","nodeType":"VariableDeclaration","scope":3048,"src":"5236:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5235:17:14"},"returnParameters":{"id":3041,"nodeType":"ParameterList","parameters":[],"src":"5270:0:14"},"scope":3049,"src":"5208:112:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3050,"src":"1106:4216:14","usedErrors":[2814,2819,2828,2835],"usedEvents":[]}],"src":"108:5215:14"},"id":14},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3309],"Errors":[4466]},"id":3310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3051,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":3053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3310,"sourceUnit":4467,"src":"127:36:15","symbolAliases":[{"foreign":{"id":3052,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"135:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"165:67:15","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3309,"linearizedBaseContracts":[3309],"name":"Address","nameLocation":"241:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3055,"nodeType":"StructuredDocumentation","src":"255:75:15","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":3059,"name":"AddressEmptyCode","nameLocation":"341:16:15","nodeType":"ErrorDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"target","nameLocation":"366:6:15","nodeType":"VariableDeclaration","scope":3059,"src":"358:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3056,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:15"},"src":"335:39:15"},{"body":{"id":3106,"nodeType":"Block","src":"1361:294:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3069,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3309","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3309","typeString":"library Address"}],"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3067,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:15","typeDescriptions":{}}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:15","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3072,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"1399:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3086,"nodeType":"IfStatement","src":"1371:125:15","trueBody":{"id":3085,"nodeType":"Block","src":"1407:89:15","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3079,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3309","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3309","typeString":"library Address"}],"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3077,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:15","typeDescriptions":{}}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:15","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3082,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"1478:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3074,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"1428:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4466_$","typeString":"type(library Errors)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:15","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4454,"src":"1428:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3084,"nodeType":"RevertStatement","src":"1421:64:15"}]}},{"assignments":[3088,3090],"declarations":[{"constant":false,"id":3088,"mutability":"mutable","name":"success","nameLocation":"1512:7:15","nodeType":"VariableDeclaration","scope":3106,"src":"1507:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3087,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:15","nodeType":"VariableDeclaration","scope":3106,"src":"1521:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3089,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3097,"initialValue":{"arguments":[{"hexValue":"","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3091,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"1548:9:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:15","memberName":"call","nodeType":"MemberAccess","src":"1548:14:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3093,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"1570:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:15"},{"condition":{"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:15","subExpression":{"id":3098,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"1596:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3105,"nodeType":"IfStatement","src":"1591:58:15","trueBody":{"id":3104,"nodeType":"Block","src":"1605:44:15","statements":[{"expression":{"arguments":[{"id":3101,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"1627:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3100,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"1619:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3103,"nodeType":"ExpressionStatement","src":"1619:19:15"}]}}]},"documentation":{"id":3060,"nodeType":"StructuredDocumentation","src":"380:905:15","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:15","nodeType":"FunctionDefinition","parameters":{"id":3065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3062,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:15","nodeType":"VariableDeclaration","scope":3107,"src":"1309:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3061,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3064,"mutability":"mutable","name":"amount","nameLocation":"1344:6:15","nodeType":"VariableDeclaration","scope":3107,"src":"1336:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:15"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[],"src":"1361:0:15"},"scope":3309,"src":"1290:365:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"2589:62:15","statements":[{"expression":{"arguments":[{"id":3118,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"2628:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3119,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"2636:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3117,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"2606:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3116,"id":3122,"nodeType":"Return","src":"2599:45:15"}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"1661:834:15","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:15","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"target","nameLocation":"2530:6:15","nodeType":"VariableDeclaration","scope":3124,"src":"2522:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"data","nameLocation":"2551:4:15","nodeType":"VariableDeclaration","scope":3124,"src":"2538:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3111,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:15"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3124,"src":"2575:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3114,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:15"},"scope":3309,"src":"2500:151:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3173,"nodeType":"Block","src":"3088:294:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3138,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3309","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3309","typeString":"library Address"}],"id":3137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:15","typeDescriptions":{}}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:15","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"3126:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3155,"nodeType":"IfStatement","src":"3098:123:15","trueBody":{"id":3154,"nodeType":"Block","src":"3133:88:15","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3148,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3309","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3309","typeString":"library Address"}],"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3146,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:15","typeDescriptions":{}}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:15","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"3204:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3143,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"3154:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4466_$","typeString":"type(library Errors)"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:15","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4454,"src":"3154:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3153,"nodeType":"RevertStatement","src":"3147:63:15"}]}},{"assignments":[3157,3159],"declarations":[{"constant":false,"id":3157,"mutability":"mutable","name":"success","nameLocation":"3236:7:15","nodeType":"VariableDeclaration","scope":3173,"src":"3231:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3156,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:15","nodeType":"VariableDeclaration","scope":3173,"src":"3245:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3158,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3166,"initialValue":{"arguments":[{"id":3164,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"3298:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3160,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"3272:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:15","memberName":"call","nodeType":"MemberAccess","src":"3272:11:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"3291:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:15"},{"expression":{"arguments":[{"id":3168,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"3347:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3169,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"3355:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3170,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"3364:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3167,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"3320:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3135,"id":3172,"nodeType":"Return","src":"3313:62:15"}]},"documentation":{"id":3125,"nodeType":"StructuredDocumentation","src":"2657:313:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":3174,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:15","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"target","nameLocation":"3014:6:15","nodeType":"VariableDeclaration","scope":3174,"src":"3006:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3126,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"data","nameLocation":"3035:4:15","nodeType":"VariableDeclaration","scope":3174,"src":"3022:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3128,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"value","nameLocation":"3049:5:15","nodeType":"VariableDeclaration","scope":3174,"src":"3041:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:15"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3174,"src":"3074:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3133,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:15"},"scope":3309,"src":"2975:407:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3199,"nodeType":"Block","src":"3621:154:15","statements":[{"assignments":[3185,3187],"declarations":[{"constant":false,"id":3185,"mutability":"mutable","name":"success","nameLocation":"3637:7:15","nodeType":"VariableDeclaration","scope":3199,"src":"3632:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3184,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:15","nodeType":"VariableDeclaration","scope":3199,"src":"3646:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3186,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3192,"initialValue":{"arguments":[{"id":3190,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"3691:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3188,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"3673:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:15","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:15","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:15"},{"expression":{"arguments":[{"id":3194,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"3740:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3195,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"3748:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3196,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"3757:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3193,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"3713:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3183,"id":3198,"nodeType":"Return","src":"3706:62:15"}]},"documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"3388:128:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":3200,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:15","nodeType":"FunctionDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"target","nameLocation":"3557:6:15","nodeType":"VariableDeclaration","scope":3200,"src":"3549:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3176,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"data","nameLocation":"3578:4:15","nodeType":"VariableDeclaration","scope":3200,"src":"3565:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3178,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:15"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3200,"src":"3607:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3181,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:15"},"scope":3309,"src":"3521:254:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3225,"nodeType":"Block","src":"4013:156:15","statements":[{"assignments":[3211,3213],"declarations":[{"constant":false,"id":3211,"mutability":"mutable","name":"success","nameLocation":"4029:7:15","nodeType":"VariableDeclaration","scope":3225,"src":"4024:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3210,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3213,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:15","nodeType":"VariableDeclaration","scope":3225,"src":"4038:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3212,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3218,"initialValue":{"arguments":[{"id":3216,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"4085:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3214,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4065:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:15","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:15","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:15"},{"expression":{"arguments":[{"id":3220,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4134:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3221,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"4142:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3222,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"4151:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3219,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"4107:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3209,"id":3224,"nodeType":"Return","src":"4100:62:15"}]},"documentation":{"id":3201,"nodeType":"StructuredDocumentation","src":"3781:130:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":3226,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:15","nodeType":"FunctionDefinition","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"target","nameLocation":"3954:6:15","nodeType":"VariableDeclaration","scope":3226,"src":"3946:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"data","nameLocation":"3975:4:15","nodeType":"VariableDeclaration","scope":3226,"src":"3962:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3204,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:15"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3226,"src":"3999:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3207,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:15"},"scope":3309,"src":"3916:253:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3265,"nodeType":"Block","src":"4595:424:15","statements":[{"condition":{"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:15","subExpression":{"id":3238,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"4610:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3263,"nodeType":"Block","src":"4669:344:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3245,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"4857:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:15","memberName":"length","nodeType":"MemberAccess","src":"4857:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3249,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"4883:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:15","memberName":"code","nodeType":"MemberAccess","src":"4883:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:15","memberName":"length","nodeType":"MemberAccess","src":"4883:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3260,"nodeType":"IfStatement","src":"4853:119:15","trueBody":{"id":3259,"nodeType":"Block","src":"4908:64:15","statements":[{"errorCall":{"arguments":[{"id":3256,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"4950:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3255,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"4933:16:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3258,"nodeType":"RevertStatement","src":"4926:31:15"}]}},{"expression":{"id":3261,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"4992:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3237,"id":3262,"nodeType":"Return","src":"4985:17:15"}]},"id":3264,"nodeType":"IfStatement","src":"4605:408:15","trueBody":{"id":3244,"nodeType":"Block","src":"4619:44:15","statements":[{"expression":{"arguments":[{"id":3241,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"4641:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3240,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"4633:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3243,"nodeType":"ExpressionStatement","src":"4633:19:15"}]}}]},"documentation":{"id":3227,"nodeType":"StructuredDocumentation","src":"4175:257:15","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":3266,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:15","nodeType":"FunctionDefinition","parameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"target","nameLocation":"4490:6:15","nodeType":"VariableDeclaration","scope":3266,"src":"4482:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"success","nameLocation":"4511:7:15","nodeType":"VariableDeclaration","scope":3266,"src":"4506:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3230,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:15","nodeType":"VariableDeclaration","scope":3266,"src":"4528:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3232,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:15"},"returnParameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3266,"src":"4581:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3235,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:15"},"scope":3309,"src":"4437:582:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3287,"nodeType":"Block","src":"5323:122:15","statements":[{"condition":{"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:15","subExpression":{"id":3276,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"5338:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3285,"nodeType":"Block","src":"5397:42:15","statements":[{"expression":{"id":3283,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"5418:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3275,"id":3284,"nodeType":"Return","src":"5411:17:15"}]},"id":3286,"nodeType":"IfStatement","src":"5333:106:15","trueBody":{"id":3282,"nodeType":"Block","src":"5347:44:15","statements":[{"expression":{"arguments":[{"id":3279,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"5369:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3278,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"5361:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3281,"nodeType":"ExpressionStatement","src":"5361:19:15"}]}}]},"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"5025:191:15","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":3288,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:15","nodeType":"FunctionDefinition","parameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"success","nameLocation":"5252:7:15","nodeType":"VariableDeclaration","scope":3288,"src":"5247:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3268,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:15","nodeType":"VariableDeclaration","scope":3288,"src":"5261:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3270,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:15"},"returnParameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3288,"src":"5309:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3273,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:15"},"scope":3309,"src":"5221:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3307,"nodeType":"Block","src":"5614:379:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3294,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"5690:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:15","memberName":"length","nodeType":"MemberAccess","src":"5690:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3305,"nodeType":"Block","src":"5936:51:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3300,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"5957:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4466_$","typeString":"type(library Errors)"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5964:10:15","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":4457,"src":"5957:17:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5957:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3304,"nodeType":"RevertStatement","src":"5950:26:15"}]},"id":3306,"nodeType":"IfStatement","src":"5686:301:15","trueBody":{"id":3299,"nodeType":"Block","src":"5713:217:15","statements":[{"AST":{"nativeSrc":"5840:80:15","nodeType":"YulBlock","src":"5840:80:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returndata","nativeSrc":"5869:10:15","nodeType":"YulIdentifier","src":"5869:10:15"},{"kind":"number","nativeSrc":"5881:4:15","nodeType":"YulLiteral","src":"5881:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5865:3:15","nodeType":"YulIdentifier","src":"5865:3:15"},"nativeSrc":"5865:21:15","nodeType":"YulFunctionCall","src":"5865:21:15"},{"arguments":[{"name":"returndata","nativeSrc":"5894:10:15","nodeType":"YulIdentifier","src":"5894:10:15"}],"functionName":{"name":"mload","nativeSrc":"5888:5:15","nodeType":"YulIdentifier","src":"5888:5:15"},"nativeSrc":"5888:17:15","nodeType":"YulFunctionCall","src":"5888:17:15"}],"functionName":{"name":"revert","nativeSrc":"5858:6:15","nodeType":"YulIdentifier","src":"5858:6:15"},"nativeSrc":"5858:48:15","nodeType":"YulFunctionCall","src":"5858:48:15"},"nativeSrc":"5858:48:15","nodeType":"YulExpressionStatement","src":"5858:48:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3291,"isOffset":false,"isSlot":false,"src":"5869:10:15","valueSize":1},{"declaration":3291,"isOffset":false,"isSlot":false,"src":"5894:10:15","valueSize":1}],"flags":["memory-safe"],"id":3298,"nodeType":"InlineAssembly","src":"5815:105:15"}]}}]},"documentation":{"id":3289,"nodeType":"StructuredDocumentation","src":"5451:103:15","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":3308,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:15","nodeType":"FunctionDefinition","parameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:15","nodeType":"VariableDeclaration","scope":3308,"src":"5576:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3290,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:15"},"returnParameters":{"id":3293,"nodeType":"ParameterList","parameters":[],"src":"5614:0:15"},"scope":3309,"src":"5559:434:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3310,"src":"233:5762:15","usedErrors":[3059],"usedEvents":[]}],"src":"101:5895:15"},"id":15},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[4287],"Comparators":[4414],"Math":[7900],"SlotDerivation":[4717],"StorageSlot":[4841]},"id":4288,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":3313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4288,"sourceUnit":4415,"src":"209:46:16","symbolAliases":[{"foreign":{"id":3312,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"217:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":3315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4288,"sourceUnit":4718,"src":"256:52:16","symbolAliases":[{"foreign":{"id":3314,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"264:14:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4288,"sourceUnit":4842,"src":"309:46:16","symbolAliases":[{"foreign":{"id":3316,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"317:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4288,"sourceUnit":7901,"src":"356:37:16","symbolAliases":[{"foreign":{"id":3318,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"364:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":3320,"nodeType":"StructuredDocumentation","src":"395:63:16","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":4287,"linearizedBaseContracts":[4287],"name":"Arrays","nameLocation":"467:6:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3323,"libraryName":{"id":3321,"name":"SlotDerivation","nameLocations":["486:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":4717,"src":"486:14:16"},"nodeType":"UsingForDirective","src":"480:33:16","typeName":{"id":3322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":3326,"libraryName":{"id":3324,"name":"StorageSlot","nameLocations":["524:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":4841,"src":"524:11:16"},"nodeType":"UsingForDirective","src":"518:30:16","typeName":{"id":3325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":3358,"nodeType":"Block","src":"1628:83:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3348,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"1656:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3347,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"1649:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3351,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"1669:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3350,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"1664:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3353,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"1677:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3346,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"1638:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3355,"nodeType":"ExpressionStatement","src":"1638:44:16"},{"expression":{"id":3356,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"1699:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3345,"id":3357,"nodeType":"Return","src":"1692:12:16"}]},"documentation":{"id":3327,"nodeType":"StructuredDocumentation","src":"554:915:16","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:16","nodeType":"FunctionDefinition","parameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"array","nameLocation":"1514:5:16","nodeType":"VariableDeclaration","scope":3359,"src":"1497:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3329,"nodeType":"ArrayTypeName","src":"1497:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3340,"mutability":"mutable","name":"comp","nameLocation":"1576:4:16","nodeType":"VariableDeclaration","scope":3359,"src":"1529:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3339,"nodeType":"FunctionTypeName","parameterTypes":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"1538:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"1547:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:16"},"returnParameterTypes":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"1570:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3336,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:16"},"src":"1529:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:16"},"returnParameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3359,"src":"1610:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ArrayTypeName","src":"1610:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:16"},"scope":4287,"src":"1474:237:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3377,"nodeType":"Block","src":"1894:66:16","statements":[{"expression":{"arguments":[{"id":3370,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"1909:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3371,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"1916:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4414_$","typeString":"type(library Comparators)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4399,"src":"1916:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3369,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3359,3378,3410,3431,3463,3484],"referencedDeclaration":3359,"src":"1904:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3374,"nodeType":"ExpressionStatement","src":"1904:27:16"},{"expression":{"id":3375,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"1948:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3368,"id":3376,"nodeType":"Return","src":"1941:12:16"}]},"documentation":{"id":3360,"nodeType":"StructuredDocumentation","src":"1717:93:16","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":3378,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:16","nodeType":"FunctionDefinition","parameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"array","nameLocation":"1846:5:16","nodeType":"VariableDeclaration","scope":3378,"src":"1829:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3362,"nodeType":"ArrayTypeName","src":"1829:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:16"},"returnParameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3378,"src":"1876:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3366,"nodeType":"ArrayTypeName","src":"1876:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:16"},"scope":4287,"src":"1815:145:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3409,"nodeType":"Block","src":"3040:97:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3400,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"3075:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3399,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3635,3647],"referencedDeclaration":3635,"src":"3055:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3403,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"3102:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":3402,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3673,3699],"referencedDeclaration":3673,"src":"3083:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3398,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3359,3378,3410,3431,3463,3484],"referencedDeclaration":3359,"src":"3050:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3406,"nodeType":"ExpressionStatement","src":"3050:58:16"},{"expression":{"id":3407,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"3125:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3397,"id":3408,"nodeType":"Return","src":"3118:12:16"}]},"documentation":{"id":3379,"nodeType":"StructuredDocumentation","src":"1966:915:16","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3410,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:16","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"array","nameLocation":"2926:5:16","nodeType":"VariableDeclaration","scope":3410,"src":"2909:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3380,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3381,"nodeType":"ArrayTypeName","src":"2909:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"comp","nameLocation":"2988:4:16","nodeType":"VariableDeclaration","scope":3410,"src":"2941:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3391,"nodeType":"FunctionTypeName","parameterTypes":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3391,"src":"2950:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3383,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3391,"src":"2959:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3385,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:16"},"returnParameterTypes":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3391,"src":"2982:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3388,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:16"},"src":"2941:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:16"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3410,"src":"3022:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3394,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3395,"nodeType":"ArrayTypeName","src":"3022:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:16"},"scope":4287,"src":"2886:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3430,"nodeType":"Block","src":"3320:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3422,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"3355:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3421,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3635,3647],"referencedDeclaration":3635,"src":"3335:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3424,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"3363:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4414_$","typeString":"type(library Comparators)"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4399,"src":"3363:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3420,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3359,3378,3410,3431,3463,3484],"referencedDeclaration":3359,"src":"3330:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3427,"nodeType":"ExpressionStatement","src":"3330:48:16"},{"expression":{"id":3428,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"3395:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3419,"id":3429,"nodeType":"Return","src":"3388:12:16"}]},"documentation":{"id":3411,"nodeType":"StructuredDocumentation","src":"3143:93:16","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":3431,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:16","nodeType":"FunctionDefinition","parameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"array","nameLocation":"3272:5:16","nodeType":"VariableDeclaration","scope":3431,"src":"3255:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3412,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3413,"nodeType":"ArrayTypeName","src":"3255:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:16"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3431,"src":"3302:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3416,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3417,"nodeType":"ArrayTypeName","src":"3302:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:16"},"scope":4287,"src":"3241:166:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3462,"nodeType":"Block","src":"4487:97:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3453,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"4522:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3452,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3635,3647],"referencedDeclaration":3647,"src":"4502:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3456,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"4549:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":3455,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3673,3699],"referencedDeclaration":3699,"src":"4530:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3451,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3359,3378,3410,3431,3463,3484],"referencedDeclaration":3359,"src":"4497:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3459,"nodeType":"ExpressionStatement","src":"4497:58:16"},{"expression":{"id":3460,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"4572:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3450,"id":3461,"nodeType":"Return","src":"4565:12:16"}]},"documentation":{"id":3432,"nodeType":"StructuredDocumentation","src":"3413:915:16","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3463,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:16","nodeType":"FunctionDefinition","parameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"array","nameLocation":"4373:5:16","nodeType":"VariableDeclaration","scope":3463,"src":"4356:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3434,"nodeType":"ArrayTypeName","src":"4356:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3445,"mutability":"mutable","name":"comp","nameLocation":"4435:4:16","nodeType":"VariableDeclaration","scope":3463,"src":"4388:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3444,"nodeType":"FunctionTypeName","parameterTypes":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3444,"src":"4397:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3444,"src":"4406:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:16"},"returnParameterTypes":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3444,"src":"4429:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3441,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:16"},"src":"4388:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:16"},"returnParameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3463,"src":"4469:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3448,"nodeType":"ArrayTypeName","src":"4469:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:16"},"scope":4287,"src":"4333:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3483,"nodeType":"Block","src":"4767:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3475,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"4802:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3474,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3635,3647],"referencedDeclaration":3647,"src":"4782:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3477,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"4810:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4414_$","typeString":"type(library Comparators)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4399,"src":"4810:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3473,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3359,3378,3410,3431,3463,3484],"referencedDeclaration":3359,"src":"4777:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3480,"nodeType":"ExpressionStatement","src":"4777:48:16"},{"expression":{"id":3481,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"4842:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3472,"id":3482,"nodeType":"Return","src":"4835:12:16"}]},"documentation":{"id":3464,"nodeType":"StructuredDocumentation","src":"4590:93:16","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":3484,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:16","nodeType":"FunctionDefinition","parameters":{"id":3468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3467,"mutability":"mutable","name":"array","nameLocation":"4719:5:16","nodeType":"VariableDeclaration","scope":3484,"src":"4702:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3466,"nodeType":"ArrayTypeName","src":"4702:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:16"},"returnParameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3484,"src":"4749:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3470,"nodeType":"ArrayTypeName","src":"4749:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:16"},"scope":4287,"src":"4688:166:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3571,"nodeType":"Block","src":"5470:889:16","statements":[{"id":3570,"nodeType":"UncheckedBlock","src":"5480:873:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3502,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"5508:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3503,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"5514:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3508,"nodeType":"IfStatement","src":"5504:31:16","trueBody":{"functionReturnParameters":3501,"id":3507,"nodeType":"Return","src":"5528:7:16"}},{"assignments":[3510],"declarations":[{"constant":false,"id":3510,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:16","nodeType":"VariableDeclaration","scope":3570,"src":"5591:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3514,"initialValue":{"arguments":[{"id":3512,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"5614:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3511,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"5607:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:16"},{"assignments":[3516],"declarations":[{"constant":false,"id":3516,"mutability":"mutable","name":"pos","nameLocation":"5715:3:16","nodeType":"VariableDeclaration","scope":3570,"src":"5707:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3518,"initialValue":{"id":3517,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"5721:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:16"},{"body":{"id":3549,"nodeType":"Block","src":"5795:331:16","statements":[{"condition":{"arguments":[{"arguments":[{"id":3534,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"5829:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3533,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"5822:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3536,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3532,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"5817:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3548,"nodeType":"IfStatement","src":"5813:299:16","trueBody":{"id":3547,"nodeType":"Block","src":"5842:270:16","statements":[{"expression":{"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3538,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"6046:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3541,"nodeType":"ExpressionStatement","src":"6046:11:16"},{"expression":{"arguments":[{"id":3543,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"6085:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3544,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"6090:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3542,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"6079:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3546,"nodeType":"ExpressionStatement","src":"6079:14:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"5773:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3526,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"5778:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3550,"initializationExpression":{"assignments":[3520],"declarations":[{"constant":false,"id":3520,"mutability":"mutable","name":"it","nameLocation":"5754:2:16","nodeType":"VariableDeclaration","scope":3550,"src":"5746:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3524,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3521,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"5759:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:16"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3528,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"5783:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3531,"nodeType":"ExpressionStatement","src":"5783:10:16"},"nodeType":"ForStatement","src":"5741:385:16"},{"expression":{"arguments":[{"id":3552,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"6146:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3553,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"6153:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3551,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"6140:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3555,"nodeType":"ExpressionStatement","src":"6140:17:16"},{"expression":{"arguments":[{"id":3557,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"6207:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3558,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"6214:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3559,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"6219:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3556,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"6196:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3561,"nodeType":"ExpressionStatement","src":"6196:28:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"6284:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3566,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"6296:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3567,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"6301:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3562,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"6273:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3569,"nodeType":"ExpressionStatement","src":"6273:33:16"}]}]},"documentation":{"id":3485,"nodeType":"StructuredDocumentation","src":"4860:491:16","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":3572,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:16","nodeType":"FunctionDefinition","parameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"begin","nameLocation":"5384:5:16","nodeType":"VariableDeclaration","scope":3572,"src":"5376:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"end","nameLocation":"5399:3:16","nodeType":"VariableDeclaration","scope":3572,"src":"5391:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3499,"mutability":"mutable","name":"comp","nameLocation":"5451:4:16","nodeType":"VariableDeclaration","scope":3572,"src":"5404:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3498,"nodeType":"FunctionTypeName","parameterTypes":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3498,"src":"5413:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3498,"src":"5422:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:16"},"returnParameterTypes":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3498,"src":"5445:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3495,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:16"},"src":"5404:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:16"},"returnParameters":{"id":3501,"nodeType":"ParameterList","parameters":[],"src":"5470:0:16"},"scope":4287,"src":"5356:1003:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3582,"nodeType":"Block","src":"6532:88:16","statements":[{"AST":{"nativeSrc":"6567:47:16","nodeType":"YulBlock","src":"6567:47:16","statements":[{"nativeSrc":"6581:23:16","nodeType":"YulAssignment","src":"6581:23:16","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:16","nodeType":"YulIdentifier","src":"6592:5:16"},{"kind":"number","nativeSrc":"6599:4:16","nodeType":"YulLiteral","src":"6599:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:16","nodeType":"YulIdentifier","src":"6588:3:16"},"nativeSrc":"6588:16:16","nodeType":"YulFunctionCall","src":"6588:16:16"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:16","nodeType":"YulIdentifier","src":"6581:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3576,"isOffset":false,"isSlot":false,"src":"6592:5:16","valueSize":1},{"declaration":3579,"isOffset":false,"isSlot":false,"src":"6581:3:16","valueSize":1}],"flags":["memory-safe"],"id":3581,"nodeType":"InlineAssembly","src":"6542:72:16"}]},"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"6365:87:16","text":" @dev Pointer to the memory location of the first element of `array`."},"id":3583,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:16","nodeType":"FunctionDefinition","parameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"array","nameLocation":"6490:5:16","nodeType":"VariableDeclaration","scope":3583,"src":"6473:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3575,"nodeType":"ArrayTypeName","src":"6473:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:16"},"returnParameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:16","nodeType":"VariableDeclaration","scope":3583,"src":"6519:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:16"},"scope":4287,"src":"6457:163:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3602,"nodeType":"Block","src":"6892:93:16","statements":[{"id":3601,"nodeType":"UncheckedBlock","src":"6902:77:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3593,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"6940:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3592,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"6933:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3595,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"6949:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:16","memberName":"length","nodeType":"MemberAccess","src":"6949:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3591,"id":3600,"nodeType":"Return","src":"6926:42:16"}]}]},"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"6626:188:16","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":3603,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:16","nodeType":"FunctionDefinition","parameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"array","nameLocation":"6850:5:16","nodeType":"VariableDeclaration","scope":3603,"src":"6833:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3586,"nodeType":"ArrayTypeName","src":"6833:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:16"},"returnParameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:16","nodeType":"VariableDeclaration","scope":3603,"src":"6879:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:16"},"scope":4287,"src":"6819:166:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3612,"nodeType":"Block","src":"7136:68:16","statements":[{"AST":{"nativeSrc":"7155:43:16","nodeType":"YulBlock","src":"7155:43:16","statements":[{"nativeSrc":"7169:19:16","nodeType":"YulAssignment","src":"7169:19:16","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:16","nodeType":"YulIdentifier","src":"7184:3:16"}],"functionName":{"name":"mload","nativeSrc":"7178:5:16","nodeType":"YulIdentifier","src":"7178:5:16"},"nativeSrc":"7178:10:16","nodeType":"YulFunctionCall","src":"7178:10:16"},"variableNames":[{"name":"value","nativeSrc":"7169:5:16","nodeType":"YulIdentifier","src":"7169:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3606,"isOffset":false,"isSlot":false,"src":"7184:3:16","valueSize":1},{"declaration":3609,"isOffset":false,"isSlot":false,"src":"7169:5:16","valueSize":1}],"id":3611,"nodeType":"InlineAssembly","src":"7146:52:16"}]},"documentation":{"id":3604,"nodeType":"StructuredDocumentation","src":"6991:74:16","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":3613,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:16","nodeType":"FunctionDefinition","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3606,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:16","nodeType":"VariableDeclaration","scope":3613,"src":"7086:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:16"},"returnParameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"value","nameLocation":"7129:5:16","nodeType":"VariableDeclaration","scope":3613,"src":"7121:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3608,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:16"},"scope":4287,"src":"7070:134:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3622,"nodeType":"Block","src":"7348:178:16","statements":[{"AST":{"nativeSrc":"7367:153:16","nodeType":"YulBlock","src":"7367:153:16","statements":[{"nativeSrc":"7381:25:16","nodeType":"YulVariableDeclaration","src":"7381:25:16","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:16","nodeType":"YulIdentifier","src":"7401:4:16"}],"functionName":{"name":"mload","nativeSrc":"7395:5:16","nodeType":"YulIdentifier","src":"7395:5:16"},"nativeSrc":"7395:11:16","nodeType":"YulFunctionCall","src":"7395:11:16"},"variables":[{"name":"value1","nativeSrc":"7385:6:16","nodeType":"YulTypedName","src":"7385:6:16","type":""}]},{"nativeSrc":"7419:25:16","nodeType":"YulVariableDeclaration","src":"7419:25:16","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:16","nodeType":"YulIdentifier","src":"7439:4:16"}],"functionName":{"name":"mload","nativeSrc":"7433:5:16","nodeType":"YulIdentifier","src":"7433:5:16"},"nativeSrc":"7433:11:16","nodeType":"YulFunctionCall","src":"7433:11:16"},"variables":[{"name":"value2","nativeSrc":"7423:6:16","nodeType":"YulTypedName","src":"7423:6:16","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:16","nodeType":"YulIdentifier","src":"7464:4:16"},{"name":"value2","nativeSrc":"7470:6:16","nodeType":"YulIdentifier","src":"7470:6:16"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:16","nodeType":"YulIdentifier","src":"7457:6:16"},"nativeSrc":"7457:20:16","nodeType":"YulFunctionCall","src":"7457:20:16"},"nativeSrc":"7457:20:16","nodeType":"YulExpressionStatement","src":"7457:20:16"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:16","nodeType":"YulIdentifier","src":"7497:4:16"},{"name":"value1","nativeSrc":"7503:6:16","nodeType":"YulIdentifier","src":"7503:6:16"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:16","nodeType":"YulIdentifier","src":"7490:6:16"},"nativeSrc":"7490:20:16","nodeType":"YulFunctionCall","src":"7490:20:16"},"nativeSrc":"7490:20:16","nodeType":"YulExpressionStatement","src":"7490:20:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3616,"isOffset":false,"isSlot":false,"src":"7401:4:16","valueSize":1},{"declaration":3616,"isOffset":false,"isSlot":false,"src":"7464:4:16","valueSize":1},{"declaration":3618,"isOffset":false,"isSlot":false,"src":"7439:4:16","valueSize":1},{"declaration":3618,"isOffset":false,"isSlot":false,"src":"7497:4:16","valueSize":1}],"id":3621,"nodeType":"InlineAssembly","src":"7358:162:16"}]},"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"7210:77:16","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3623,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:16","nodeType":"FunctionDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:16","nodeType":"VariableDeclaration","scope":3623,"src":"7307:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:16","nodeType":"VariableDeclaration","scope":3623,"src":"7321:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:16"},"returnParameters":{"id":3620,"nodeType":"ParameterList","parameters":[],"src":"7348:0:16"},"scope":4287,"src":"7292:234:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3634,"nodeType":"Block","src":"7713:64:16","statements":[{"AST":{"nativeSrc":"7732:39:16","nodeType":"YulBlock","src":"7732:39:16","statements":[{"nativeSrc":"7746:15:16","nodeType":"YulAssignment","src":"7746:15:16","value":{"name":"input","nativeSrc":"7756:5:16","nodeType":"YulIdentifier","src":"7756:5:16"},"variableNames":[{"name":"output","nativeSrc":"7746:6:16","nodeType":"YulIdentifier","src":"7746:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3627,"isOffset":false,"isSlot":false,"src":"7756:5:16","valueSize":1},{"declaration":3631,"isOffset":false,"isSlot":false,"src":"7746:6:16","valueSize":1}],"id":3633,"nodeType":"InlineAssembly","src":"7723:48:16"}]},"documentation":{"id":3624,"nodeType":"StructuredDocumentation","src":"7532:76:16","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3635,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:16","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"input","nameLocation":"7659:5:16","nodeType":"VariableDeclaration","scope":3635,"src":"7642:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3625,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3626,"nodeType":"ArrayTypeName","src":"7642:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:16"},"returnParameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"output","nameLocation":"7705:6:16","nodeType":"VariableDeclaration","scope":3635,"src":"7688:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3630,"nodeType":"ArrayTypeName","src":"7688:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:16"},"scope":4287,"src":"7613:164:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3646,"nodeType":"Block","src":"7964:64:16","statements":[{"AST":{"nativeSrc":"7983:39:16","nodeType":"YulBlock","src":"7983:39:16","statements":[{"nativeSrc":"7997:15:16","nodeType":"YulAssignment","src":"7997:15:16","value":{"name":"input","nativeSrc":"8007:5:16","nodeType":"YulIdentifier","src":"8007:5:16"},"variableNames":[{"name":"output","nativeSrc":"7997:6:16","nodeType":"YulIdentifier","src":"7997:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3639,"isOffset":false,"isSlot":false,"src":"8007:5:16","valueSize":1},{"declaration":3643,"isOffset":false,"isSlot":false,"src":"7997:6:16","valueSize":1}],"id":3645,"nodeType":"InlineAssembly","src":"7974:48:16"}]},"documentation":{"id":3636,"nodeType":"StructuredDocumentation","src":"7783:76:16","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:16","nodeType":"FunctionDefinition","parameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"mutability":"mutable","name":"input","nameLocation":"7910:5:16","nodeType":"VariableDeclaration","scope":3647,"src":"7893:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3638,"nodeType":"ArrayTypeName","src":"7893:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:16"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"output","nameLocation":"7956:6:16","nodeType":"VariableDeclaration","scope":3647,"src":"7939:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3641,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3642,"nodeType":"ArrayTypeName","src":"7939:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:16"},"scope":4287,"src":"7864:164:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3672,"nodeType":"Block","src":"8290:64:16","statements":[{"AST":{"nativeSrc":"8309:39:16","nodeType":"YulBlock","src":"8309:39:16","statements":[{"nativeSrc":"8323:15:16","nodeType":"YulAssignment","src":"8323:15:16","value":{"name":"input","nativeSrc":"8333:5:16","nodeType":"YulIdentifier","src":"8333:5:16"},"variableNames":[{"name":"output","nativeSrc":"8323:6:16","nodeType":"YulIdentifier","src":"8323:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3658,"isOffset":false,"isSlot":false,"src":"8333:5:16","valueSize":1},{"declaration":3669,"isOffset":false,"isSlot":false,"src":"8323:6:16","valueSize":1}],"id":3671,"nodeType":"InlineAssembly","src":"8300:48:16"}]},"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"8034:78:16","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3673,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:16","nodeType":"FunctionDefinition","parameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"input","nameLocation":"8201:5:16","nodeType":"VariableDeclaration","scope":3673,"src":"8154:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3657,"nodeType":"FunctionTypeName","parameterTypes":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3657,"src":"8163:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3649,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3657,"src":"8172:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3651,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:16"},"returnParameterTypes":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3657,"src":"8195:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3654,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:16"},"src":"8154:52:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:16"},"returnParameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"output","nameLocation":"8282:6:16","nodeType":"VariableDeclaration","scope":3673,"src":"8235:53:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3668,"nodeType":"FunctionTypeName","parameterTypes":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3668,"src":"8244:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3668,"src":"8253:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:16"},"returnParameterTypes":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3668,"src":"8276:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3665,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:16"},"src":"8235:53:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:16"},"scope":4287,"src":"8117:237:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3698,"nodeType":"Block","src":"8616:64:16","statements":[{"AST":{"nativeSrc":"8635:39:16","nodeType":"YulBlock","src":"8635:39:16","statements":[{"nativeSrc":"8649:15:16","nodeType":"YulAssignment","src":"8649:15:16","value":{"name":"input","nativeSrc":"8659:5:16","nodeType":"YulIdentifier","src":"8659:5:16"},"variableNames":[{"name":"output","nativeSrc":"8649:6:16","nodeType":"YulIdentifier","src":"8649:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3684,"isOffset":false,"isSlot":false,"src":"8659:5:16","valueSize":1},{"declaration":3695,"isOffset":false,"isSlot":false,"src":"8649:6:16","valueSize":1}],"id":3697,"nodeType":"InlineAssembly","src":"8626:48:16"}]},"documentation":{"id":3674,"nodeType":"StructuredDocumentation","src":"8360:78:16","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":3699,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:16","nodeType":"FunctionDefinition","parameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"input","nameLocation":"8527:5:16","nodeType":"VariableDeclaration","scope":3699,"src":"8480:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3683,"nodeType":"FunctionTypeName","parameterTypes":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3683,"src":"8489:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3683,"src":"8498:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:16"},"returnParameterTypes":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3683,"src":"8521:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3680,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:16"},"src":"8480:52:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:16"},"returnParameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"output","nameLocation":"8608:6:16","nodeType":"VariableDeclaration","scope":3699,"src":"8561:53:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3694,"nodeType":"FunctionTypeName","parameterTypes":{"id":3690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3694,"src":"8570:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3694,"src":"8579:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3688,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:16"},"returnParameterTypes":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3694,"src":"8602:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3691,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:16"},"src":"8561:53:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:16"},"scope":4287,"src":"8443:237:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3781,"nodeType":"Block","src":"9405:834:16","statements":[{"assignments":[3711],"declarations":[{"constant":false,"id":3711,"mutability":"mutable","name":"low","nameLocation":"9423:3:16","nodeType":"VariableDeclaration","scope":3781,"src":"9415:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3713,"initialValue":{"hexValue":"30","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:16"},{"assignments":[3715],"declarations":[{"constant":false,"id":3715,"mutability":"mutable","name":"high","nameLocation":"9448:4:16","nodeType":"VariableDeclaration","scope":3781,"src":"9440:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3718,"initialValue":{"expression":{"id":3716,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"9455:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:16","memberName":"length","nodeType":"MemberAccess","src":"9455:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3719,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9482:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3725,"nodeType":"IfStatement","src":"9478:48:16","trueBody":{"id":3724,"nodeType":"Block","src":"9493:33:16","statements":[{"expression":{"hexValue":"30","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3709,"id":3723,"nodeType":"Return","src":"9507:8:16"}]}},{"body":{"id":3757,"nodeType":"Block","src":"9555:423:16","statements":[{"assignments":[3730],"declarations":[{"constant":false,"id":3730,"mutability":"mutable","name":"mid","nameLocation":"9577:3:16","nodeType":"VariableDeclaration","scope":3757,"src":"9569:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3736,"initialValue":{"arguments":[{"id":3733,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"9596:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3734,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9601:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3731,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"9583:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7900_$","typeString":"type(library Math)"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"9583:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3738,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"9844:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3739,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"9851:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3737,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4062,4088,4114,4140,4166],"referencedDeclaration":4114,"src":"9831:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4732_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4732_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4731,"src":"9831:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3742,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"9864:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3755,"nodeType":"Block","src":"9922:46:16","statements":[{"expression":{"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3749,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"9940:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3750,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"9946:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3754,"nodeType":"ExpressionStatement","src":"9940:13:16"}]},"id":3756,"nodeType":"IfStatement","src":"9827:141:16","trueBody":{"id":3748,"nodeType":"Block","src":"9873:43:16","statements":[{"expression":{"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3744,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9891:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3745,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"9898:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3747,"nodeType":"ExpressionStatement","src":"9891:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3726,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"9543:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3727,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9549:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3758,"nodeType":"WhileStatement","src":"9536:442:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10095:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3763,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"10119:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3764,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10126:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3762,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4062,4088,4114,4140,4166],"referencedDeclaration":4114,"src":"10106:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4732_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4732_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4731,"src":"10106:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3769,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"10144:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3779,"nodeType":"Block","src":"10198:35:16","statements":[{"expression":{"id":3777,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10219:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3709,"id":3778,"nodeType":"Return","src":"10212:10:16"}]},"id":3780,"nodeType":"IfStatement","src":"10091:142:16","trueBody":{"id":3776,"nodeType":"Block","src":"10153:39:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3772,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10174:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3709,"id":3775,"nodeType":"Return","src":"10167:14:16"}]}}]},"documentation":{"id":3700,"nodeType":"StructuredDocumentation","src":"8686:616:16","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3782,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:16","nodeType":"FunctionDefinition","parameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"array","nameLocation":"9349:5:16","nodeType":"VariableDeclaration","scope":3782,"src":"9331:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3702,"nodeType":"ArrayTypeName","src":"9331:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3705,"mutability":"mutable","name":"element","nameLocation":"9364:7:16","nodeType":"VariableDeclaration","scope":3782,"src":"9356:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:16"},"returnParameters":{"id":3709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3782,"src":"9396:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3707,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:16"},"scope":4287,"src":"9307:932:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3845,"nodeType":"Block","src":"10756:709:16","statements":[{"assignments":[3794],"declarations":[{"constant":false,"id":3794,"mutability":"mutable","name":"low","nameLocation":"10774:3:16","nodeType":"VariableDeclaration","scope":3845,"src":"10766:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3796,"initialValue":{"hexValue":"30","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:16"},{"assignments":[3798],"declarations":[{"constant":false,"id":3798,"mutability":"mutable","name":"high","nameLocation":"10799:4:16","nodeType":"VariableDeclaration","scope":3845,"src":"10791:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3801,"initialValue":{"expression":{"id":3799,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"10806:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:16","memberName":"length","nodeType":"MemberAccess","src":"10806:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3802,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"10833:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3808,"nodeType":"IfStatement","src":"10829:48:16","trueBody":{"id":3807,"nodeType":"Block","src":"10844:33:16","statements":[{"expression":{"hexValue":"30","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3792,"id":3806,"nodeType":"Return","src":"10858:8:16"}]}},{"body":{"id":3841,"nodeType":"Block","src":"10906:532:16","statements":[{"assignments":[3813],"declarations":[{"constant":false,"id":3813,"mutability":"mutable","name":"mid","nameLocation":"10928:3:16","nodeType":"VariableDeclaration","scope":3841,"src":"10920:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3819,"initialValue":{"arguments":[{"id":3816,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10947:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3817,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"10952:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3814,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"10934:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7900_$","typeString":"type(library Math)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"10934:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3821,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"11195:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3822,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"11202:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3820,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4062,4088,4114,4140,4166],"referencedDeclaration":4114,"src":"11182:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4732_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4732_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4731,"src":"11182:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3825,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"11215:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3839,"nodeType":"Block","src":"11385:43:16","statements":[{"expression":{"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3835,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"11403:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3836,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"11410:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3838,"nodeType":"ExpressionStatement","src":"11403:10:16"}]},"id":3840,"nodeType":"IfStatement","src":"11178:250:16","trueBody":{"id":3834,"nodeType":"Block","src":"11224:155:16","statements":[{"id":3833,"nodeType":"UncheckedBlock","src":"11301:64:16","statements":[{"expression":{"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3827,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"11333:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3828,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"11339:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3832,"nodeType":"ExpressionStatement","src":"11333:13:16"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10894:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3810,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"10900:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3842,"nodeType":"WhileStatement","src":"10887:551:16"},{"expression":{"id":3843,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"11455:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3792,"id":3844,"nodeType":"Return","src":"11448:10:16"}]},"documentation":{"id":3783,"nodeType":"StructuredDocumentation","src":"10245:412:16","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3846,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:16","nodeType":"FunctionDefinition","parameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"mutability":"mutable","name":"array","nameLocation":"10700:5:16","nodeType":"VariableDeclaration","scope":3846,"src":"10682:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3785,"nodeType":"ArrayTypeName","src":"10682:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3788,"mutability":"mutable","name":"element","nameLocation":"10715:7:16","nodeType":"VariableDeclaration","scope":3846,"src":"10707:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3787,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:16"},"returnParameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3846,"src":"10747:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:16"},"scope":4287,"src":"10662:803:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3909,"nodeType":"Block","src":"11982:709:16","statements":[{"assignments":[3858],"declarations":[{"constant":false,"id":3858,"mutability":"mutable","name":"low","nameLocation":"12000:3:16","nodeType":"VariableDeclaration","scope":3909,"src":"11992:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3857,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3860,"initialValue":{"hexValue":"30","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:16"},{"assignments":[3862],"declarations":[{"constant":false,"id":3862,"mutability":"mutable","name":"high","nameLocation":"12025:4:16","nodeType":"VariableDeclaration","scope":3909,"src":"12017:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3865,"initialValue":{"expression":{"id":3863,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"12032:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:16","memberName":"length","nodeType":"MemberAccess","src":"12032:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3866,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"12059:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3872,"nodeType":"IfStatement","src":"12055:48:16","trueBody":{"id":3871,"nodeType":"Block","src":"12070:33:16","statements":[{"expression":{"hexValue":"30","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3856,"id":3870,"nodeType":"Return","src":"12084:8:16"}]}},{"body":{"id":3905,"nodeType":"Block","src":"12132:532:16","statements":[{"assignments":[3877],"declarations":[{"constant":false,"id":3877,"mutability":"mutable","name":"mid","nameLocation":"12154:3:16","nodeType":"VariableDeclaration","scope":3905,"src":"12146:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3883,"initialValue":{"arguments":[{"id":3880,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"12173:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3881,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"12178:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3878,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"12160:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7900_$","typeString":"type(library Math)"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"12160:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3885,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"12421:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3886,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"12428:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3884,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4062,4088,4114,4140,4166],"referencedDeclaration":4114,"src":"12408:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4732_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4732_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4731,"src":"12408:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3889,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"12441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3903,"nodeType":"Block","src":"12499:155:16","statements":[{"id":3902,"nodeType":"UncheckedBlock","src":"12576:64:16","statements":[{"expression":{"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3896,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"12608:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3897,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"12614:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3901,"nodeType":"ExpressionStatement","src":"12608:13:16"}]}]},"id":3904,"nodeType":"IfStatement","src":"12404:250:16","trueBody":{"id":3895,"nodeType":"Block","src":"12450:43:16","statements":[{"expression":{"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3891,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"12468:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3892,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"12475:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3894,"nodeType":"ExpressionStatement","src":"12468:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3873,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"12120:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3874,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"12126:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3906,"nodeType":"WhileStatement","src":"12113:551:16"},{"expression":{"id":3907,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"12681:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3856,"id":3908,"nodeType":"Return","src":"12674:10:16"}]},"documentation":{"id":3847,"nodeType":"StructuredDocumentation","src":"11471:412:16","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3910,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:16","nodeType":"FunctionDefinition","parameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"array","nameLocation":"11926:5:16","nodeType":"VariableDeclaration","scope":3910,"src":"11908:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3848,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3849,"nodeType":"ArrayTypeName","src":"11908:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"element","nameLocation":"11941:7:16","nodeType":"VariableDeclaration","scope":3910,"src":"11933:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:16"},"returnParameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3910,"src":"11973:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:16"},"scope":4287,"src":"11888:803:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3972,"nodeType":"Block","src":"12875:709:16","statements":[{"assignments":[3922],"declarations":[{"constant":false,"id":3922,"mutability":"mutable","name":"low","nameLocation":"12893:3:16","nodeType":"VariableDeclaration","scope":3972,"src":"12885:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3924,"initialValue":{"hexValue":"30","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:16"},{"assignments":[3926],"declarations":[{"constant":false,"id":3926,"mutability":"mutable","name":"high","nameLocation":"12918:4:16","nodeType":"VariableDeclaration","scope":3972,"src":"12910:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3929,"initialValue":{"expression":{"id":3927,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"12925:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:16","memberName":"length","nodeType":"MemberAccess","src":"12925:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3930,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12952:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3936,"nodeType":"IfStatement","src":"12948:48:16","trueBody":{"id":3935,"nodeType":"Block","src":"12963:33:16","statements":[{"expression":{"hexValue":"30","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3920,"id":3934,"nodeType":"Return","src":"12977:8:16"}]}},{"body":{"id":3968,"nodeType":"Block","src":"13025:532:16","statements":[{"assignments":[3941],"declarations":[{"constant":false,"id":3941,"mutability":"mutable","name":"mid","nameLocation":"13047:3:16","nodeType":"VariableDeclaration","scope":3968,"src":"13039:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3947,"initialValue":{"arguments":[{"id":3944,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"13066:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3945,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"13071:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3942,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"13053:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7900_$","typeString":"type(library Math)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"13053:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3949,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"13320:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3950,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"13327:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3948,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4179,4192,4205,4218,4231],"referencedDeclaration":4205,"src":"13301:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3952,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"13334:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3966,"nodeType":"Block","src":"13504:43:16","statements":[{"expression":{"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3962,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"13522:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3963,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"13529:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3965,"nodeType":"ExpressionStatement","src":"13522:10:16"}]},"id":3967,"nodeType":"IfStatement","src":"13297:250:16","trueBody":{"id":3961,"nodeType":"Block","src":"13343:155:16","statements":[{"id":3960,"nodeType":"UncheckedBlock","src":"13420:64:16","statements":[{"expression":{"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3954,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"13452:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"13458:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3959,"nodeType":"ExpressionStatement","src":"13452:13:16"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3937,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"13013:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3938,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"13019:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3969,"nodeType":"WhileStatement","src":"13006:551:16"},{"expression":{"id":3970,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"13574:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3920,"id":3971,"nodeType":"Return","src":"13567:10:16"}]},"documentation":{"id":3911,"nodeType":"StructuredDocumentation","src":"12697:74:16","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":3973,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:16","nodeType":"FunctionDefinition","parameters":{"id":3917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"array","nameLocation":"12819:5:16","nodeType":"VariableDeclaration","scope":3973,"src":"12802:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3913,"nodeType":"ArrayTypeName","src":"12802:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"element","nameLocation":"12834:7:16","nodeType":"VariableDeclaration","scope":3973,"src":"12826:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:16"},"returnParameters":{"id":3920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"12866:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3918,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:16"},"scope":4287,"src":"12776:808:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4035,"nodeType":"Block","src":"13768:709:16","statements":[{"assignments":[3985],"declarations":[{"constant":false,"id":3985,"mutability":"mutable","name":"low","nameLocation":"13786:3:16","nodeType":"VariableDeclaration","scope":4035,"src":"13778:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3987,"initialValue":{"hexValue":"30","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:16"},{"assignments":[3989],"declarations":[{"constant":false,"id":3989,"mutability":"mutable","name":"high","nameLocation":"13811:4:16","nodeType":"VariableDeclaration","scope":4035,"src":"13803:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3992,"initialValue":{"expression":{"id":3990,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"13818:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:16","memberName":"length","nodeType":"MemberAccess","src":"13818:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"13845:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3999,"nodeType":"IfStatement","src":"13841:48:16","trueBody":{"id":3998,"nodeType":"Block","src":"13856:33:16","statements":[{"expression":{"hexValue":"30","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3983,"id":3997,"nodeType":"Return","src":"13870:8:16"}]}},{"body":{"id":4031,"nodeType":"Block","src":"13918:532:16","statements":[{"assignments":[4004],"declarations":[{"constant":false,"id":4004,"mutability":"mutable","name":"mid","nameLocation":"13940:3:16","nodeType":"VariableDeclaration","scope":4031,"src":"13932:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4010,"initialValue":{"arguments":[{"id":4007,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"13959:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4008,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"13964:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4005,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"13946:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7900_$","typeString":"type(library Math)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"13946:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4012,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"14213:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4013,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"14220:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4011,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4179,4192,4205,4218,4231],"referencedDeclaration":4205,"src":"14194:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4015,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"14227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4029,"nodeType":"Block","src":"14285:155:16","statements":[{"id":4028,"nodeType":"UncheckedBlock","src":"14362:64:16","statements":[{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4022,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"14394:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"14400:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4027,"nodeType":"ExpressionStatement","src":"14394:13:16"}]}]},"id":4030,"nodeType":"IfStatement","src":"14190:250:16","trueBody":{"id":4021,"nodeType":"Block","src":"14236:43:16","statements":[{"expression":{"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4017,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"14254:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4018,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"14261:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4020,"nodeType":"ExpressionStatement","src":"14254:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4000,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"13906:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4001,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"13912:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4032,"nodeType":"WhileStatement","src":"13899:551:16"},{"expression":{"id":4033,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"14467:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3983,"id":4034,"nodeType":"Return","src":"14460:10:16"}]},"documentation":{"id":3974,"nodeType":"StructuredDocumentation","src":"13590:74:16","text":" @dev Same as {upperBound}, but with an array in memory."},"id":4036,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:16","nodeType":"FunctionDefinition","parameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"array","nameLocation":"13712:5:16","nodeType":"VariableDeclaration","scope":4036,"src":"13695:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3976,"nodeType":"ArrayTypeName","src":"13695:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3979,"mutability":"mutable","name":"element","nameLocation":"13727:7:16","nodeType":"VariableDeclaration","scope":4036,"src":"13719:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:16"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4036,"src":"13759:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:16"},"scope":4287,"src":"13669:808:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4061,"nodeType":"Block","src":"14793:167:16","statements":[{"assignments":[4049],"declarations":[{"constant":false,"id":4049,"mutability":"mutable","name":"slot","nameLocation":"14811:4:16","nodeType":"VariableDeclaration","scope":4061,"src":"14803:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4050,"nodeType":"VariableDeclarationStatement","src":"14803:12:16"},{"AST":{"nativeSrc":"14850:40:16","nodeType":"YulBlock","src":"14850:40:16","statements":[{"nativeSrc":"14864:16:16","nodeType":"YulAssignment","src":"14864:16:16","value":{"name":"arr.slot","nativeSrc":"14872:8:16","nodeType":"YulIdentifier","src":"14872:8:16"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:16","nodeType":"YulIdentifier","src":"14864:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4040,"isOffset":false,"isSlot":true,"src":"14872:8:16","suffix":"slot","valueSize":1},{"declaration":4049,"isOffset":false,"isSlot":false,"src":"14864:4:16","valueSize":1}],"flags":["memory-safe"],"id":4051,"nodeType":"InlineAssembly","src":"14825:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4056,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"14932:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4052,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"14906:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"14906:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"14906:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:16","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4752,"src":"14906:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4723_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4723_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":4047,"id":4060,"nodeType":"Return","src":"14899:54:16"}]},"documentation":{"id":4037,"nodeType":"StructuredDocumentation","src":"14483:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4062,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:16","nodeType":"FunctionDefinition","parameters":{"id":4043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4040,"mutability":"mutable","name":"arr","nameLocation":"14719:3:16","nodeType":"VariableDeclaration","scope":4062,"src":"14701:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4038,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4039,"nodeType":"ArrayTypeName","src":"14701:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4042,"mutability":"mutable","name":"pos","nameLocation":"14732:3:16","nodeType":"VariableDeclaration","scope":4062,"src":"14724:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:16"},"returnParameters":{"id":4047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4062,"src":"14760:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4723_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4045,"nodeType":"UserDefinedTypeName","pathNode":{"id":4044,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:16","14772:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":4723,"src":"14760:23:16"},"referencedDeclaration":4723,"src":"14760:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4723_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:16"},"scope":4287,"src":"14679:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4087,"nodeType":"Block","src":"15276:167:16","statements":[{"assignments":[4075],"declarations":[{"constant":false,"id":4075,"mutability":"mutable","name":"slot","nameLocation":"15294:4:16","nodeType":"VariableDeclaration","scope":4087,"src":"15286:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4076,"nodeType":"VariableDeclarationStatement","src":"15286:12:16"},{"AST":{"nativeSrc":"15333:40:16","nodeType":"YulBlock","src":"15333:40:16","statements":[{"nativeSrc":"15347:16:16","nodeType":"YulAssignment","src":"15347:16:16","value":{"name":"arr.slot","nativeSrc":"15355:8:16","nodeType":"YulIdentifier","src":"15355:8:16"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:16","nodeType":"YulIdentifier","src":"15347:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4066,"isOffset":false,"isSlot":true,"src":"15355:8:16","suffix":"slot","valueSize":1},{"declaration":4075,"isOffset":false,"isSlot":false,"src":"15347:4:16","valueSize":1}],"flags":["memory-safe"],"id":4077,"nodeType":"InlineAssembly","src":"15308:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4082,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"15415:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4078,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"15389:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"15389:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"15389:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:16","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":4774,"src":"15389:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$4729_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4729_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":4073,"id":4086,"nodeType":"Return","src":"15382:54:16"}]},"documentation":{"id":4063,"nodeType":"StructuredDocumentation","src":"14966:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4088,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:16","nodeType":"FunctionDefinition","parameters":{"id":4069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"arr","nameLocation":"15202:3:16","nodeType":"VariableDeclaration","scope":4088,"src":"15184:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4065,"nodeType":"ArrayTypeName","src":"15184:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4068,"mutability":"mutable","name":"pos","nameLocation":"15215:3:16","nodeType":"VariableDeclaration","scope":4088,"src":"15207:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4067,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:16"},"returnParameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4088,"src":"15243:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4729_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4071,"nodeType":"UserDefinedTypeName","pathNode":{"id":4070,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:16","15255:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":4729,"src":"15243:23:16"},"referencedDeclaration":4729,"src":"15243:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4729_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:16"},"scope":4287,"src":"15162:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4113,"nodeType":"Block","src":"15759:167:16","statements":[{"assignments":[4101],"declarations":[{"constant":false,"id":4101,"mutability":"mutable","name":"slot","nameLocation":"15777:4:16","nodeType":"VariableDeclaration","scope":4113,"src":"15769:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4102,"nodeType":"VariableDeclarationStatement","src":"15769:12:16"},{"AST":{"nativeSrc":"15816:40:16","nodeType":"YulBlock","src":"15816:40:16","statements":[{"nativeSrc":"15830:16:16","nodeType":"YulAssignment","src":"15830:16:16","value":{"name":"arr.slot","nativeSrc":"15838:8:16","nodeType":"YulIdentifier","src":"15838:8:16"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:16","nodeType":"YulIdentifier","src":"15830:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4092,"isOffset":false,"isSlot":true,"src":"15838:8:16","suffix":"slot","valueSize":1},{"declaration":4101,"isOffset":false,"isSlot":false,"src":"15830:4:16","valueSize":1}],"flags":["memory-safe"],"id":4103,"nodeType":"InlineAssembly","src":"15791:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4108,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"15898:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4104,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"15872:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"15872:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"15872:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:16","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":4785,"src":"15872:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$4732_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4732_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":4099,"id":4112,"nodeType":"Return","src":"15865:54:16"}]},"documentation":{"id":4089,"nodeType":"StructuredDocumentation","src":"15449:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4114,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:16","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4092,"mutability":"mutable","name":"arr","nameLocation":"15685:3:16","nodeType":"VariableDeclaration","scope":4114,"src":"15667:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4090,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4091,"nodeType":"ArrayTypeName","src":"15667:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4094,"mutability":"mutable","name":"pos","nameLocation":"15698:3:16","nodeType":"VariableDeclaration","scope":4114,"src":"15690:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4093,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:16"},"returnParameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4114,"src":"15726:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4732_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4097,"nodeType":"UserDefinedTypeName","pathNode":{"id":4096,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:16","15738:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":4732,"src":"15726:23:16"},"referencedDeclaration":4732,"src":"15726:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4732_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:16"},"scope":4287,"src":"15645:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4139,"nodeType":"Block","src":"16238:165:16","statements":[{"assignments":[4127],"declarations":[{"constant":false,"id":4127,"mutability":"mutable","name":"slot","nameLocation":"16256:4:16","nodeType":"VariableDeclaration","scope":4139,"src":"16248:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16248:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4128,"nodeType":"VariableDeclarationStatement","src":"16248:12:16"},{"AST":{"nativeSrc":"16295:40:16","nodeType":"YulBlock","src":"16295:40:16","statements":[{"nativeSrc":"16309:16:16","nodeType":"YulAssignment","src":"16309:16:16","value":{"name":"arr.slot","nativeSrc":"16317:8:16","nodeType":"YulIdentifier","src":"16317:8:16"},"variableNames":[{"name":"slot","nativeSrc":"16309:4:16","nodeType":"YulIdentifier","src":"16309:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4118,"isOffset":false,"isSlot":true,"src":"16317:8:16","suffix":"slot","valueSize":1},{"declaration":4127,"isOffset":false,"isSlot":false,"src":"16309:4:16","valueSize":1}],"flags":["memory-safe"],"id":4129,"nodeType":"InlineAssembly","src":"16270:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4134,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"16377:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4130,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"16351:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16356:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"16351:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16370:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"16351:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16382:12:16","memberName":"getBytesSlot","nodeType":"MemberAccess","referencedDeclaration":4829,"src":"16351:43:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BytesSlot_$4741_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BytesSlot storage pointer)"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4741_storage_ptr","typeString":"struct StorageSlot.BytesSlot storage pointer"}},"functionReturnParameters":4125,"id":4138,"nodeType":"Return","src":"16344:52:16"}]},"documentation":{"id":4115,"nodeType":"StructuredDocumentation","src":"15932:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4140,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16137:12:16","nodeType":"FunctionDefinition","parameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"arr","nameLocation":"16166:3:16","nodeType":"VariableDeclaration","scope":4140,"src":"16150:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4116,"name":"bytes","nodeType":"ElementaryTypeName","src":"16150:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4117,"nodeType":"ArrayTypeName","src":"16150:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4120,"mutability":"mutable","name":"pos","nameLocation":"16179:3:16","nodeType":"VariableDeclaration","scope":4140,"src":"16171:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"16171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16149:34:16"},"returnParameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4140,"src":"16207:29:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4741_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4123,"nodeType":"UserDefinedTypeName","pathNode":{"id":4122,"name":"StorageSlot.BytesSlot","nameLocations":["16207:11:16","16219:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":4741,"src":"16207:21:16"},"referencedDeclaration":4741,"src":"16207:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4741_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"16206:31:16"},"scope":4287,"src":"16128:275:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4165,"nodeType":"Block","src":"16717:166:16","statements":[{"assignments":[4153],"declarations":[{"constant":false,"id":4153,"mutability":"mutable","name":"slot","nameLocation":"16735:4:16","nodeType":"VariableDeclaration","scope":4165,"src":"16727:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16727:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4154,"nodeType":"VariableDeclarationStatement","src":"16727:12:16"},{"AST":{"nativeSrc":"16774:40:16","nodeType":"YulBlock","src":"16774:40:16","statements":[{"nativeSrc":"16788:16:16","nodeType":"YulAssignment","src":"16788:16:16","value":{"name":"arr.slot","nativeSrc":"16796:8:16","nodeType":"YulIdentifier","src":"16796:8:16"},"variableNames":[{"name":"slot","nativeSrc":"16788:4:16","nodeType":"YulIdentifier","src":"16788:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4144,"isOffset":false,"isSlot":true,"src":"16796:8:16","suffix":"slot","valueSize":1},{"declaration":4153,"isOffset":false,"isSlot":false,"src":"16788:4:16","valueSize":1}],"flags":["memory-safe"],"id":4155,"nodeType":"InlineAssembly","src":"16749:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4160,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"16856:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4156,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"16830:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16835:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"16830:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16849:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"16830:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16861:13:16","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":4807,"src":"16830:44:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_StringSlot_$4738_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4738_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"functionReturnParameters":4151,"id":4164,"nodeType":"Return","src":"16823:53:16"}]},"documentation":{"id":4141,"nodeType":"StructuredDocumentation","src":"16409:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4166,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16614:12:16","nodeType":"FunctionDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"mutability":"mutable","name":"arr","nameLocation":"16644:3:16","nodeType":"VariableDeclaration","scope":4166,"src":"16627:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4142,"name":"string","nodeType":"ElementaryTypeName","src":"16627:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4143,"nodeType":"ArrayTypeName","src":"16627:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"pos","nameLocation":"16657:3:16","nodeType":"VariableDeclaration","scope":4166,"src":"16649:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"16649:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16626:35:16"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4166,"src":"16685:30:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4738_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4149,"nodeType":"UserDefinedTypeName","pathNode":{"id":4148,"name":"StorageSlot.StringSlot","nameLocations":["16685:11:16","16697:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":4738,"src":"16685:22:16"},"referencedDeclaration":4738,"src":"16685:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4738_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"16684:32:16"},"scope":4287,"src":"16605:278:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4178,"nodeType":"Block","src":"17184:98:16","statements":[{"AST":{"nativeSrc":"17203:73:16","nodeType":"YulBlock","src":"17203:73:16","statements":[{"nativeSrc":"17217:49:16","nodeType":"YulAssignment","src":"17217:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17238:3:16","nodeType":"YulIdentifier","src":"17238:3:16"},{"kind":"number","nativeSrc":"17243:4:16","nodeType":"YulLiteral","src":"17243:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17234:3:16","nodeType":"YulIdentifier","src":"17234:3:16"},"nativeSrc":"17234:14:16","nodeType":"YulFunctionCall","src":"17234:14:16"},{"arguments":[{"name":"pos","nativeSrc":"17254:3:16","nodeType":"YulIdentifier","src":"17254:3:16"},{"kind":"number","nativeSrc":"17259:4:16","nodeType":"YulLiteral","src":"17259:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17250:3:16","nodeType":"YulIdentifier","src":"17250:3:16"},"nativeSrc":"17250:14:16","nodeType":"YulFunctionCall","src":"17250:14:16"}],"functionName":{"name":"add","nativeSrc":"17230:3:16","nodeType":"YulIdentifier","src":"17230:3:16"},"nativeSrc":"17230:35:16","nodeType":"YulFunctionCall","src":"17230:35:16"}],"functionName":{"name":"mload","nativeSrc":"17224:5:16","nodeType":"YulIdentifier","src":"17224:5:16"},"nativeSrc":"17224:42:16","nodeType":"YulFunctionCall","src":"17224:42:16"},"variableNames":[{"name":"res","nativeSrc":"17217:3:16","nodeType":"YulIdentifier","src":"17217:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4170,"isOffset":false,"isSlot":false,"src":"17238:3:16","valueSize":1},{"declaration":4172,"isOffset":false,"isSlot":false,"src":"17254:3:16","valueSize":1},{"declaration":4175,"isOffset":false,"isSlot":false,"src":"17217:3:16","valueSize":1}],"id":4177,"nodeType":"InlineAssembly","src":"17194:82:16"}]},"documentation":{"id":4167,"nodeType":"StructuredDocumentation","src":"16889:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4179,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17094:18:16","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"arr","nameLocation":"17130:3:16","nodeType":"VariableDeclaration","scope":4179,"src":"17113:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4168,"name":"address","nodeType":"ElementaryTypeName","src":"17113:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4169,"nodeType":"ArrayTypeName","src":"17113:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"pos","nameLocation":"17143:3:16","nodeType":"VariableDeclaration","scope":4179,"src":"17135:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"17135:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17112:35:16"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"res","nameLocation":"17179:3:16","nodeType":"VariableDeclaration","scope":4179,"src":"17171:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4174,"name":"address","nodeType":"ElementaryTypeName","src":"17171:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17170:13:16"},"scope":4287,"src":"17085:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4191,"nodeType":"Block","src":"17583:98:16","statements":[{"AST":{"nativeSrc":"17602:73:16","nodeType":"YulBlock","src":"17602:73:16","statements":[{"nativeSrc":"17616:49:16","nodeType":"YulAssignment","src":"17616:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17637:3:16","nodeType":"YulIdentifier","src":"17637:3:16"},{"kind":"number","nativeSrc":"17642:4:16","nodeType":"YulLiteral","src":"17642:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17633:3:16","nodeType":"YulIdentifier","src":"17633:3:16"},"nativeSrc":"17633:14:16","nodeType":"YulFunctionCall","src":"17633:14:16"},{"arguments":[{"name":"pos","nativeSrc":"17653:3:16","nodeType":"YulIdentifier","src":"17653:3:16"},{"kind":"number","nativeSrc":"17658:4:16","nodeType":"YulLiteral","src":"17658:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17649:3:16","nodeType":"YulIdentifier","src":"17649:3:16"},"nativeSrc":"17649:14:16","nodeType":"YulFunctionCall","src":"17649:14:16"}],"functionName":{"name":"add","nativeSrc":"17629:3:16","nodeType":"YulIdentifier","src":"17629:3:16"},"nativeSrc":"17629:35:16","nodeType":"YulFunctionCall","src":"17629:35:16"}],"functionName":{"name":"mload","nativeSrc":"17623:5:16","nodeType":"YulIdentifier","src":"17623:5:16"},"nativeSrc":"17623:42:16","nodeType":"YulFunctionCall","src":"17623:42:16"},"variableNames":[{"name":"res","nativeSrc":"17616:3:16","nodeType":"YulIdentifier","src":"17616:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4183,"isOffset":false,"isSlot":false,"src":"17637:3:16","valueSize":1},{"declaration":4185,"isOffset":false,"isSlot":false,"src":"17653:3:16","valueSize":1},{"declaration":4188,"isOffset":false,"isSlot":false,"src":"17616:3:16","valueSize":1}],"id":4190,"nodeType":"InlineAssembly","src":"17593:82:16"}]},"documentation":{"id":4180,"nodeType":"StructuredDocumentation","src":"17288:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4192,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17493:18:16","nodeType":"FunctionDefinition","parameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"arr","nameLocation":"17529:3:16","nodeType":"VariableDeclaration","scope":4192,"src":"17512:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17512:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4182,"nodeType":"ArrayTypeName","src":"17512:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4185,"mutability":"mutable","name":"pos","nameLocation":"17542:3:16","nodeType":"VariableDeclaration","scope":4192,"src":"17534:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint256","nodeType":"ElementaryTypeName","src":"17534:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17511:35:16"},"returnParameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"res","nameLocation":"17578:3:16","nodeType":"VariableDeclaration","scope":4192,"src":"17570:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17570:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17569:13:16"},"scope":4287,"src":"17484:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4204,"nodeType":"Block","src":"17982:98:16","statements":[{"AST":{"nativeSrc":"18001:73:16","nodeType":"YulBlock","src":"18001:73:16","statements":[{"nativeSrc":"18015:49:16","nodeType":"YulAssignment","src":"18015:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18036:3:16","nodeType":"YulIdentifier","src":"18036:3:16"},{"kind":"number","nativeSrc":"18041:4:16","nodeType":"YulLiteral","src":"18041:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18032:3:16","nodeType":"YulIdentifier","src":"18032:3:16"},"nativeSrc":"18032:14:16","nodeType":"YulFunctionCall","src":"18032:14:16"},{"arguments":[{"name":"pos","nativeSrc":"18052:3:16","nodeType":"YulIdentifier","src":"18052:3:16"},{"kind":"number","nativeSrc":"18057:4:16","nodeType":"YulLiteral","src":"18057:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18048:3:16","nodeType":"YulIdentifier","src":"18048:3:16"},"nativeSrc":"18048:14:16","nodeType":"YulFunctionCall","src":"18048:14:16"}],"functionName":{"name":"add","nativeSrc":"18028:3:16","nodeType":"YulIdentifier","src":"18028:3:16"},"nativeSrc":"18028:35:16","nodeType":"YulFunctionCall","src":"18028:35:16"}],"functionName":{"name":"mload","nativeSrc":"18022:5:16","nodeType":"YulIdentifier","src":"18022:5:16"},"nativeSrc":"18022:42:16","nodeType":"YulFunctionCall","src":"18022:42:16"},"variableNames":[{"name":"res","nativeSrc":"18015:3:16","nodeType":"YulIdentifier","src":"18015:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4196,"isOffset":false,"isSlot":false,"src":"18036:3:16","valueSize":1},{"declaration":4198,"isOffset":false,"isSlot":false,"src":"18052:3:16","valueSize":1},{"declaration":4201,"isOffset":false,"isSlot":false,"src":"18015:3:16","valueSize":1}],"id":4203,"nodeType":"InlineAssembly","src":"17992:82:16"}]},"documentation":{"id":4193,"nodeType":"StructuredDocumentation","src":"17687:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4205,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17892:18:16","nodeType":"FunctionDefinition","parameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"arr","nameLocation":"17928:3:16","nodeType":"VariableDeclaration","scope":4205,"src":"17911:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"17911:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4195,"nodeType":"ArrayTypeName","src":"17911:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4198,"mutability":"mutable","name":"pos","nameLocation":"17941:3:16","nodeType":"VariableDeclaration","scope":4205,"src":"17933:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4197,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17910:35:16"},"returnParameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4201,"mutability":"mutable","name":"res","nameLocation":"17977:3:16","nodeType":"VariableDeclaration","scope":4205,"src":"17969:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"17969:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17968:13:16"},"scope":4287,"src":"17883:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4217,"nodeType":"Block","src":"18384:98:16","statements":[{"AST":{"nativeSrc":"18403:73:16","nodeType":"YulBlock","src":"18403:73:16","statements":[{"nativeSrc":"18417:49:16","nodeType":"YulAssignment","src":"18417:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18438:3:16","nodeType":"YulIdentifier","src":"18438:3:16"},{"kind":"number","nativeSrc":"18443:4:16","nodeType":"YulLiteral","src":"18443:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18434:3:16","nodeType":"YulIdentifier","src":"18434:3:16"},"nativeSrc":"18434:14:16","nodeType":"YulFunctionCall","src":"18434:14:16"},{"arguments":[{"name":"pos","nativeSrc":"18454:3:16","nodeType":"YulIdentifier","src":"18454:3:16"},{"kind":"number","nativeSrc":"18459:4:16","nodeType":"YulLiteral","src":"18459:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18450:3:16","nodeType":"YulIdentifier","src":"18450:3:16"},"nativeSrc":"18450:14:16","nodeType":"YulFunctionCall","src":"18450:14:16"}],"functionName":{"name":"add","nativeSrc":"18430:3:16","nodeType":"YulIdentifier","src":"18430:3:16"},"nativeSrc":"18430:35:16","nodeType":"YulFunctionCall","src":"18430:35:16"}],"functionName":{"name":"mload","nativeSrc":"18424:5:16","nodeType":"YulIdentifier","src":"18424:5:16"},"nativeSrc":"18424:42:16","nodeType":"YulFunctionCall","src":"18424:42:16"},"variableNames":[{"name":"res","nativeSrc":"18417:3:16","nodeType":"YulIdentifier","src":"18417:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4209,"isOffset":false,"isSlot":false,"src":"18438:3:16","valueSize":1},{"declaration":4211,"isOffset":false,"isSlot":false,"src":"18454:3:16","valueSize":1},{"declaration":4214,"isOffset":false,"isSlot":false,"src":"18417:3:16","valueSize":1}],"id":4216,"nodeType":"InlineAssembly","src":"18394:82:16"}]},"documentation":{"id":4206,"nodeType":"StructuredDocumentation","src":"18086:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18291:18:16","nodeType":"FunctionDefinition","parameters":{"id":4212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4209,"mutability":"mutable","name":"arr","nameLocation":"18325:3:16","nodeType":"VariableDeclaration","scope":4218,"src":"18310:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4207,"name":"bytes","nodeType":"ElementaryTypeName","src":"18310:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4208,"nodeType":"ArrayTypeName","src":"18310:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"pos","nameLocation":"18338:3:16","nodeType":"VariableDeclaration","scope":4218,"src":"18330:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"18330:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18309:33:16"},"returnParameters":{"id":4215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4214,"mutability":"mutable","name":"res","nameLocation":"18379:3:16","nodeType":"VariableDeclaration","scope":4218,"src":"18366:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4213,"name":"bytes","nodeType":"ElementaryTypeName","src":"18366:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18365:18:16"},"scope":4287,"src":"18282:200:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4230,"nodeType":"Block","src":"18788:98:16","statements":[{"AST":{"nativeSrc":"18807:73:16","nodeType":"YulBlock","src":"18807:73:16","statements":[{"nativeSrc":"18821:49:16","nodeType":"YulAssignment","src":"18821:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18842:3:16","nodeType":"YulIdentifier","src":"18842:3:16"},{"kind":"number","nativeSrc":"18847:4:16","nodeType":"YulLiteral","src":"18847:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18838:3:16","nodeType":"YulIdentifier","src":"18838:3:16"},"nativeSrc":"18838:14:16","nodeType":"YulFunctionCall","src":"18838:14:16"},{"arguments":[{"name":"pos","nativeSrc":"18858:3:16","nodeType":"YulIdentifier","src":"18858:3:16"},{"kind":"number","nativeSrc":"18863:4:16","nodeType":"YulLiteral","src":"18863:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18854:3:16","nodeType":"YulIdentifier","src":"18854:3:16"},"nativeSrc":"18854:14:16","nodeType":"YulFunctionCall","src":"18854:14:16"}],"functionName":{"name":"add","nativeSrc":"18834:3:16","nodeType":"YulIdentifier","src":"18834:3:16"},"nativeSrc":"18834:35:16","nodeType":"YulFunctionCall","src":"18834:35:16"}],"functionName":{"name":"mload","nativeSrc":"18828:5:16","nodeType":"YulIdentifier","src":"18828:5:16"},"nativeSrc":"18828:42:16","nodeType":"YulFunctionCall","src":"18828:42:16"},"variableNames":[{"name":"res","nativeSrc":"18821:3:16","nodeType":"YulIdentifier","src":"18821:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4222,"isOffset":false,"isSlot":false,"src":"18842:3:16","valueSize":1},{"declaration":4224,"isOffset":false,"isSlot":false,"src":"18858:3:16","valueSize":1},{"declaration":4227,"isOffset":false,"isSlot":false,"src":"18821:3:16","valueSize":1}],"id":4229,"nodeType":"InlineAssembly","src":"18798:82:16"}]},"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"18488:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4231,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18693:18:16","nodeType":"FunctionDefinition","parameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4222,"mutability":"mutable","name":"arr","nameLocation":"18728:3:16","nodeType":"VariableDeclaration","scope":4231,"src":"18712:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4220,"name":"string","nodeType":"ElementaryTypeName","src":"18712:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4221,"nodeType":"ArrayTypeName","src":"18712:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4224,"mutability":"mutable","name":"pos","nameLocation":"18741:3:16","nodeType":"VariableDeclaration","scope":4231,"src":"18733:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"18733:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18711:34:16"},"returnParameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"res","nameLocation":"18783:3:16","nodeType":"VariableDeclaration","scope":4231,"src":"18769:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4226,"name":"string","nodeType":"ElementaryTypeName","src":"18769:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18768:19:16"},"scope":4287,"src":"18684:202:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"19202:88:16","statements":[{"AST":{"nativeSrc":"19237:47:16","nodeType":"YulBlock","src":"19237:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19258:10:16","nodeType":"YulIdentifier","src":"19258:10:16"},{"name":"len","nativeSrc":"19270:3:16","nodeType":"YulIdentifier","src":"19270:3:16"}],"functionName":{"name":"sstore","nativeSrc":"19251:6:16","nodeType":"YulIdentifier","src":"19251:6:16"},"nativeSrc":"19251:23:16","nodeType":"YulFunctionCall","src":"19251:23:16"},"nativeSrc":"19251:23:16","nodeType":"YulExpressionStatement","src":"19251:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4235,"isOffset":false,"isSlot":true,"src":"19258:10:16","suffix":"slot","valueSize":1},{"declaration":4237,"isOffset":false,"isSlot":false,"src":"19270:3:16","valueSize":1}],"flags":["memory-safe"],"id":4240,"nodeType":"InlineAssembly","src":"19212:72:16"}]},"documentation":{"id":4232,"nodeType":"StructuredDocumentation","src":"18892:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19139:15:16","nodeType":"FunctionDefinition","parameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"array","nameLocation":"19173:5:16","nodeType":"VariableDeclaration","scope":4242,"src":"19155:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4233,"name":"address","nodeType":"ElementaryTypeName","src":"19155:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4234,"nodeType":"ArrayTypeName","src":"19155:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"len","nameLocation":"19188:3:16","nodeType":"VariableDeclaration","scope":4242,"src":"19180:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"19180:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19154:38:16"},"returnParameters":{"id":4239,"nodeType":"ParameterList","parameters":[],"src":"19202:0:16"},"scope":4287,"src":"19130:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4252,"nodeType":"Block","src":"19606:88:16","statements":[{"AST":{"nativeSrc":"19641:47:16","nodeType":"YulBlock","src":"19641:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19662:10:16","nodeType":"YulIdentifier","src":"19662:10:16"},{"name":"len","nativeSrc":"19674:3:16","nodeType":"YulIdentifier","src":"19674:3:16"}],"functionName":{"name":"sstore","nativeSrc":"19655:6:16","nodeType":"YulIdentifier","src":"19655:6:16"},"nativeSrc":"19655:23:16","nodeType":"YulFunctionCall","src":"19655:23:16"},"nativeSrc":"19655:23:16","nodeType":"YulExpressionStatement","src":"19655:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4246,"isOffset":false,"isSlot":true,"src":"19662:10:16","suffix":"slot","valueSize":1},{"declaration":4248,"isOffset":false,"isSlot":false,"src":"19674:3:16","valueSize":1}],"flags":["memory-safe"],"id":4251,"nodeType":"InlineAssembly","src":"19616:72:16"}]},"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"19296:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4253,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19543:15:16","nodeType":"FunctionDefinition","parameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"array","nameLocation":"19577:5:16","nodeType":"VariableDeclaration","scope":4253,"src":"19559:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19559:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4245,"nodeType":"ArrayTypeName","src":"19559:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"len","nameLocation":"19592:3:16","nodeType":"VariableDeclaration","scope":4253,"src":"19584:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"19584:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19558:38:16"},"returnParameters":{"id":4250,"nodeType":"ParameterList","parameters":[],"src":"19606:0:16"},"scope":4287,"src":"19534:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4263,"nodeType":"Block","src":"20010:88:16","statements":[{"AST":{"nativeSrc":"20045:47:16","nodeType":"YulBlock","src":"20045:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20066:10:16","nodeType":"YulIdentifier","src":"20066:10:16"},{"name":"len","nativeSrc":"20078:3:16","nodeType":"YulIdentifier","src":"20078:3:16"}],"functionName":{"name":"sstore","nativeSrc":"20059:6:16","nodeType":"YulIdentifier","src":"20059:6:16"},"nativeSrc":"20059:23:16","nodeType":"YulFunctionCall","src":"20059:23:16"},"nativeSrc":"20059:23:16","nodeType":"YulExpressionStatement","src":"20059:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4257,"isOffset":false,"isSlot":true,"src":"20066:10:16","suffix":"slot","valueSize":1},{"declaration":4259,"isOffset":false,"isSlot":false,"src":"20078:3:16","valueSize":1}],"flags":["memory-safe"],"id":4262,"nodeType":"InlineAssembly","src":"20020:72:16"}]},"documentation":{"id":4254,"nodeType":"StructuredDocumentation","src":"19700:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4264,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19947:15:16","nodeType":"FunctionDefinition","parameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"array","nameLocation":"19981:5:16","nodeType":"VariableDeclaration","scope":4264,"src":"19963:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"19963:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4256,"nodeType":"ArrayTypeName","src":"19963:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4259,"mutability":"mutable","name":"len","nameLocation":"19996:3:16","nodeType":"VariableDeclaration","scope":4264,"src":"19988:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4258,"name":"uint256","nodeType":"ElementaryTypeName","src":"19988:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19962:38:16"},"returnParameters":{"id":4261,"nodeType":"ParameterList","parameters":[],"src":"20010:0:16"},"scope":4287,"src":"19938:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4274,"nodeType":"Block","src":"20412:88:16","statements":[{"AST":{"nativeSrc":"20447:47:16","nodeType":"YulBlock","src":"20447:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20468:10:16","nodeType":"YulIdentifier","src":"20468:10:16"},{"name":"len","nativeSrc":"20480:3:16","nodeType":"YulIdentifier","src":"20480:3:16"}],"functionName":{"name":"sstore","nativeSrc":"20461:6:16","nodeType":"YulIdentifier","src":"20461:6:16"},"nativeSrc":"20461:23:16","nodeType":"YulFunctionCall","src":"20461:23:16"},"nativeSrc":"20461:23:16","nodeType":"YulExpressionStatement","src":"20461:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4268,"isOffset":false,"isSlot":true,"src":"20468:10:16","suffix":"slot","valueSize":1},{"declaration":4270,"isOffset":false,"isSlot":false,"src":"20480:3:16","valueSize":1}],"flags":["memory-safe"],"id":4273,"nodeType":"InlineAssembly","src":"20422:72:16"}]},"documentation":{"id":4265,"nodeType":"StructuredDocumentation","src":"20104:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4275,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20351:15:16","nodeType":"FunctionDefinition","parameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"array","nameLocation":"20383:5:16","nodeType":"VariableDeclaration","scope":4275,"src":"20367:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4266,"name":"bytes","nodeType":"ElementaryTypeName","src":"20367:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4267,"nodeType":"ArrayTypeName","src":"20367:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4270,"mutability":"mutable","name":"len","nameLocation":"20398:3:16","nodeType":"VariableDeclaration","scope":4275,"src":"20390:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20366:36:16"},"returnParameters":{"id":4272,"nodeType":"ParameterList","parameters":[],"src":"20412:0:16"},"scope":4287,"src":"20342:158:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4285,"nodeType":"Block","src":"20815:88:16","statements":[{"AST":{"nativeSrc":"20850:47:16","nodeType":"YulBlock","src":"20850:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20871:10:16","nodeType":"YulIdentifier","src":"20871:10:16"},{"name":"len","nativeSrc":"20883:3:16","nodeType":"YulIdentifier","src":"20883:3:16"}],"functionName":{"name":"sstore","nativeSrc":"20864:6:16","nodeType":"YulIdentifier","src":"20864:6:16"},"nativeSrc":"20864:23:16","nodeType":"YulFunctionCall","src":"20864:23:16"},"nativeSrc":"20864:23:16","nodeType":"YulExpressionStatement","src":"20864:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4279,"isOffset":false,"isSlot":true,"src":"20871:10:16","suffix":"slot","valueSize":1},{"declaration":4281,"isOffset":false,"isSlot":false,"src":"20883:3:16","valueSize":1}],"flags":["memory-safe"],"id":4284,"nodeType":"InlineAssembly","src":"20825:72:16"}]},"documentation":{"id":4276,"nodeType":"StructuredDocumentation","src":"20506:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4286,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20753:15:16","nodeType":"FunctionDefinition","parameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"array","nameLocation":"20786:5:16","nodeType":"VariableDeclaration","scope":4286,"src":"20769:22:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4277,"name":"string","nodeType":"ElementaryTypeName","src":"20769:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4278,"nodeType":"ArrayTypeName","src":"20769:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4281,"mutability":"mutable","name":"len","nameLocation":"20801:3:16","nodeType":"VariableDeclaration","scope":4286,"src":"20793:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"20793:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20768:37:16"},"returnParameters":{"id":4283,"nodeType":"ParameterList","parameters":[],"src":"20815:0:16"},"scope":4287,"src":"20744:159:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4288,"src":"459:20446:16","usedErrors":[],"usedEvents":[]}],"src":"183:20723:16"},"id":16},"@openzeppelin/contracts/utils/Base64.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","exportedSymbols":{"Base64":[4382]},"id":4383,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4289,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Base64","contractDependencies":[],"contractKind":"library","documentation":{"id":4290,"nodeType":"StructuredDocumentation","src":"126:75:17","text":" @dev Provides a set of functions to operate with Base64 strings."},"fullyImplemented":true,"id":4382,"linearizedBaseContracts":[4382],"name":"Base64","nameLocation":"210:6:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":4291,"nodeType":"StructuredDocumentation","src":"223:131:17","text":" @dev Base64 Encoding/Decoding Table\n See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648"},"id":4294,"mutability":"constant","name":"_TABLE","nameLocation":"384:6:17","nodeType":"VariableDeclaration","scope":4382,"src":"359:100:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4292,"name":"string","nodeType":"ElementaryTypeName","src":"359:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"393:66:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"constant":true,"id":4297,"mutability":"constant","name":"_TABLE_URL","nameLocation":"490:10:17","nodeType":"VariableDeclaration","scope":4382,"src":"465:104:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4295,"name":"string","nodeType":"ElementaryTypeName","src":"465:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"503:66:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f7e6d3cba140c1411e96b7033571a229a3135b5c436a9698b398a19a1c64b50","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"},"visibility":"internal"},{"body":{"id":4311,"nodeType":"Block","src":"736:51:17","statements":[{"expression":{"arguments":[{"id":4306,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"761:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4307,"name":"_TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"767:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"775:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4305,"name":"_encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"753:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory,string memory,bool) pure returns (string memory)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"753:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4304,"id":4310,"nodeType":"Return","src":"746:34:17"}]},"documentation":{"id":4298,"nodeType":"StructuredDocumentation","src":"576:82:17","text":" @dev Converts a `bytes` to its Bytes64 `string` representation."},"id":4312,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"672:6:17","nodeType":"FunctionDefinition","parameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"data","nameLocation":"692:4:17","nodeType":"VariableDeclaration","scope":4312,"src":"679:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4299,"name":"bytes","nodeType":"ElementaryTypeName","src":"679:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"678:19:17"},"returnParameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4312,"src":"721:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4302,"name":"string","nodeType":"ElementaryTypeName","src":"721:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"720:15:17"},"scope":4382,"src":"663:124:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4326,"nodeType":"Block","src":"1061:56:17","statements":[{"expression":{"arguments":[{"id":4321,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"1086:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4322,"name":"_TABLE_URL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"1092:10:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1104:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4320,"name":"_encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"1078:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory,string memory,bool) pure returns (string memory)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1078:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4319,"id":4325,"nodeType":"Return","src":"1071:39:17"}]},"documentation":{"id":4313,"nodeType":"StructuredDocumentation","src":"793:187:17","text":" @dev Converts a `bytes` to its Bytes64Url `string` representation.\n Output is not padded with `=` as specified in https://www.rfc-editor.org/rfc/rfc4648[rfc4648]."},"id":4327,"implemented":true,"kind":"function","modifiers":[],"name":"encodeURL","nameLocation":"994:9:17","nodeType":"FunctionDefinition","parameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"data","nameLocation":"1017:4:17","nodeType":"VariableDeclaration","scope":4327,"src":"1004:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4314,"name":"bytes","nodeType":"ElementaryTypeName","src":"1004:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1003:19:17"},"returnParameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4327,"src":"1046:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4317,"name":"string","nodeType":"ElementaryTypeName","src":"1046:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1045:15:17"},"scope":4382,"src":"985:132:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4380,"nodeType":"Block","src":"1298:3882:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4339,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"1515:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1520:6:17","memberName":"length","nodeType":"MemberAccess","src":"1515:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1515:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol","id":4345,"nodeType":"IfStatement","src":"1511:31:17","trueBody":{"expression":{"hexValue":"","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1540:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":4338,"id":4344,"nodeType":"Return","src":"1533:9:17"}},{"assignments":[4347],"declarations":[{"constant":false,"id":4347,"mutability":"mutable","name":"resultLength","nameLocation":"2488:12:17","nodeType":"VariableDeclaration","scope":4380,"src":"2480:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4369,"initialValue":{"condition":{"id":4348,"name":"withPadding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"2503:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2548:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4360,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"2552:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2557:6:17","memberName":"length","nodeType":"MemberAccess","src":"2552:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2548:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2566:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2548:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2547:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2571:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2547:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2503:69:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2517:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4350,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"2523:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:17","memberName":"length","nodeType":"MemberAccess","src":"2523:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2523:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2522:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2542:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2522:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2521:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2517:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2480:92:17"},{"assignments":[4371],"declarations":[{"constant":false,"id":4371,"mutability":"mutable","name":"result","nameLocation":"2597:6:17","nodeType":"VariableDeclaration","scope":4380,"src":"2583:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4370,"name":"string","nodeType":"ElementaryTypeName","src":"2583:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4376,"initialValue":{"arguments":[{"id":4374,"name":"resultLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"2617:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2606:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4372,"name":"string","nodeType":"ElementaryTypeName","src":"2610:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2583:47:17"},{"AST":{"nativeSrc":"2666:2484:17","nodeType":"YulBlock","src":"2666:2484:17","statements":[{"nativeSrc":"2751:29:17","nodeType":"YulVariableDeclaration","src":"2751:29:17","value":{"arguments":[{"name":"table","nativeSrc":"2771:5:17","nodeType":"YulIdentifier","src":"2771:5:17"},{"kind":"number","nativeSrc":"2778:1:17","nodeType":"YulLiteral","src":"2778:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2767:3:17","nodeType":"YulIdentifier","src":"2767:3:17"},"nativeSrc":"2767:13:17","nodeType":"YulFunctionCall","src":"2767:13:17"},"variables":[{"name":"tablePtr","nativeSrc":"2755:8:17","nodeType":"YulTypedName","src":"2755:8:17","type":""}]},{"nativeSrc":"2850:34:17","nodeType":"YulVariableDeclaration","src":"2850:34:17","value":{"arguments":[{"name":"result","nativeSrc":"2871:6:17","nodeType":"YulIdentifier","src":"2871:6:17"},{"kind":"number","nativeSrc":"2879:4:17","nodeType":"YulLiteral","src":"2879:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2867:3:17","nodeType":"YulIdentifier","src":"2867:3:17"},"nativeSrc":"2867:17:17","nodeType":"YulFunctionCall","src":"2867:17:17"},"variables":[{"name":"resultPtr","nativeSrc":"2854:9:17","nodeType":"YulTypedName","src":"2854:9:17","type":""}]},{"nativeSrc":"2897:19:17","nodeType":"YulVariableDeclaration","src":"2897:19:17","value":{"name":"data","nativeSrc":"2912:4:17","nodeType":"YulIdentifier","src":"2912:4:17"},"variables":[{"name":"dataPtr","nativeSrc":"2901:7:17","nodeType":"YulTypedName","src":"2901:7:17","type":""}]},{"nativeSrc":"2929:36:17","nodeType":"YulVariableDeclaration","src":"2929:36:17","value":{"arguments":[{"name":"data","nativeSrc":"2947:4:17","nodeType":"YulIdentifier","src":"2947:4:17"},{"arguments":[{"name":"data","nativeSrc":"2959:4:17","nodeType":"YulIdentifier","src":"2959:4:17"}],"functionName":{"name":"mload","nativeSrc":"2953:5:17","nodeType":"YulIdentifier","src":"2953:5:17"},"nativeSrc":"2953:11:17","nodeType":"YulFunctionCall","src":"2953:11:17"}],"functionName":{"name":"add","nativeSrc":"2943:3:17","nodeType":"YulIdentifier","src":"2943:3:17"},"nativeSrc":"2943:22:17","nodeType":"YulFunctionCall","src":"2943:22:17"},"variables":[{"name":"endPtr","nativeSrc":"2933:6:17","nodeType":"YulTypedName","src":"2933:6:17","type":""}]},{"nativeSrc":"3179:33:17","nodeType":"YulVariableDeclaration","src":"3179:33:17","value":{"arguments":[{"name":"endPtr","nativeSrc":"3199:6:17","nodeType":"YulIdentifier","src":"3199:6:17"},{"kind":"number","nativeSrc":"3207:4:17","nodeType":"YulLiteral","src":"3207:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3195:3:17","nodeType":"YulIdentifier","src":"3195:3:17"},"nativeSrc":"3195:17:17","nodeType":"YulFunctionCall","src":"3195:17:17"},"variables":[{"name":"afterPtr","nativeSrc":"3183:8:17","nodeType":"YulTypedName","src":"3183:8:17","type":""}]},{"nativeSrc":"3225:33:17","nodeType":"YulVariableDeclaration","src":"3225:33:17","value":{"arguments":[{"name":"afterPtr","nativeSrc":"3249:8:17","nodeType":"YulIdentifier","src":"3249:8:17"}],"functionName":{"name":"mload","nativeSrc":"3243:5:17","nodeType":"YulIdentifier","src":"3243:5:17"},"nativeSrc":"3243:15:17","nodeType":"YulFunctionCall","src":"3243:15:17"},"variables":[{"name":"afterCache","nativeSrc":"3229:10:17","nodeType":"YulTypedName","src":"3229:10:17","type":""}]},{"expression":{"arguments":[{"name":"afterPtr","nativeSrc":"3278:8:17","nodeType":"YulIdentifier","src":"3278:8:17"},{"kind":"number","nativeSrc":"3288:4:17","nodeType":"YulLiteral","src":"3288:4:17","type":"","value":"0x00"}],"functionName":{"name":"mstore","nativeSrc":"3271:6:17","nodeType":"YulIdentifier","src":"3271:6:17"},"nativeSrc":"3271:22:17","nodeType":"YulFunctionCall","src":"3271:22:17"},"nativeSrc":"3271:22:17","nodeType":"YulExpressionStatement","src":"3271:22:17"},{"body":{"nativeSrc":"3390:1201:17","nodeType":"YulBlock","src":"3390:1201:17","statements":[{"nativeSrc":"3443:26:17","nodeType":"YulAssignment","src":"3443:26:17","value":{"arguments":[{"name":"dataPtr","nativeSrc":"3458:7:17","nodeType":"YulIdentifier","src":"3458:7:17"},{"kind":"number","nativeSrc":"3467:1:17","nodeType":"YulLiteral","src":"3467:1:17","type":"","value":"3"}],"functionName":{"name":"add","nativeSrc":"3454:3:17","nodeType":"YulIdentifier","src":"3454:3:17"},"nativeSrc":"3454:15:17","nodeType":"YulFunctionCall","src":"3454:15:17"},"variableNames":[{"name":"dataPtr","nativeSrc":"3443:7:17","nodeType":"YulIdentifier","src":"3443:7:17"}]},{"nativeSrc":"3486:27:17","nodeType":"YulVariableDeclaration","src":"3486:27:17","value":{"arguments":[{"name":"dataPtr","nativeSrc":"3505:7:17","nodeType":"YulIdentifier","src":"3505:7:17"}],"functionName":{"name":"mload","nativeSrc":"3499:5:17","nodeType":"YulIdentifier","src":"3499:5:17"},"nativeSrc":"3499:14:17","nodeType":"YulFunctionCall","src":"3499:14:17"},"variables":[{"name":"input","nativeSrc":"3490:5:17","nodeType":"YulTypedName","src":"3490:5:17","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4041:9:17","nodeType":"YulIdentifier","src":"4041:9:17"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4062:8:17","nodeType":"YulIdentifier","src":"4062:8:17"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4080:2:17","nodeType":"YulLiteral","src":"4080:2:17","type":"","value":"18"},{"name":"input","nativeSrc":"4084:5:17","nodeType":"YulIdentifier","src":"4084:5:17"}],"functionName":{"name":"shr","nativeSrc":"4076:3:17","nodeType":"YulIdentifier","src":"4076:3:17"},"nativeSrc":"4076:14:17","nodeType":"YulFunctionCall","src":"4076:14:17"},{"kind":"number","nativeSrc":"4092:4:17","nodeType":"YulLiteral","src":"4092:4:17","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4072:3:17","nodeType":"YulIdentifier","src":"4072:3:17"},"nativeSrc":"4072:25:17","nodeType":"YulFunctionCall","src":"4072:25:17"}],"functionName":{"name":"add","nativeSrc":"4058:3:17","nodeType":"YulIdentifier","src":"4058:3:17"},"nativeSrc":"4058:40:17","nodeType":"YulFunctionCall","src":"4058:40:17"}],"functionName":{"name":"mload","nativeSrc":"4052:5:17","nodeType":"YulIdentifier","src":"4052:5:17"},"nativeSrc":"4052:47:17","nodeType":"YulFunctionCall","src":"4052:47:17"}],"functionName":{"name":"mstore8","nativeSrc":"4033:7:17","nodeType":"YulIdentifier","src":"4033:7:17"},"nativeSrc":"4033:67:17","nodeType":"YulFunctionCall","src":"4033:67:17"},"nativeSrc":"4033:67:17","nodeType":"YulExpressionStatement","src":"4033:67:17"},{"nativeSrc":"4117:30:17","nodeType":"YulAssignment","src":"4117:30:17","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4134:9:17","nodeType":"YulIdentifier","src":"4134:9:17"},{"kind":"number","nativeSrc":"4145:1:17","nodeType":"YulLiteral","src":"4145:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4130:3:17","nodeType":"YulIdentifier","src":"4130:3:17"},"nativeSrc":"4130:17:17","nodeType":"YulFunctionCall","src":"4130:17:17"},"variableNames":[{"name":"resultPtr","nativeSrc":"4117:9:17","nodeType":"YulIdentifier","src":"4117:9:17"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4184:9:17","nodeType":"YulIdentifier","src":"4184:9:17"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4205:8:17","nodeType":"YulIdentifier","src":"4205:8:17"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4223:2:17","nodeType":"YulLiteral","src":"4223:2:17","type":"","value":"12"},{"name":"input","nativeSrc":"4227:5:17","nodeType":"YulIdentifier","src":"4227:5:17"}],"functionName":{"name":"shr","nativeSrc":"4219:3:17","nodeType":"YulIdentifier","src":"4219:3:17"},"nativeSrc":"4219:14:17","nodeType":"YulFunctionCall","src":"4219:14:17"},{"kind":"number","nativeSrc":"4235:4:17","nodeType":"YulLiteral","src":"4235:4:17","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4215:3:17","nodeType":"YulIdentifier","src":"4215:3:17"},"nativeSrc":"4215:25:17","nodeType":"YulFunctionCall","src":"4215:25:17"}],"functionName":{"name":"add","nativeSrc":"4201:3:17","nodeType":"YulIdentifier","src":"4201:3:17"},"nativeSrc":"4201:40:17","nodeType":"YulFunctionCall","src":"4201:40:17"}],"functionName":{"name":"mload","nativeSrc":"4195:5:17","nodeType":"YulIdentifier","src":"4195:5:17"},"nativeSrc":"4195:47:17","nodeType":"YulFunctionCall","src":"4195:47:17"}],"functionName":{"name":"mstore8","nativeSrc":"4176:7:17","nodeType":"YulIdentifier","src":"4176:7:17"},"nativeSrc":"4176:67:17","nodeType":"YulFunctionCall","src":"4176:67:17"},"nativeSrc":"4176:67:17","nodeType":"YulExpressionStatement","src":"4176:67:17"},{"nativeSrc":"4260:30:17","nodeType":"YulAssignment","src":"4260:30:17","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4277:9:17","nodeType":"YulIdentifier","src":"4277:9:17"},{"kind":"number","nativeSrc":"4288:1:17","nodeType":"YulLiteral","src":"4288:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4273:3:17","nodeType":"YulIdentifier","src":"4273:3:17"},"nativeSrc":"4273:17:17","nodeType":"YulFunctionCall","src":"4273:17:17"},"variableNames":[{"name":"resultPtr","nativeSrc":"4260:9:17","nodeType":"YulIdentifier","src":"4260:9:17"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4327:9:17","nodeType":"YulIdentifier","src":"4327:9:17"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4348:8:17","nodeType":"YulIdentifier","src":"4348:8:17"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4366:1:17","nodeType":"YulLiteral","src":"4366:1:17","type":"","value":"6"},{"name":"input","nativeSrc":"4369:5:17","nodeType":"YulIdentifier","src":"4369:5:17"}],"functionName":{"name":"shr","nativeSrc":"4362:3:17","nodeType":"YulIdentifier","src":"4362:3:17"},"nativeSrc":"4362:13:17","nodeType":"YulFunctionCall","src":"4362:13:17"},{"kind":"number","nativeSrc":"4377:4:17","nodeType":"YulLiteral","src":"4377:4:17","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4358:3:17","nodeType":"YulIdentifier","src":"4358:3:17"},"nativeSrc":"4358:24:17","nodeType":"YulFunctionCall","src":"4358:24:17"}],"functionName":{"name":"add","nativeSrc":"4344:3:17","nodeType":"YulIdentifier","src":"4344:3:17"},"nativeSrc":"4344:39:17","nodeType":"YulFunctionCall","src":"4344:39:17"}],"functionName":{"name":"mload","nativeSrc":"4338:5:17","nodeType":"YulIdentifier","src":"4338:5:17"},"nativeSrc":"4338:46:17","nodeType":"YulFunctionCall","src":"4338:46:17"}],"functionName":{"name":"mstore8","nativeSrc":"4319:7:17","nodeType":"YulIdentifier","src":"4319:7:17"},"nativeSrc":"4319:66:17","nodeType":"YulFunctionCall","src":"4319:66:17"},"nativeSrc":"4319:66:17","nodeType":"YulExpressionStatement","src":"4319:66:17"},{"nativeSrc":"4402:30:17","nodeType":"YulAssignment","src":"4402:30:17","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4419:9:17","nodeType":"YulIdentifier","src":"4419:9:17"},{"kind":"number","nativeSrc":"4430:1:17","nodeType":"YulLiteral","src":"4430:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4415:3:17","nodeType":"YulIdentifier","src":"4415:3:17"},"nativeSrc":"4415:17:17","nodeType":"YulFunctionCall","src":"4415:17:17"},"variableNames":[{"name":"resultPtr","nativeSrc":"4402:9:17","nodeType":"YulIdentifier","src":"4402:9:17"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4469:9:17","nodeType":"YulIdentifier","src":"4469:9:17"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4490:8:17","nodeType":"YulIdentifier","src":"4490:8:17"},{"arguments":[{"name":"input","nativeSrc":"4504:5:17","nodeType":"YulIdentifier","src":"4504:5:17"},{"kind":"number","nativeSrc":"4511:4:17","nodeType":"YulLiteral","src":"4511:4:17","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4500:3:17","nodeType":"YulIdentifier","src":"4500:3:17"},"nativeSrc":"4500:16:17","nodeType":"YulFunctionCall","src":"4500:16:17"}],"functionName":{"name":"add","nativeSrc":"4486:3:17","nodeType":"YulIdentifier","src":"4486:3:17"},"nativeSrc":"4486:31:17","nodeType":"YulFunctionCall","src":"4486:31:17"}],"functionName":{"name":"mload","nativeSrc":"4480:5:17","nodeType":"YulIdentifier","src":"4480:5:17"},"nativeSrc":"4480:38:17","nodeType":"YulFunctionCall","src":"4480:38:17"}],"functionName":{"name":"mstore8","nativeSrc":"4461:7:17","nodeType":"YulIdentifier","src":"4461:7:17"},"nativeSrc":"4461:58:17","nodeType":"YulFunctionCall","src":"4461:58:17"},"nativeSrc":"4461:58:17","nodeType":"YulExpressionStatement","src":"4461:58:17"},{"nativeSrc":"4536:30:17","nodeType":"YulAssignment","src":"4536:30:17","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4553:9:17","nodeType":"YulIdentifier","src":"4553:9:17"},{"kind":"number","nativeSrc":"4564:1:17","nodeType":"YulLiteral","src":"4564:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4549:3:17","nodeType":"YulIdentifier","src":"4549:3:17"},"nativeSrc":"4549:17:17","nodeType":"YulFunctionCall","src":"4549:17:17"},"variableNames":[{"name":"resultPtr","nativeSrc":"4536:9:17","nodeType":"YulIdentifier","src":"4536:9:17"}]}]},"condition":{"arguments":[{"name":"dataPtr","nativeSrc":"3370:7:17","nodeType":"YulIdentifier","src":"3370:7:17"},{"name":"endPtr","nativeSrc":"3379:6:17","nodeType":"YulIdentifier","src":"3379:6:17"}],"functionName":{"name":"lt","nativeSrc":"3367:2:17","nodeType":"YulIdentifier","src":"3367:2:17"},"nativeSrc":"3367:19:17","nodeType":"YulFunctionCall","src":"3367:19:17"},"nativeSrc":"3360:1231:17","nodeType":"YulForLoop","post":{"nativeSrc":"3387:2:17","nodeType":"YulBlock","src":"3387:2:17","statements":[]},"pre":{"nativeSrc":"3364:2:17","nodeType":"YulBlock","src":"3364:2:17","statements":[]},"src":"3360:1231:17"},{"expression":{"arguments":[{"name":"afterPtr","nativeSrc":"4659:8:17","nodeType":"YulIdentifier","src":"4659:8:17"},{"name":"afterCache","nativeSrc":"4669:10:17","nodeType":"YulIdentifier","src":"4669:10:17"}],"functionName":{"name":"mstore","nativeSrc":"4652:6:17","nodeType":"YulIdentifier","src":"4652:6:17"},"nativeSrc":"4652:28:17","nodeType":"YulFunctionCall","src":"4652:28:17"},"nativeSrc":"4652:28:17","nodeType":"YulExpressionStatement","src":"4652:28:17"},{"body":{"nativeSrc":"4709:431:17","nodeType":"YulBlock","src":"4709:431:17","statements":[{"cases":[{"body":{"nativeSrc":"4905:125:17","nodeType":"YulBlock","src":"4905:125:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"4939:9:17","nodeType":"YulIdentifier","src":"4939:9:17"},{"kind":"number","nativeSrc":"4950:1:17","nodeType":"YulLiteral","src":"4950:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4935:3:17","nodeType":"YulIdentifier","src":"4935:3:17"},"nativeSrc":"4935:17:17","nodeType":"YulFunctionCall","src":"4935:17:17"},{"kind":"number","nativeSrc":"4954:4:17","nodeType":"YulLiteral","src":"4954:4:17","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"4927:7:17","nodeType":"YulIdentifier","src":"4927:7:17"},"nativeSrc":"4927:32:17","nodeType":"YulFunctionCall","src":"4927:32:17"},"nativeSrc":"4927:32:17","nodeType":"YulExpressionStatement","src":"4927:32:17"},{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"4992:9:17","nodeType":"YulIdentifier","src":"4992:9:17"},{"kind":"number","nativeSrc":"5003:1:17","nodeType":"YulLiteral","src":"5003:1:17","type":"","value":"2"}],"functionName":{"name":"sub","nativeSrc":"4988:3:17","nodeType":"YulIdentifier","src":"4988:3:17"},"nativeSrc":"4988:17:17","nodeType":"YulFunctionCall","src":"4988:17:17"},{"kind":"number","nativeSrc":"5007:4:17","nodeType":"YulLiteral","src":"5007:4:17","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"4980:7:17","nodeType":"YulIdentifier","src":"4980:7:17"},"nativeSrc":"4980:32:17","nodeType":"YulFunctionCall","src":"4980:32:17"},"nativeSrc":"4980:32:17","nodeType":"YulExpressionStatement","src":"4980:32:17"}]},"nativeSrc":"4898:132:17","nodeType":"YulCase","src":"4898:132:17","value":{"kind":"number","nativeSrc":"4903:1:17","nodeType":"YulLiteral","src":"4903:1:17","type":"","value":"1"}},{"body":{"nativeSrc":"5054:72:17","nodeType":"YulBlock","src":"5054:72:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"5088:9:17","nodeType":"YulIdentifier","src":"5088:9:17"},{"kind":"number","nativeSrc":"5099:1:17","nodeType":"YulLiteral","src":"5099:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5084:3:17","nodeType":"YulIdentifier","src":"5084:3:17"},"nativeSrc":"5084:17:17","nodeType":"YulFunctionCall","src":"5084:17:17"},{"kind":"number","nativeSrc":"5103:4:17","nodeType":"YulLiteral","src":"5103:4:17","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"5076:7:17","nodeType":"YulIdentifier","src":"5076:7:17"},"nativeSrc":"5076:32:17","nodeType":"YulFunctionCall","src":"5076:32:17"},"nativeSrc":"5076:32:17","nodeType":"YulExpressionStatement","src":"5076:32:17"}]},"nativeSrc":"5047:79:17","nodeType":"YulCase","src":"5047:79:17","value":{"kind":"number","nativeSrc":"5052:1:17","nodeType":"YulLiteral","src":"5052:1:17","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"4872:4:17","nodeType":"YulIdentifier","src":"4872:4:17"}],"functionName":{"name":"mload","nativeSrc":"4866:5:17","nodeType":"YulIdentifier","src":"4866:5:17"},"nativeSrc":"4866:11:17","nodeType":"YulFunctionCall","src":"4866:11:17"},{"kind":"number","nativeSrc":"4879:1:17","nodeType":"YulLiteral","src":"4879:1:17","type":"","value":"3"}],"functionName":{"name":"mod","nativeSrc":"4862:3:17","nodeType":"YulIdentifier","src":"4862:3:17"},"nativeSrc":"4862:19:17","nodeType":"YulFunctionCall","src":"4862:19:17"},"nativeSrc":"4855:271:17","nodeType":"YulSwitch","src":"4855:271:17"}]},"condition":{"name":"withPadding","nativeSrc":"4697:11:17","nodeType":"YulIdentifier","src":"4697:11:17"},"nativeSrc":"4694:446:17","nodeType":"YulIf","src":"4694:446:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":4330,"isOffset":false,"isSlot":false,"src":"2912:4:17","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"2947:4:17","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"2959:4:17","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"4872:4:17","valueSize":1},{"declaration":4371,"isOffset":false,"isSlot":false,"src":"2871:6:17","valueSize":1},{"declaration":4332,"isOffset":false,"isSlot":false,"src":"2771:5:17","valueSize":1},{"declaration":4334,"isOffset":false,"isSlot":false,"src":"4697:11:17","valueSize":1}],"flags":["memory-safe"],"id":4377,"nodeType":"InlineAssembly","src":"2641:2509:17"},{"expression":{"id":4378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"5167:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4338,"id":4379,"nodeType":"Return","src":"5160:13:17"}]},"documentation":{"id":4328,"nodeType":"StructuredDocumentation","src":"1123:58:17","text":" @dev Internal table-agnostic conversion"},"id":4381,"implemented":true,"kind":"function","modifiers":[],"name":"_encode","nameLocation":"1195:7:17","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"data","nameLocation":"1216:4:17","nodeType":"VariableDeclaration","scope":4381,"src":"1203:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4329,"name":"bytes","nodeType":"ElementaryTypeName","src":"1203:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4332,"mutability":"mutable","name":"table","nameLocation":"1236:5:17","nodeType":"VariableDeclaration","scope":4381,"src":"1222:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4331,"name":"string","nodeType":"ElementaryTypeName","src":"1222:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4334,"mutability":"mutable","name":"withPadding","nameLocation":"1248:11:17","nodeType":"VariableDeclaration","scope":4381,"src":"1243:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4333,"name":"bool","nodeType":"ElementaryTypeName","src":"1243:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1202:58:17"},"returnParameters":{"id":4338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4381,"src":"1283:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4336,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:17"},"scope":4382,"src":"1186:3994:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4383,"src":"202:4980:17","usedErrors":[],"usedEvents":[]}],"src":"100:5083:17"},"id":17},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[4414]},"id":4415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4384,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":4385,"nodeType":"StructuredDocumentation","src":"131:92:18","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":4414,"linearizedBaseContracts":[4414],"name":"Comparators","nameLocation":"232:11:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":4398,"nodeType":"Block","src":"313:29:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"330:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4395,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"334:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4393,"id":4397,"nodeType":"Return","src":"323:12:18"}]},"id":4399,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:18","nodeType":"FunctionDefinition","parameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"a","nameLocation":"270:1:18","nodeType":"VariableDeclaration","scope":4399,"src":"262:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4389,"mutability":"mutable","name":"b","nameLocation":"281:1:18","nodeType":"VariableDeclaration","scope":4399,"src":"273:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:18"},"returnParameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4399,"src":"307:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4391,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:18"},"scope":4414,"src":"250:92:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4412,"nodeType":"Block","src":"411:29:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4408,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"428:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4409,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"432:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4407,"id":4411,"nodeType":"Return","src":"421:12:18"}]},"id":4413,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:18","nodeType":"FunctionDefinition","parameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"a","nameLocation":"368:1:18","nodeType":"VariableDeclaration","scope":4413,"src":"360:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4400,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4403,"mutability":"mutable","name":"b","nameLocation":"379:1:18","nodeType":"VariableDeclaration","scope":4413,"src":"371:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:18"},"returnParameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4413,"src":"405:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4405,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:18"},"scope":4414,"src":"348:92:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4415,"src":"224:218:18","usedErrors":[],"usedEvents":[]}],"src":"105:338:18"},"id":18},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[4444]},"id":4445,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4416,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:19"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":4417,"nodeType":"StructuredDocumentation","src":"127:496:19","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":4444,"linearizedBaseContracts":[4444],"name":"Context","nameLocation":"642:7:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":4425,"nodeType":"Block","src":"718:34:19","statements":[{"expression":{"expression":{"id":4422,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:19","memberName":"sender","nodeType":"MemberAccess","src":"735:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4421,"id":4424,"nodeType":"Return","src":"728:17:19"}]},"id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:19","nodeType":"FunctionDefinition","parameters":{"id":4418,"nodeType":"ParameterList","parameters":[],"src":"675:2:19"},"returnParameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4426,"src":"709:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4419,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:19"},"scope":4444,"src":"656:96:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4434,"nodeType":"Block","src":"825:32:19","statements":[{"expression":{"expression":{"id":4431,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:19","memberName":"data","nodeType":"MemberAccess","src":"842:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":4430,"id":4433,"nodeType":"Return","src":"835:15:19"}]},"id":4435,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:19","nodeType":"FunctionDefinition","parameters":{"id":4427,"nodeType":"ParameterList","parameters":[],"src":"775:2:19"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4435,"src":"809:14:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4428,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:19"},"scope":4444,"src":"758:99:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4442,"nodeType":"Block","src":"935:25:19","statements":[{"expression":{"hexValue":"30","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4439,"id":4441,"nodeType":"Return","src":"945:8:19"}]},"id":4443,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:19","nodeType":"FunctionDefinition","parameters":{"id":4436,"nodeType":"ParameterList","parameters":[],"src":"892:2:19"},"returnParameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4443,"src":"926:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:19"},"scope":4444,"src":"863:97:19","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4445,"src":"624:338:19","usedErrors":[],"usedEvents":[]}],"src":"101:862:19"},"id":19},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[4466]},"id":4467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4446,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":4447,"nodeType":"StructuredDocumentation","src":"126:284:20","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":4466,"linearizedBaseContracts":[4466],"name":"Errors","nameLocation":"419:6:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4448,"nodeType":"StructuredDocumentation","src":"432:94:20","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":4454,"name":"InsufficientBalance","nameLocation":"537:19:20","nodeType":"ErrorDefinition","parameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"balance","nameLocation":"565:7:20","nodeType":"VariableDeclaration","scope":4454,"src":"557:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4452,"mutability":"mutable","name":"needed","nameLocation":"582:6:20","nodeType":"VariableDeclaration","scope":4454,"src":"574:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:20"},"src":"531:59:20"},{"documentation":{"id":4455,"nodeType":"StructuredDocumentation","src":"596:89:20","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":4457,"name":"FailedCall","nameLocation":"696:10:20","nodeType":"ErrorDefinition","parameters":{"id":4456,"nodeType":"ParameterList","parameters":[],"src":"706:2:20"},"src":"690:19:20"},{"documentation":{"id":4458,"nodeType":"StructuredDocumentation","src":"715:46:20","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":4460,"name":"FailedDeployment","nameLocation":"772:16:20","nodeType":"ErrorDefinition","parameters":{"id":4459,"nodeType":"ParameterList","parameters":[],"src":"788:2:20"},"src":"766:25:20"},{"documentation":{"id":4461,"nodeType":"StructuredDocumentation","src":"797:58:20","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":4465,"name":"MissingPrecompile","nameLocation":"866:17:20","nodeType":"ErrorDefinition","parameters":{"id":4464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4465,"src":"884:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4462,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:20"},"src":"860:33:20"}],"scope":4467,"src":"411:484:20","usedErrors":[4454,4457,4460,4465],"usedEvents":[]}],"src":"100:796:20"},"id":20},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[4518]},"id":4519,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4468,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":4469,"nodeType":"StructuredDocumentation","src":"125:489:21","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":4518,"linearizedBaseContracts":[4518],"name":"Panic","nameLocation":"665:5:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":4470,"nodeType":"StructuredDocumentation","src":"677:36:21","text":"@dev generic / unspecified error"},"id":4473,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:21","nodeType":"VariableDeclaration","scope":4518,"src":"718:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4471,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":4474,"nodeType":"StructuredDocumentation","src":"764:37:21","text":"@dev used by the assert() builtin"},"id":4477,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:21","nodeType":"VariableDeclaration","scope":4518,"src":"806:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":4478,"nodeType":"StructuredDocumentation","src":"851:41:21","text":"@dev arithmetic underflow or overflow"},"id":4481,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:21","nodeType":"VariableDeclaration","scope":4518,"src":"897:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4479,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:21","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":4482,"nodeType":"StructuredDocumentation","src":"950:35:21","text":"@dev division or modulo by zero"},"id":4485,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:21","nodeType":"VariableDeclaration","scope":4518,"src":"990:49:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4483,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":4486,"nodeType":"StructuredDocumentation","src":"1045:30:21","text":"@dev enum conversion error"},"id":4489,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:21","nodeType":"VariableDeclaration","scope":4518,"src":"1080:54:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:21","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":4490,"nodeType":"StructuredDocumentation","src":"1140:36:21","text":"@dev invalid encoding in storage"},"id":4493,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:21","nodeType":"VariableDeclaration","scope":4518,"src":"1181:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:21","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":4494,"nodeType":"StructuredDocumentation","src":"1242:24:21","text":"@dev empty array pop"},"id":4497,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:21","nodeType":"VariableDeclaration","scope":4518,"src":"1271:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:21","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":4498,"nodeType":"StructuredDocumentation","src":"1325:35:21","text":"@dev array out of bounds access"},"id":4501,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:21","nodeType":"VariableDeclaration","scope":4518,"src":"1365:52:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:21","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":4502,"nodeType":"StructuredDocumentation","src":"1423:65:21","text":"@dev resource error (too large allocation or too large array)"},"id":4505,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:21","nodeType":"VariableDeclaration","scope":4518,"src":"1493:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:21","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":4506,"nodeType":"StructuredDocumentation","src":"1546:42:21","text":"@dev calling invalid internal function"},"id":4509,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:21","nodeType":"VariableDeclaration","scope":4518,"src":"1593:58:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:21","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":4516,"nodeType":"Block","src":"1819:151:21","statements":[{"AST":{"nativeSrc":"1854:110:21","nodeType":"YulBlock","src":"1854:110:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:21","nodeType":"YulLiteral","src":"1875:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:21","nodeType":"YulLiteral","src":"1881:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:21","nodeType":"YulIdentifier","src":"1868:6:21"},"nativeSrc":"1868:24:21","nodeType":"YulFunctionCall","src":"1868:24:21"},"nativeSrc":"1868:24:21","nodeType":"YulExpressionStatement","src":"1868:24:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:21","nodeType":"YulLiteral","src":"1912:4:21","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:21","nodeType":"YulIdentifier","src":"1918:4:21"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:21","nodeType":"YulIdentifier","src":"1905:6:21"},"nativeSrc":"1905:18:21","nodeType":"YulFunctionCall","src":"1905:18:21"},"nativeSrc":"1905:18:21","nodeType":"YulExpressionStatement","src":"1905:18:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:21","nodeType":"YulLiteral","src":"1943:4:21","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:21","nodeType":"YulLiteral","src":"1949:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:21","nodeType":"YulIdentifier","src":"1936:6:21"},"nativeSrc":"1936:18:21","nodeType":"YulFunctionCall","src":"1936:18:21"},"nativeSrc":"1936:18:21","nodeType":"YulExpressionStatement","src":"1936:18:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":4512,"isOffset":false,"isSlot":false,"src":"1918:4:21","valueSize":1}],"flags":["memory-safe"],"id":4515,"nodeType":"InlineAssembly","src":"1829:135:21"}]},"documentation":{"id":4510,"nodeType":"StructuredDocumentation","src":"1658:113:21","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":4517,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:21","nodeType":"FunctionDefinition","parameters":{"id":4513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4512,"mutability":"mutable","name":"code","nameLocation":"1799:4:21","nodeType":"VariableDeclaration","scope":4517,"src":"1791:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:21"},"returnParameters":{"id":4514,"nodeType":"ParameterList","parameters":[],"src":"1819:0:21"},"scope":4518,"src":"1776:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4519,"src":"657:1315:21","usedErrors":[],"usedEvents":[]}],"src":"99:1874:21"},"id":21},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[4587]},"id":4588,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4520,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:22"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":4521,"nodeType":"StructuredDocumentation","src":"135:894:22","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":4587,"linearizedBaseContracts":[4587],"name":"ReentrancyGuard","nameLocation":"1048:15:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4524,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:22","nodeType":"VariableDeclaration","scope":4587,"src":"1818:40:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":4527,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:22","nodeType":"VariableDeclaration","scope":4587,"src":"1864:36:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":4529,"mutability":"mutable","name":"_status","nameLocation":"1923:7:22","nodeType":"VariableDeclaration","scope":4587,"src":"1907:23:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":4530,"nodeType":"StructuredDocumentation","src":"1937:52:22","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":4532,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:22","nodeType":"ErrorDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[],"src":"2028:2:22"},"src":"1994:37:22"},{"body":{"id":4539,"nodeType":"Block","src":"2051:38:22","statements":[{"expression":{"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4535,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"2061:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4536,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"2071:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4538,"nodeType":"ExpressionStatement","src":"2061:21:22"}]},"id":4540,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4533,"nodeType":"ParameterList","parameters":[],"src":"2048:2:22"},"returnParameters":{"id":4534,"nodeType":"ParameterList","parameters":[],"src":"2051:0:22"},"scope":4587,"src":"2037:52:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4550,"nodeType":"Block","src":"2490:79:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4543,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"2500:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4545,"nodeType":"ExpressionStatement","src":"2500:21:22"},{"id":4546,"nodeType":"PlaceholderStatement","src":"2531:1:22"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4547,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"2542:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4549,"nodeType":"ExpressionStatement","src":"2542:20:22"}]},"documentation":{"id":4541,"nodeType":"StructuredDocumentation","src":"2095:366:22","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":4551,"name":"nonReentrant","nameLocation":"2475:12:22","nodeType":"ModifierDefinition","parameters":{"id":4542,"nodeType":"ParameterList","parameters":[],"src":"2487:2:22"},"src":"2466:103:22","virtual":false,"visibility":"internal"},{"body":{"id":4566,"nodeType":"Block","src":"2614:268:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4554,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"2702:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4555,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"2713:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4561,"nodeType":"IfStatement","src":"2698:86:22","trueBody":{"id":4560,"nodeType":"Block","src":"2722:62:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4557,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"2743:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4559,"nodeType":"RevertStatement","src":"2736:37:22"}]}},{"expression":{"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4562,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"2858:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4563,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"2868:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4565,"nodeType":"ExpressionStatement","src":"2858:17:22"}]},"id":4567,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:22","nodeType":"FunctionDefinition","parameters":{"id":4552,"nodeType":"ParameterList","parameters":[],"src":"2603:2:22"},"returnParameters":{"id":4553,"nodeType":"ParameterList","parameters":[],"src":"2614:0:22"},"scope":4587,"src":"2575:307:22","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4574,"nodeType":"Block","src":"2926:170:22","statements":[{"expression":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4570,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"3068:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4571,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"3078:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4573,"nodeType":"ExpressionStatement","src":"3068:21:22"}]},"id":4575,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:22","nodeType":"FunctionDefinition","parameters":{"id":4568,"nodeType":"ParameterList","parameters":[],"src":"2915:2:22"},"returnParameters":{"id":4569,"nodeType":"ParameterList","parameters":[],"src":"2926:0:22"},"scope":4587,"src":"2888:208:22","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4585,"nodeType":"Block","src":"3339:42:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4581,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"3356:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4582,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"3367:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4580,"id":4584,"nodeType":"Return","src":"3349:25:22"}]},"documentation":{"id":4576,"nodeType":"StructuredDocumentation","src":"3102:168:22","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":4586,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:22","nodeType":"FunctionDefinition","parameters":{"id":4577,"nodeType":"ParameterList","parameters":[],"src":"3307:2:22"},"returnParameters":{"id":4580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4586,"src":"3333:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4578,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:22"},"scope":4587,"src":"3275:106:22","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4588,"src":"1030:2353:22","usedErrors":[4532],"usedEvents":[]}],"src":"109:3275:22"},"id":22},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[4717]},"id":4718,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4589,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":4590,"nodeType":"StructuredDocumentation","src":"225:1373:23","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":4717,"linearizedBaseContracts":[4717],"name":"SlotDerivation","nameLocation":"1607:14:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4599,"nodeType":"Block","src":"1790:194:23","statements":[{"AST":{"nativeSrc":"1825:153:23","nodeType":"YulBlock","src":"1825:153:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:23","nodeType":"YulLiteral","src":"1846:4:23","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:23","nodeType":"YulIdentifier","src":"1870:9:23"},{"kind":"number","nativeSrc":"1881:4:23","nodeType":"YulLiteral","src":"1881:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:23","nodeType":"YulIdentifier","src":"1866:3:23"},"nativeSrc":"1866:20:23","nodeType":"YulFunctionCall","src":"1866:20:23"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:23","nodeType":"YulIdentifier","src":"1894:9:23"}],"functionName":{"name":"mload","nativeSrc":"1888:5:23","nodeType":"YulIdentifier","src":"1888:5:23"},"nativeSrc":"1888:16:23","nodeType":"YulFunctionCall","src":"1888:16:23"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:23","nodeType":"YulIdentifier","src":"1856:9:23"},"nativeSrc":"1856:49:23","nodeType":"YulFunctionCall","src":"1856:49:23"},{"kind":"number","nativeSrc":"1907:1:23","nodeType":"YulLiteral","src":"1907:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:23","nodeType":"YulIdentifier","src":"1852:3:23"},"nativeSrc":"1852:57:23","nodeType":"YulFunctionCall","src":"1852:57:23"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:23","nodeType":"YulIdentifier","src":"1839:6:23"},"nativeSrc":"1839:71:23","nodeType":"YulFunctionCall","src":"1839:71:23"},"nativeSrc":"1839:71:23","nodeType":"YulExpressionStatement","src":"1839:71:23"},{"nativeSrc":"1923:45:23","nodeType":"YulAssignment","src":"1923:45:23","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:23","nodeType":"YulLiteral","src":"1945:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:23","nodeType":"YulLiteral","src":"1951:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:23","nodeType":"YulIdentifier","src":"1935:9:23"},"nativeSrc":"1935:21:23","nodeType":"YulFunctionCall","src":"1935:21:23"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:23","nodeType":"YulLiteral","src":"1962:4:23","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:23","nodeType":"YulIdentifier","src":"1958:3:23"},"nativeSrc":"1958:9:23","nodeType":"YulFunctionCall","src":"1958:9:23"}],"functionName":{"name":"and","nativeSrc":"1931:3:23","nodeType":"YulIdentifier","src":"1931:3:23"},"nativeSrc":"1931:37:23","nodeType":"YulFunctionCall","src":"1931:37:23"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:23","nodeType":"YulIdentifier","src":"1923:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4593,"isOffset":false,"isSlot":false,"src":"1870:9:23","valueSize":1},{"declaration":4593,"isOffset":false,"isSlot":false,"src":"1894:9:23","valueSize":1},{"declaration":4596,"isOffset":false,"isSlot":false,"src":"1923:4:23","valueSize":1}],"flags":["memory-safe"],"id":4598,"nodeType":"InlineAssembly","src":"1800:178:23"}]},"documentation":{"id":4591,"nodeType":"StructuredDocumentation","src":"1628:74:23","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":4600,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:23","nodeType":"FunctionDefinition","parameters":{"id":4594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:23","nodeType":"VariableDeclaration","scope":4600,"src":"1728:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4592,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:23"},"returnParameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4596,"mutability":"mutable","name":"slot","nameLocation":"1784:4:23","nodeType":"VariableDeclaration","scope":4600,"src":"1776:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:23"},"scope":4717,"src":"1707:277:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4621,"nodeType":"Block","src":"2176:86:23","statements":[{"id":4620,"nodeType":"UncheckedBlock","src":"2186:70:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4614,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"2233:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:23","typeDescriptions":{}}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4616,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"2241:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:23","typeDescriptions":{}}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4609,"id":4619,"nodeType":"Return","src":"2210:35:23"}]}]},"documentation":{"id":4601,"nodeType":"StructuredDocumentation","src":"1990:99:23","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":4622,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:23","nodeType":"FunctionDefinition","parameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"slot","nameLocation":"2118:4:23","nodeType":"VariableDeclaration","scope":4622,"src":"2110:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4605,"mutability":"mutable","name":"pos","nameLocation":"2132:3:23","nodeType":"VariableDeclaration","scope":4622,"src":"2124:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:23"},"returnParameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4608,"mutability":"mutable","name":"result","nameLocation":"2168:6:23","nodeType":"VariableDeclaration","scope":4622,"src":"2160:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:23"},"scope":4717,"src":"2094:168:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4631,"nodeType":"Block","src":"2465:127:23","statements":[{"AST":{"nativeSrc":"2500:86:23","nodeType":"YulBlock","src":"2500:86:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:23","nodeType":"YulLiteral","src":"2521:4:23","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:23","nodeType":"YulIdentifier","src":"2527:4:23"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:23","nodeType":"YulIdentifier","src":"2514:6:23"},"nativeSrc":"2514:18:23","nodeType":"YulFunctionCall","src":"2514:18:23"},"nativeSrc":"2514:18:23","nodeType":"YulExpressionStatement","src":"2514:18:23"},{"nativeSrc":"2545:31:23","nodeType":"YulAssignment","src":"2545:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:23","nodeType":"YulLiteral","src":"2565:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:23","nodeType":"YulLiteral","src":"2571:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:23","nodeType":"YulIdentifier","src":"2555:9:23"},"nativeSrc":"2555:21:23","nodeType":"YulFunctionCall","src":"2555:21:23"},"variableNames":[{"name":"result","nativeSrc":"2545:6:23","nodeType":"YulIdentifier","src":"2545:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4628,"isOffset":false,"isSlot":false,"src":"2545:6:23","valueSize":1},{"declaration":4625,"isOffset":false,"isSlot":false,"src":"2527:4:23","valueSize":1}],"flags":["memory-safe"],"id":4630,"nodeType":"InlineAssembly","src":"2475:111:23"}]},"documentation":{"id":4623,"nodeType":"StructuredDocumentation","src":"2268:118:23","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":4632,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:23","nodeType":"FunctionDefinition","parameters":{"id":4626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4625,"mutability":"mutable","name":"slot","nameLocation":"2420:4:23","nodeType":"VariableDeclaration","scope":4632,"src":"2412:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:23"},"returnParameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"result","nameLocation":"2457:6:23","nodeType":"VariableDeclaration","scope":4632,"src":"2449:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:23"},"scope":4717,"src":"2391:201:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4643,"nodeType":"Block","src":"2770:179:23","statements":[{"AST":{"nativeSrc":"2805:138:23","nodeType":"YulBlock","src":"2805:138:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:23","nodeType":"YulLiteral","src":"2826:4:23","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:23","nodeType":"YulIdentifier","src":"2836:3:23"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:23","nodeType":"YulLiteral","src":"2845:2:23","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:23","nodeType":"YulLiteral","src":"2853:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:23","nodeType":"YulIdentifier","src":"2849:3:23"},"nativeSrc":"2849:6:23","nodeType":"YulFunctionCall","src":"2849:6:23"}],"functionName":{"name":"shr","nativeSrc":"2841:3:23","nodeType":"YulIdentifier","src":"2841:3:23"},"nativeSrc":"2841:15:23","nodeType":"YulFunctionCall","src":"2841:15:23"}],"functionName":{"name":"and","nativeSrc":"2832:3:23","nodeType":"YulIdentifier","src":"2832:3:23"},"nativeSrc":"2832:25:23","nodeType":"YulFunctionCall","src":"2832:25:23"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:23","nodeType":"YulIdentifier","src":"2819:6:23"},"nativeSrc":"2819:39:23","nodeType":"YulFunctionCall","src":"2819:39:23"},"nativeSrc":"2819:39:23","nodeType":"YulExpressionStatement","src":"2819:39:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:23","nodeType":"YulLiteral","src":"2878:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:23","nodeType":"YulIdentifier","src":"2884:4:23"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:23","nodeType":"YulIdentifier","src":"2871:6:23"},"nativeSrc":"2871:18:23","nodeType":"YulFunctionCall","src":"2871:18:23"},"nativeSrc":"2871:18:23","nodeType":"YulExpressionStatement","src":"2871:18:23"},{"nativeSrc":"2902:31:23","nodeType":"YulAssignment","src":"2902:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:23","nodeType":"YulLiteral","src":"2922:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:23","nodeType":"YulLiteral","src":"2928:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:23","nodeType":"YulIdentifier","src":"2912:9:23"},"nativeSrc":"2912:21:23","nodeType":"YulFunctionCall","src":"2912:21:23"},"variableNames":[{"name":"result","nativeSrc":"2902:6:23","nodeType":"YulIdentifier","src":"2902:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4637,"isOffset":false,"isSlot":false,"src":"2836:3:23","valueSize":1},{"declaration":4640,"isOffset":false,"isSlot":false,"src":"2902:6:23","valueSize":1},{"declaration":4635,"isOffset":false,"isSlot":false,"src":"2884:4:23","valueSize":1}],"flags":["memory-safe"],"id":4642,"nodeType":"InlineAssembly","src":"2780:163:23"}]},"documentation":{"id":4633,"nodeType":"StructuredDocumentation","src":"2598:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4644,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:23","nodeType":"FunctionDefinition","parameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4635,"mutability":"mutable","name":"slot","nameLocation":"2712:4:23","nodeType":"VariableDeclaration","scope":4644,"src":"2704:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4637,"mutability":"mutable","name":"key","nameLocation":"2726:3:23","nodeType":"VariableDeclaration","scope":4644,"src":"2718:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4636,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:23"},"returnParameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"result","nameLocation":"2762:6:23","nodeType":"VariableDeclaration","scope":4644,"src":"2754:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:23"},"scope":4717,"src":"2681:268:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4655,"nodeType":"Block","src":"3124:173:23","statements":[{"AST":{"nativeSrc":"3159:132:23","nodeType":"YulBlock","src":"3159:132:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:23","nodeType":"YulLiteral","src":"3180:4:23","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:23","nodeType":"YulIdentifier","src":"3200:3:23"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:23","nodeType":"YulIdentifier","src":"3193:6:23"},"nativeSrc":"3193:11:23","nodeType":"YulFunctionCall","src":"3193:11:23"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:23","nodeType":"YulIdentifier","src":"3186:6:23"},"nativeSrc":"3186:19:23","nodeType":"YulFunctionCall","src":"3186:19:23"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:23","nodeType":"YulIdentifier","src":"3173:6:23"},"nativeSrc":"3173:33:23","nodeType":"YulFunctionCall","src":"3173:33:23"},"nativeSrc":"3173:33:23","nodeType":"YulExpressionStatement","src":"3173:33:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:23","nodeType":"YulLiteral","src":"3226:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:23","nodeType":"YulIdentifier","src":"3232:4:23"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:23","nodeType":"YulIdentifier","src":"3219:6:23"},"nativeSrc":"3219:18:23","nodeType":"YulFunctionCall","src":"3219:18:23"},"nativeSrc":"3219:18:23","nodeType":"YulExpressionStatement","src":"3219:18:23"},{"nativeSrc":"3250:31:23","nodeType":"YulAssignment","src":"3250:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:23","nodeType":"YulLiteral","src":"3270:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:23","nodeType":"YulLiteral","src":"3276:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:23","nodeType":"YulIdentifier","src":"3260:9:23"},"nativeSrc":"3260:21:23","nodeType":"YulFunctionCall","src":"3260:21:23"},"variableNames":[{"name":"result","nativeSrc":"3250:6:23","nodeType":"YulIdentifier","src":"3250:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4649,"isOffset":false,"isSlot":false,"src":"3200:3:23","valueSize":1},{"declaration":4652,"isOffset":false,"isSlot":false,"src":"3250:6:23","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"3232:4:23","valueSize":1}],"flags":["memory-safe"],"id":4654,"nodeType":"InlineAssembly","src":"3134:157:23"}]},"documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"2955:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4656,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:23","nodeType":"FunctionDefinition","parameters":{"id":4650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"slot","nameLocation":"3069:4:23","nodeType":"VariableDeclaration","scope":4656,"src":"3061:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4649,"mutability":"mutable","name":"key","nameLocation":"3080:3:23","nodeType":"VariableDeclaration","scope":4656,"src":"3075:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4648,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:23"},"returnParameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4652,"mutability":"mutable","name":"result","nameLocation":"3116:6:23","nodeType":"VariableDeclaration","scope":4656,"src":"3108:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:23"},"scope":4717,"src":"3038:259:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4667,"nodeType":"Block","src":"3475:157:23","statements":[{"AST":{"nativeSrc":"3510:116:23","nodeType":"YulBlock","src":"3510:116:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:23","nodeType":"YulLiteral","src":"3531:4:23","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:23","nodeType":"YulIdentifier","src":"3537:3:23"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:23","nodeType":"YulIdentifier","src":"3524:6:23"},"nativeSrc":"3524:17:23","nodeType":"YulFunctionCall","src":"3524:17:23"},"nativeSrc":"3524:17:23","nodeType":"YulExpressionStatement","src":"3524:17:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:23","nodeType":"YulLiteral","src":"3561:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:23","nodeType":"YulIdentifier","src":"3567:4:23"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:23","nodeType":"YulIdentifier","src":"3554:6:23"},"nativeSrc":"3554:18:23","nodeType":"YulFunctionCall","src":"3554:18:23"},"nativeSrc":"3554:18:23","nodeType":"YulExpressionStatement","src":"3554:18:23"},{"nativeSrc":"3585:31:23","nodeType":"YulAssignment","src":"3585:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:23","nodeType":"YulLiteral","src":"3605:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:23","nodeType":"YulLiteral","src":"3611:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:23","nodeType":"YulIdentifier","src":"3595:9:23"},"nativeSrc":"3595:21:23","nodeType":"YulFunctionCall","src":"3595:21:23"},"variableNames":[{"name":"result","nativeSrc":"3585:6:23","nodeType":"YulIdentifier","src":"3585:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4661,"isOffset":false,"isSlot":false,"src":"3537:3:23","valueSize":1},{"declaration":4664,"isOffset":false,"isSlot":false,"src":"3585:6:23","valueSize":1},{"declaration":4659,"isOffset":false,"isSlot":false,"src":"3567:4:23","valueSize":1}],"flags":["memory-safe"],"id":4666,"nodeType":"InlineAssembly","src":"3485:141:23"}]},"documentation":{"id":4657,"nodeType":"StructuredDocumentation","src":"3303:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4668,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:23","nodeType":"FunctionDefinition","parameters":{"id":4662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4659,"mutability":"mutable","name":"slot","nameLocation":"3417:4:23","nodeType":"VariableDeclaration","scope":4668,"src":"3409:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4661,"mutability":"mutable","name":"key","nameLocation":"3431:3:23","nodeType":"VariableDeclaration","scope":4668,"src":"3423:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:23"},"returnParameters":{"id":4665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4664,"mutability":"mutable","name":"result","nameLocation":"3467:6:23","nodeType":"VariableDeclaration","scope":4668,"src":"3459:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:23"},"scope":4717,"src":"3386:246:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4679,"nodeType":"Block","src":"3810:157:23","statements":[{"AST":{"nativeSrc":"3845:116:23","nodeType":"YulBlock","src":"3845:116:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:23","nodeType":"YulLiteral","src":"3866:4:23","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:23","nodeType":"YulIdentifier","src":"3872:3:23"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:23","nodeType":"YulIdentifier","src":"3859:6:23"},"nativeSrc":"3859:17:23","nodeType":"YulFunctionCall","src":"3859:17:23"},"nativeSrc":"3859:17:23","nodeType":"YulExpressionStatement","src":"3859:17:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:23","nodeType":"YulLiteral","src":"3896:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:23","nodeType":"YulIdentifier","src":"3902:4:23"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:23","nodeType":"YulIdentifier","src":"3889:6:23"},"nativeSrc":"3889:18:23","nodeType":"YulFunctionCall","src":"3889:18:23"},"nativeSrc":"3889:18:23","nodeType":"YulExpressionStatement","src":"3889:18:23"},{"nativeSrc":"3920:31:23","nodeType":"YulAssignment","src":"3920:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:23","nodeType":"YulLiteral","src":"3940:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:23","nodeType":"YulLiteral","src":"3946:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:23","nodeType":"YulIdentifier","src":"3930:9:23"},"nativeSrc":"3930:21:23","nodeType":"YulFunctionCall","src":"3930:21:23"},"variableNames":[{"name":"result","nativeSrc":"3920:6:23","nodeType":"YulIdentifier","src":"3920:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4673,"isOffset":false,"isSlot":false,"src":"3872:3:23","valueSize":1},{"declaration":4676,"isOffset":false,"isSlot":false,"src":"3920:6:23","valueSize":1},{"declaration":4671,"isOffset":false,"isSlot":false,"src":"3902:4:23","valueSize":1}],"flags":["memory-safe"],"id":4678,"nodeType":"InlineAssembly","src":"3820:141:23"}]},"documentation":{"id":4669,"nodeType":"StructuredDocumentation","src":"3638:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4680,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:23","nodeType":"FunctionDefinition","parameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4671,"mutability":"mutable","name":"slot","nameLocation":"3752:4:23","nodeType":"VariableDeclaration","scope":4680,"src":"3744:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4673,"mutability":"mutable","name":"key","nameLocation":"3766:3:23","nodeType":"VariableDeclaration","scope":4680,"src":"3758:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:23"},"returnParameters":{"id":4677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4676,"mutability":"mutable","name":"result","nameLocation":"3802:6:23","nodeType":"VariableDeclaration","scope":4680,"src":"3794:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:23"},"scope":4717,"src":"3721:246:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4691,"nodeType":"Block","src":"4144:157:23","statements":[{"AST":{"nativeSrc":"4179:116:23","nodeType":"YulBlock","src":"4179:116:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:23","nodeType":"YulLiteral","src":"4200:4:23","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:23","nodeType":"YulIdentifier","src":"4206:3:23"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:23","nodeType":"YulIdentifier","src":"4193:6:23"},"nativeSrc":"4193:17:23","nodeType":"YulFunctionCall","src":"4193:17:23"},"nativeSrc":"4193:17:23","nodeType":"YulExpressionStatement","src":"4193:17:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:23","nodeType":"YulLiteral","src":"4230:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:23","nodeType":"YulIdentifier","src":"4236:4:23"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:23","nodeType":"YulIdentifier","src":"4223:6:23"},"nativeSrc":"4223:18:23","nodeType":"YulFunctionCall","src":"4223:18:23"},"nativeSrc":"4223:18:23","nodeType":"YulExpressionStatement","src":"4223:18:23"},{"nativeSrc":"4254:31:23","nodeType":"YulAssignment","src":"4254:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:23","nodeType":"YulLiteral","src":"4274:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:23","nodeType":"YulLiteral","src":"4280:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:23","nodeType":"YulIdentifier","src":"4264:9:23"},"nativeSrc":"4264:21:23","nodeType":"YulFunctionCall","src":"4264:21:23"},"variableNames":[{"name":"result","nativeSrc":"4254:6:23","nodeType":"YulIdentifier","src":"4254:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4685,"isOffset":false,"isSlot":false,"src":"4206:3:23","valueSize":1},{"declaration":4688,"isOffset":false,"isSlot":false,"src":"4254:6:23","valueSize":1},{"declaration":4683,"isOffset":false,"isSlot":false,"src":"4236:4:23","valueSize":1}],"flags":["memory-safe"],"id":4690,"nodeType":"InlineAssembly","src":"4154:141:23"}]},"documentation":{"id":4681,"nodeType":"StructuredDocumentation","src":"3973:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4692,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:23","nodeType":"FunctionDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4683,"mutability":"mutable","name":"slot","nameLocation":"4087:4:23","nodeType":"VariableDeclaration","scope":4692,"src":"4079:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4685,"mutability":"mutable","name":"key","nameLocation":"4100:3:23","nodeType":"VariableDeclaration","scope":4692,"src":"4093:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4684,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:23"},"returnParameters":{"id":4689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4688,"mutability":"mutable","name":"result","nameLocation":"4136:6:23","nodeType":"VariableDeclaration","scope":4692,"src":"4128:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:23"},"scope":4717,"src":"4056:245:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4703,"nodeType":"Block","src":"4485:326:23","statements":[{"AST":{"nativeSrc":"4520:285:23","nodeType":"YulBlock","src":"4520:285:23","statements":[{"nativeSrc":"4534:24:23","nodeType":"YulVariableDeclaration","src":"4534:24:23","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:23","nodeType":"YulIdentifier","src":"4554:3:23"}],"functionName":{"name":"mload","nativeSrc":"4548:5:23","nodeType":"YulIdentifier","src":"4548:5:23"},"nativeSrc":"4548:10:23","nodeType":"YulFunctionCall","src":"4548:10:23"},"variables":[{"name":"length","nativeSrc":"4538:6:23","nodeType":"YulTypedName","src":"4538:6:23","type":""}]},{"nativeSrc":"4571:27:23","nodeType":"YulVariableDeclaration","src":"4571:27:23","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:23","nodeType":"YulIdentifier","src":"4588:3:23"},{"kind":"number","nativeSrc":"4593:4:23","nodeType":"YulLiteral","src":"4593:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:23","nodeType":"YulIdentifier","src":"4584:3:23"},"nativeSrc":"4584:14:23","nodeType":"YulFunctionCall","src":"4584:14:23"},"variables":[{"name":"begin","nativeSrc":"4575:5:23","nodeType":"YulTypedName","src":"4575:5:23","type":""}]},{"nativeSrc":"4611:29:23","nodeType":"YulVariableDeclaration","src":"4611:29:23","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:23","nodeType":"YulIdentifier","src":"4626:5:23"},{"name":"length","nativeSrc":"4633:6:23","nodeType":"YulIdentifier","src":"4633:6:23"}],"functionName":{"name":"add","nativeSrc":"4622:3:23","nodeType":"YulIdentifier","src":"4622:3:23"},"nativeSrc":"4622:18:23","nodeType":"YulFunctionCall","src":"4622:18:23"},"variables":[{"name":"end","nativeSrc":"4615:3:23","nodeType":"YulTypedName","src":"4615:3:23","type":""}]},{"nativeSrc":"4653:23:23","nodeType":"YulVariableDeclaration","src":"4653:23:23","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:23","nodeType":"YulIdentifier","src":"4672:3:23"}],"functionName":{"name":"mload","nativeSrc":"4666:5:23","nodeType":"YulIdentifier","src":"4666:5:23"},"nativeSrc":"4666:10:23","nodeType":"YulFunctionCall","src":"4666:10:23"},"variables":[{"name":"cache","nativeSrc":"4657:5:23","nodeType":"YulTypedName","src":"4657:5:23","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:23","nodeType":"YulIdentifier","src":"4696:3:23"},{"name":"slot","nativeSrc":"4701:4:23","nodeType":"YulIdentifier","src":"4701:4:23"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:23","nodeType":"YulIdentifier","src":"4689:6:23"},"nativeSrc":"4689:17:23","nodeType":"YulFunctionCall","src":"4689:17:23"},"nativeSrc":"4689:17:23","nodeType":"YulExpressionStatement","src":"4689:17:23"},{"nativeSrc":"4719:45:23","nodeType":"YulAssignment","src":"4719:45:23","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:23","nodeType":"YulIdentifier","src":"4739:5:23"},{"arguments":[{"name":"length","nativeSrc":"4750:6:23","nodeType":"YulIdentifier","src":"4750:6:23"},{"kind":"number","nativeSrc":"4758:4:23","nodeType":"YulLiteral","src":"4758:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:23","nodeType":"YulIdentifier","src":"4746:3:23"},"nativeSrc":"4746:17:23","nodeType":"YulFunctionCall","src":"4746:17:23"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:23","nodeType":"YulIdentifier","src":"4729:9:23"},"nativeSrc":"4729:35:23","nodeType":"YulFunctionCall","src":"4729:35:23"},"variableNames":[{"name":"result","nativeSrc":"4719:6:23","nodeType":"YulIdentifier","src":"4719:6:23"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:23","nodeType":"YulIdentifier","src":"4784:3:23"},{"name":"cache","nativeSrc":"4789:5:23","nodeType":"YulIdentifier","src":"4789:5:23"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:23","nodeType":"YulIdentifier","src":"4777:6:23"},"nativeSrc":"4777:18:23","nodeType":"YulFunctionCall","src":"4777:18:23"},"nativeSrc":"4777:18:23","nodeType":"YulExpressionStatement","src":"4777:18:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":4697,"isOffset":false,"isSlot":false,"src":"4554:3:23","valueSize":1},{"declaration":4697,"isOffset":false,"isSlot":false,"src":"4588:3:23","valueSize":1},{"declaration":4700,"isOffset":false,"isSlot":false,"src":"4719:6:23","valueSize":1},{"declaration":4695,"isOffset":false,"isSlot":false,"src":"4701:4:23","valueSize":1}],"flags":["memory-safe"],"id":4702,"nodeType":"InlineAssembly","src":"4495:310:23"}]},"documentation":{"id":4693,"nodeType":"StructuredDocumentation","src":"4307:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4704,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:23","nodeType":"FunctionDefinition","parameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4695,"mutability":"mutable","name":"slot","nameLocation":"4421:4:23","nodeType":"VariableDeclaration","scope":4704,"src":"4413:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4697,"mutability":"mutable","name":"key","nameLocation":"4441:3:23","nodeType":"VariableDeclaration","scope":4704,"src":"4427:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4696,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:23"},"returnParameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"result","nameLocation":"4477:6:23","nodeType":"VariableDeclaration","scope":4704,"src":"4469:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:23"},"scope":4717,"src":"4390:421:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4715,"nodeType":"Block","src":"4994:326:23","statements":[{"AST":{"nativeSrc":"5029:285:23","nodeType":"YulBlock","src":"5029:285:23","statements":[{"nativeSrc":"5043:24:23","nodeType":"YulVariableDeclaration","src":"5043:24:23","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:23","nodeType":"YulIdentifier","src":"5063:3:23"}],"functionName":{"name":"mload","nativeSrc":"5057:5:23","nodeType":"YulIdentifier","src":"5057:5:23"},"nativeSrc":"5057:10:23","nodeType":"YulFunctionCall","src":"5057:10:23"},"variables":[{"name":"length","nativeSrc":"5047:6:23","nodeType":"YulTypedName","src":"5047:6:23","type":""}]},{"nativeSrc":"5080:27:23","nodeType":"YulVariableDeclaration","src":"5080:27:23","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:23","nodeType":"YulIdentifier","src":"5097:3:23"},{"kind":"number","nativeSrc":"5102:4:23","nodeType":"YulLiteral","src":"5102:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:23","nodeType":"YulIdentifier","src":"5093:3:23"},"nativeSrc":"5093:14:23","nodeType":"YulFunctionCall","src":"5093:14:23"},"variables":[{"name":"begin","nativeSrc":"5084:5:23","nodeType":"YulTypedName","src":"5084:5:23","type":""}]},{"nativeSrc":"5120:29:23","nodeType":"YulVariableDeclaration","src":"5120:29:23","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:23","nodeType":"YulIdentifier","src":"5135:5:23"},{"name":"length","nativeSrc":"5142:6:23","nodeType":"YulIdentifier","src":"5142:6:23"}],"functionName":{"name":"add","nativeSrc":"5131:3:23","nodeType":"YulIdentifier","src":"5131:3:23"},"nativeSrc":"5131:18:23","nodeType":"YulFunctionCall","src":"5131:18:23"},"variables":[{"name":"end","nativeSrc":"5124:3:23","nodeType":"YulTypedName","src":"5124:3:23","type":""}]},{"nativeSrc":"5162:23:23","nodeType":"YulVariableDeclaration","src":"5162:23:23","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:23","nodeType":"YulIdentifier","src":"5181:3:23"}],"functionName":{"name":"mload","nativeSrc":"5175:5:23","nodeType":"YulIdentifier","src":"5175:5:23"},"nativeSrc":"5175:10:23","nodeType":"YulFunctionCall","src":"5175:10:23"},"variables":[{"name":"cache","nativeSrc":"5166:5:23","nodeType":"YulTypedName","src":"5166:5:23","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:23","nodeType":"YulIdentifier","src":"5205:3:23"},{"name":"slot","nativeSrc":"5210:4:23","nodeType":"YulIdentifier","src":"5210:4:23"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:23","nodeType":"YulIdentifier","src":"5198:6:23"},"nativeSrc":"5198:17:23","nodeType":"YulFunctionCall","src":"5198:17:23"},"nativeSrc":"5198:17:23","nodeType":"YulExpressionStatement","src":"5198:17:23"},{"nativeSrc":"5228:45:23","nodeType":"YulAssignment","src":"5228:45:23","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:23","nodeType":"YulIdentifier","src":"5248:5:23"},{"arguments":[{"name":"length","nativeSrc":"5259:6:23","nodeType":"YulIdentifier","src":"5259:6:23"},{"kind":"number","nativeSrc":"5267:4:23","nodeType":"YulLiteral","src":"5267:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:23","nodeType":"YulIdentifier","src":"5255:3:23"},"nativeSrc":"5255:17:23","nodeType":"YulFunctionCall","src":"5255:17:23"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:23","nodeType":"YulIdentifier","src":"5238:9:23"},"nativeSrc":"5238:35:23","nodeType":"YulFunctionCall","src":"5238:35:23"},"variableNames":[{"name":"result","nativeSrc":"5228:6:23","nodeType":"YulIdentifier","src":"5228:6:23"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:23","nodeType":"YulIdentifier","src":"5293:3:23"},{"name":"cache","nativeSrc":"5298:5:23","nodeType":"YulIdentifier","src":"5298:5:23"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:23","nodeType":"YulIdentifier","src":"5286:6:23"},"nativeSrc":"5286:18:23","nodeType":"YulFunctionCall","src":"5286:18:23"},"nativeSrc":"5286:18:23","nodeType":"YulExpressionStatement","src":"5286:18:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":4709,"isOffset":false,"isSlot":false,"src":"5063:3:23","valueSize":1},{"declaration":4709,"isOffset":false,"isSlot":false,"src":"5097:3:23","valueSize":1},{"declaration":4712,"isOffset":false,"isSlot":false,"src":"5228:6:23","valueSize":1},{"declaration":4707,"isOffset":false,"isSlot":false,"src":"5210:4:23","valueSize":1}],"flags":["memory-safe"],"id":4714,"nodeType":"InlineAssembly","src":"5004:310:23"}]},"documentation":{"id":4705,"nodeType":"StructuredDocumentation","src":"4817:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4716,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:23","nodeType":"FunctionDefinition","parameters":{"id":4710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4707,"mutability":"mutable","name":"slot","nameLocation":"4931:4:23","nodeType":"VariableDeclaration","scope":4716,"src":"4923:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4709,"mutability":"mutable","name":"key","nameLocation":"4950:3:23","nodeType":"VariableDeclaration","scope":4716,"src":"4937:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4708,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:23"},"returnParameters":{"id":4713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4712,"mutability":"mutable","name":"result","nameLocation":"4986:6:23","nodeType":"VariableDeclaration","scope":4716,"src":"4978:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:23"},"scope":4717,"src":"4900:420:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4718,"src":"1599:3723:23","usedErrors":[],"usedEvents":[]}],"src":"199:5124:23"},"id":23},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4841]},"id":4842,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4719,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4720,"nodeType":"StructuredDocumentation","src":"219:1187:24","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":4841,"linearizedBaseContracts":[4841],"name":"StorageSlot","nameLocation":"1415:11:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4723,"members":[{"constant":false,"id":4722,"mutability":"mutable","name":"value","nameLocation":"1470:5:24","nodeType":"VariableDeclaration","scope":4723,"src":"1462:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4721,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:24","nodeType":"StructDefinition","scope":4841,"src":"1433:49:24","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4726,"members":[{"constant":false,"id":4725,"mutability":"mutable","name":"value","nameLocation":"1522:5:24","nodeType":"VariableDeclaration","scope":4726,"src":"1517:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4724,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:24","nodeType":"StructDefinition","scope":4841,"src":"1488:46:24","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4729,"members":[{"constant":false,"id":4728,"mutability":"mutable","name":"value","nameLocation":"1577:5:24","nodeType":"VariableDeclaration","scope":4729,"src":"1569:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:24","nodeType":"StructDefinition","scope":4841,"src":"1540:49:24","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4732,"members":[{"constant":false,"id":4731,"mutability":"mutable","name":"value","nameLocation":"1632:5:24","nodeType":"VariableDeclaration","scope":4732,"src":"1624:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:24","nodeType":"StructDefinition","scope":4841,"src":"1595:49:24","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4735,"members":[{"constant":false,"id":4734,"mutability":"mutable","name":"value","nameLocation":"1685:5:24","nodeType":"VariableDeclaration","scope":4735,"src":"1678:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4733,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:24","nodeType":"StructDefinition","scope":4841,"src":"1650:47:24","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4738,"members":[{"constant":false,"id":4737,"mutability":"mutable","name":"value","nameLocation":"1738:5:24","nodeType":"VariableDeclaration","scope":4738,"src":"1731:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4736,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:24","nodeType":"StructDefinition","scope":4841,"src":"1703:47:24","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4741,"members":[{"constant":false,"id":4740,"mutability":"mutable","name":"value","nameLocation":"1789:5:24","nodeType":"VariableDeclaration","scope":4741,"src":"1783:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4739,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:24","nodeType":"StructDefinition","scope":4841,"src":"1756:45:24","visibility":"public"},{"body":{"id":4751,"nodeType":"Block","src":"1983:79:24","statements":[{"AST":{"nativeSrc":"2018:38:24","nodeType":"YulBlock","src":"2018:38:24","statements":[{"nativeSrc":"2032:14:24","nodeType":"YulAssignment","src":"2032:14:24","value":{"name":"slot","nativeSrc":"2042:4:24","nodeType":"YulIdentifier","src":"2042:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:24","nodeType":"YulIdentifier","src":"2032:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4748,"isOffset":false,"isSlot":true,"src":"2032:6:24","suffix":"slot","valueSize":1},{"declaration":4744,"isOffset":false,"isSlot":false,"src":"2042:4:24","valueSize":1}],"flags":["memory-safe"],"id":4750,"nodeType":"InlineAssembly","src":"1993:63:24"}]},"documentation":{"id":4742,"nodeType":"StructuredDocumentation","src":"1807:87:24","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4752,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:24","nodeType":"FunctionDefinition","parameters":{"id":4745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4744,"mutability":"mutable","name":"slot","nameLocation":"1931:4:24","nodeType":"VariableDeclaration","scope":4752,"src":"1923:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:24"},"returnParameters":{"id":4749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"r","nameLocation":"1980:1:24","nodeType":"VariableDeclaration","scope":4752,"src":"1960:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4723_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4747,"nodeType":"UserDefinedTypeName","pathNode":{"id":4746,"name":"AddressSlot","nameLocations":["1960:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4723,"src":"1960:11:24"},"referencedDeclaration":4723,"src":"1960:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4723_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:24"},"scope":4841,"src":"1899:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4762,"nodeType":"Block","src":"2243:79:24","statements":[{"AST":{"nativeSrc":"2278:38:24","nodeType":"YulBlock","src":"2278:38:24","statements":[{"nativeSrc":"2292:14:24","nodeType":"YulAssignment","src":"2292:14:24","value":{"name":"slot","nativeSrc":"2302:4:24","nodeType":"YulIdentifier","src":"2302:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:24","nodeType":"YulIdentifier","src":"2292:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4759,"isOffset":false,"isSlot":true,"src":"2292:6:24","suffix":"slot","valueSize":1},{"declaration":4755,"isOffset":false,"isSlot":false,"src":"2302:4:24","valueSize":1}],"flags":["memory-safe"],"id":4761,"nodeType":"InlineAssembly","src":"2253:63:24"}]},"documentation":{"id":4753,"nodeType":"StructuredDocumentation","src":"2068:86:24","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4763,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:24","nodeType":"FunctionDefinition","parameters":{"id":4756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4755,"mutability":"mutable","name":"slot","nameLocation":"2191:4:24","nodeType":"VariableDeclaration","scope":4763,"src":"2183:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:24"},"returnParameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"r","nameLocation":"2240:1:24","nodeType":"VariableDeclaration","scope":4763,"src":"2220:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4726_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4758,"nodeType":"UserDefinedTypeName","pathNode":{"id":4757,"name":"BooleanSlot","nameLocations":["2220:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"2220:11:24"},"referencedDeclaration":4726,"src":"2220:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4726_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:24"},"scope":4841,"src":"2159:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4773,"nodeType":"Block","src":"2503:79:24","statements":[{"AST":{"nativeSrc":"2538:38:24","nodeType":"YulBlock","src":"2538:38:24","statements":[{"nativeSrc":"2552:14:24","nodeType":"YulAssignment","src":"2552:14:24","value":{"name":"slot","nativeSrc":"2562:4:24","nodeType":"YulIdentifier","src":"2562:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:24","nodeType":"YulIdentifier","src":"2552:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4770,"isOffset":false,"isSlot":true,"src":"2552:6:24","suffix":"slot","valueSize":1},{"declaration":4766,"isOffset":false,"isSlot":false,"src":"2562:4:24","valueSize":1}],"flags":["memory-safe"],"id":4772,"nodeType":"InlineAssembly","src":"2513:63:24"}]},"documentation":{"id":4764,"nodeType":"StructuredDocumentation","src":"2328:86:24","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4774,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:24","nodeType":"FunctionDefinition","parameters":{"id":4767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4766,"mutability":"mutable","name":"slot","nameLocation":"2451:4:24","nodeType":"VariableDeclaration","scope":4774,"src":"2443:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:24"},"returnParameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"mutability":"mutable","name":"r","nameLocation":"2500:1:24","nodeType":"VariableDeclaration","scope":4774,"src":"2480:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4729_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4769,"nodeType":"UserDefinedTypeName","pathNode":{"id":4768,"name":"Bytes32Slot","nameLocations":["2480:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4729,"src":"2480:11:24"},"referencedDeclaration":4729,"src":"2480:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4729_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:24"},"scope":4841,"src":"2419:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4784,"nodeType":"Block","src":"2763:79:24","statements":[{"AST":{"nativeSrc":"2798:38:24","nodeType":"YulBlock","src":"2798:38:24","statements":[{"nativeSrc":"2812:14:24","nodeType":"YulAssignment","src":"2812:14:24","value":{"name":"slot","nativeSrc":"2822:4:24","nodeType":"YulIdentifier","src":"2822:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:24","nodeType":"YulIdentifier","src":"2812:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4781,"isOffset":false,"isSlot":true,"src":"2812:6:24","suffix":"slot","valueSize":1},{"declaration":4777,"isOffset":false,"isSlot":false,"src":"2822:4:24","valueSize":1}],"flags":["memory-safe"],"id":4783,"nodeType":"InlineAssembly","src":"2773:63:24"}]},"documentation":{"id":4775,"nodeType":"StructuredDocumentation","src":"2588:86:24","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4785,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:24","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"slot","nameLocation":"2711:4:24","nodeType":"VariableDeclaration","scope":4785,"src":"2703:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:24"},"returnParameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"r","nameLocation":"2760:1:24","nodeType":"VariableDeclaration","scope":4785,"src":"2740:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4732_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4780,"nodeType":"UserDefinedTypeName","pathNode":{"id":4779,"name":"Uint256Slot","nameLocations":["2740:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4732,"src":"2740:11:24"},"referencedDeclaration":4732,"src":"2740:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4732_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:24"},"scope":4841,"src":"2679:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4795,"nodeType":"Block","src":"3020:79:24","statements":[{"AST":{"nativeSrc":"3055:38:24","nodeType":"YulBlock","src":"3055:38:24","statements":[{"nativeSrc":"3069:14:24","nodeType":"YulAssignment","src":"3069:14:24","value":{"name":"slot","nativeSrc":"3079:4:24","nodeType":"YulIdentifier","src":"3079:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:24","nodeType":"YulIdentifier","src":"3069:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4792,"isOffset":false,"isSlot":true,"src":"3069:6:24","suffix":"slot","valueSize":1},{"declaration":4788,"isOffset":false,"isSlot":false,"src":"3079:4:24","valueSize":1}],"flags":["memory-safe"],"id":4794,"nodeType":"InlineAssembly","src":"3030:63:24"}]},"documentation":{"id":4786,"nodeType":"StructuredDocumentation","src":"2848:85:24","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4796,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:24","nodeType":"FunctionDefinition","parameters":{"id":4789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"slot","nameLocation":"2969:4:24","nodeType":"VariableDeclaration","scope":4796,"src":"2961:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:24"},"returnParameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"r","nameLocation":"3017:1:24","nodeType":"VariableDeclaration","scope":4796,"src":"2998:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4735_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4791,"nodeType":"UserDefinedTypeName","pathNode":{"id":4790,"name":"Int256Slot","nameLocations":["2998:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4735,"src":"2998:10:24"},"referencedDeclaration":4735,"src":"2998:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4735_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:24"},"scope":4841,"src":"2938:161:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4806,"nodeType":"Block","src":"3277:79:24","statements":[{"AST":{"nativeSrc":"3312:38:24","nodeType":"YulBlock","src":"3312:38:24","statements":[{"nativeSrc":"3326:14:24","nodeType":"YulAssignment","src":"3326:14:24","value":{"name":"slot","nativeSrc":"3336:4:24","nodeType":"YulIdentifier","src":"3336:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:24","nodeType":"YulIdentifier","src":"3326:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4803,"isOffset":false,"isSlot":true,"src":"3326:6:24","suffix":"slot","valueSize":1},{"declaration":4799,"isOffset":false,"isSlot":false,"src":"3336:4:24","valueSize":1}],"flags":["memory-safe"],"id":4805,"nodeType":"InlineAssembly","src":"3287:63:24"}]},"documentation":{"id":4797,"nodeType":"StructuredDocumentation","src":"3105:85:24","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4807,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:24","nodeType":"FunctionDefinition","parameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4799,"mutability":"mutable","name":"slot","nameLocation":"3226:4:24","nodeType":"VariableDeclaration","scope":4807,"src":"3218:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:24"},"returnParameters":{"id":4804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4803,"mutability":"mutable","name":"r","nameLocation":"3274:1:24","nodeType":"VariableDeclaration","scope":4807,"src":"3255:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4738_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4802,"nodeType":"UserDefinedTypeName","pathNode":{"id":4801,"name":"StringSlot","nameLocations":["3255:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4738,"src":"3255:10:24"},"referencedDeclaration":4738,"src":"3255:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4738_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:24"},"scope":4841,"src":"3195:161:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4817,"nodeType":"Block","src":"3558:85:24","statements":[{"AST":{"nativeSrc":"3593:44:24","nodeType":"YulBlock","src":"3593:44:24","statements":[{"nativeSrc":"3607:20:24","nodeType":"YulAssignment","src":"3607:20:24","value":{"name":"store.slot","nativeSrc":"3617:10:24","nodeType":"YulIdentifier","src":"3617:10:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:24","nodeType":"YulIdentifier","src":"3607:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4814,"isOffset":false,"isSlot":true,"src":"3607:6:24","suffix":"slot","valueSize":1},{"declaration":4810,"isOffset":false,"isSlot":true,"src":"3617:10:24","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4816,"nodeType":"InlineAssembly","src":"3568:69:24"}]},"documentation":{"id":4808,"nodeType":"StructuredDocumentation","src":"3362:101:24","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4818,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:24","nodeType":"FunctionDefinition","parameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4810,"mutability":"mutable","name":"store","nameLocation":"3506:5:24","nodeType":"VariableDeclaration","scope":4818,"src":"3491:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4809,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:24"},"returnParameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"r","nameLocation":"3555:1:24","nodeType":"VariableDeclaration","scope":4818,"src":"3536:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4738_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4813,"nodeType":"UserDefinedTypeName","pathNode":{"id":4812,"name":"StringSlot","nameLocations":["3536:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4738,"src":"3536:10:24"},"referencedDeclaration":4738,"src":"3536:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4738_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:24"},"scope":4841,"src":"3468:175:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4828,"nodeType":"Block","src":"3818:79:24","statements":[{"AST":{"nativeSrc":"3853:38:24","nodeType":"YulBlock","src":"3853:38:24","statements":[{"nativeSrc":"3867:14:24","nodeType":"YulAssignment","src":"3867:14:24","value":{"name":"slot","nativeSrc":"3877:4:24","nodeType":"YulIdentifier","src":"3877:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:24","nodeType":"YulIdentifier","src":"3867:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4825,"isOffset":false,"isSlot":true,"src":"3867:6:24","suffix":"slot","valueSize":1},{"declaration":4821,"isOffset":false,"isSlot":false,"src":"3877:4:24","valueSize":1}],"flags":["memory-safe"],"id":4827,"nodeType":"InlineAssembly","src":"3828:63:24"}]},"documentation":{"id":4819,"nodeType":"StructuredDocumentation","src":"3649:84:24","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":4829,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:24","nodeType":"FunctionDefinition","parameters":{"id":4822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4821,"mutability":"mutable","name":"slot","nameLocation":"3768:4:24","nodeType":"VariableDeclaration","scope":4829,"src":"3760:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:24"},"returnParameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4825,"mutability":"mutable","name":"r","nameLocation":"3815:1:24","nodeType":"VariableDeclaration","scope":4829,"src":"3797:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4741_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4824,"nodeType":"UserDefinedTypeName","pathNode":{"id":4823,"name":"BytesSlot","nameLocations":["3797:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":4741,"src":"3797:9:24"},"referencedDeclaration":4741,"src":"3797:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4741_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:24"},"scope":4841,"src":"3738:159:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4839,"nodeType":"Block","src":"4094:85:24","statements":[{"AST":{"nativeSrc":"4129:44:24","nodeType":"YulBlock","src":"4129:44:24","statements":[{"nativeSrc":"4143:20:24","nodeType":"YulAssignment","src":"4143:20:24","value":{"name":"store.slot","nativeSrc":"4153:10:24","nodeType":"YulIdentifier","src":"4153:10:24"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:24","nodeType":"YulIdentifier","src":"4143:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4836,"isOffset":false,"isSlot":true,"src":"4143:6:24","suffix":"slot","valueSize":1},{"declaration":4832,"isOffset":false,"isSlot":true,"src":"4153:10:24","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4838,"nodeType":"InlineAssembly","src":"4104:69:24"}]},"documentation":{"id":4830,"nodeType":"StructuredDocumentation","src":"3903:99:24","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4840,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:24","nodeType":"FunctionDefinition","parameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"store","nameLocation":"4043:5:24","nodeType":"VariableDeclaration","scope":4840,"src":"4029:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4831,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:24"},"returnParameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"r","nameLocation":"4091:1:24","nodeType":"VariableDeclaration","scope":4840,"src":"4073:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4741_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4835,"nodeType":"UserDefinedTypeName","pathNode":{"id":4834,"name":"BytesSlot","nameLocations":["4073:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":4741,"src":"4073:9:24"},"referencedDeclaration":4741,"src":"4073:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4741_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:24"},"scope":4841,"src":"4007:172:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4842,"src":"1407:2774:24","usedErrors":[],"usedEvents":[]}],"src":"193:3989:24"},"id":24},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[7900],"SafeCast":[9665],"SignedMath":[9809],"Strings":[6243]},"id":6244,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4843,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6244,"sourceUnit":7901,"src":"127:37:25","symbolAliases":[{"foreign":{"id":4844,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"135:4:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":4847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6244,"sourceUnit":9666,"src":"165:45:25","symbolAliases":[{"foreign":{"id":4846,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"173:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":4849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6244,"sourceUnit":9810,"src":"211:49:25","symbolAliases":[{"foreign":{"id":4848,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9809,"src":"219:10:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4850,"nodeType":"StructuredDocumentation","src":"262:34:25","text":" @dev String operations."},"fullyImplemented":true,"id":6243,"linearizedBaseContracts":[6243],"name":"Strings","nameLocation":"305:7:25","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4852,"libraryName":{"id":4851,"name":"SafeCast","nameLocations":["325:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":9665,"src":"325:8:25"},"nodeType":"UsingForDirective","src":"319:21:25"},{"constant":true,"id":4855,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:25","nodeType":"VariableDeclaration","scope":6243,"src":"346:56:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4853,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:25","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4858,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:25","nodeType":"VariableDeclaration","scope":6243,"src":"408:42:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4856,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:25","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":4894,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:25","nodeType":"VariableDeclaration","scope":6243,"src":"456:302:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":4883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":4873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":4868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:25","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:25","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":4867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:25","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:25","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:25","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":4872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:25","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:25","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:25","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":4877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:25","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:25","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:25","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:25","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":4882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:25","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:25","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":4886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:25","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:25","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":4887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:25","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:25","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:25","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":4892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:25","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:25","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":4895,"nodeType":"StructuredDocumentation","src":"778:81:25","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":4901,"name":"StringsInsufficientHexLength","nameLocation":"870:28:25","nodeType":"ErrorDefinition","parameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4897,"mutability":"mutable","name":"value","nameLocation":"907:5:25","nodeType":"VariableDeclaration","scope":4901,"src":"899:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4899,"mutability":"mutable","name":"length","nameLocation":"922:6:25","nodeType":"VariableDeclaration","scope":4901,"src":"914:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:25"},"src":"864:66:25"},{"documentation":{"id":4902,"nodeType":"StructuredDocumentation","src":"936:108:25","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":4904,"name":"StringsInvalidChar","nameLocation":"1055:18:25","nodeType":"ErrorDefinition","parameters":{"id":4903,"nodeType":"ParameterList","parameters":[],"src":"1073:2:25"},"src":"1049:27:25"},{"documentation":{"id":4905,"nodeType":"StructuredDocumentation","src":"1082:84:25","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":4907,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:25","nodeType":"ErrorDefinition","parameters":{"id":4906,"nodeType":"ParameterList","parameters":[],"src":"1204:2:25"},"src":"1171:36:25"},{"body":{"id":4954,"nodeType":"Block","src":"1379:563:25","statements":[{"id":4953,"nodeType":"UncheckedBlock","src":"1389:547:25","statements":[{"assignments":[4916],"declarations":[{"constant":false,"id":4916,"mutability":"mutable","name":"length","nameLocation":"1421:6:25","nodeType":"VariableDeclaration","scope":4953,"src":"1413:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4923,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"1441:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4917,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"1430:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7900_$","typeString":"type(library Math)"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:25","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":7732,"src":"1430:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:25"},{"assignments":[4925],"declarations":[{"constant":false,"id":4925,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:25","nodeType":"VariableDeclaration","scope":4953,"src":"1465:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4924,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4930,"initialValue":{"arguments":[{"id":4928,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"1499:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4926,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:25"},{"assignments":[4932],"declarations":[{"constant":false,"id":4932,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:25","nodeType":"VariableDeclaration","scope":4953,"src":"1520:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4933,"nodeType":"VariableDeclarationStatement","src":"1520:11:25"},{"AST":{"nativeSrc":"1570:69:25","nodeType":"YulBlock","src":"1570:69:25","statements":[{"nativeSrc":"1588:37:25","nodeType":"YulAssignment","src":"1588:37:25","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:25","nodeType":"YulIdentifier","src":"1603:6:25"},{"kind":"number","nativeSrc":"1611:4:25","nodeType":"YulLiteral","src":"1611:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:25","nodeType":"YulIdentifier","src":"1599:3:25"},"nativeSrc":"1599:17:25","nodeType":"YulFunctionCall","src":"1599:17:25"},{"name":"length","nativeSrc":"1618:6:25","nodeType":"YulIdentifier","src":"1618:6:25"}],"functionName":{"name":"add","nativeSrc":"1595:3:25","nodeType":"YulIdentifier","src":"1595:3:25"},"nativeSrc":"1595:30:25","nodeType":"YulFunctionCall","src":"1595:30:25"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:25","nodeType":"YulIdentifier","src":"1588:3:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4925,"isOffset":false,"isSlot":false,"src":"1603:6:25","valueSize":1},{"declaration":4916,"isOffset":false,"isSlot":false,"src":"1618:6:25","valueSize":1},{"declaration":4932,"isOffset":false,"isSlot":false,"src":"1588:3:25","valueSize":1}],"flags":["memory-safe"],"id":4934,"nodeType":"InlineAssembly","src":"1545:94:25"},{"body":{"id":4949,"nodeType":"Block","src":"1665:234:25","statements":[{"expression":{"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:25","subExpression":{"id":4936,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"1683:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4938,"nodeType":"ExpressionStatement","src":"1683:5:25"},{"AST":{"nativeSrc":"1731:86:25","nodeType":"YulBlock","src":"1731:86:25","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:25","nodeType":"YulIdentifier","src":"1761:3:25"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:25","nodeType":"YulIdentifier","src":"1775:5:25"},{"kind":"number","nativeSrc":"1782:2:25","nodeType":"YulLiteral","src":"1782:2:25","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:25","nodeType":"YulIdentifier","src":"1771:3:25"},"nativeSrc":"1771:14:25","nodeType":"YulFunctionCall","src":"1771:14:25"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:25","nodeType":"YulIdentifier","src":"1787:10:25"}],"functionName":{"name":"byte","nativeSrc":"1766:4:25","nodeType":"YulIdentifier","src":"1766:4:25"},"nativeSrc":"1766:32:25","nodeType":"YulFunctionCall","src":"1766:32:25"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:25","nodeType":"YulIdentifier","src":"1753:7:25"},"nativeSrc":"1753:46:25","nodeType":"YulFunctionCall","src":"1753:46:25"},"nativeSrc":"1753:46:25","nodeType":"YulExpressionStatement","src":"1753:46:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":4855,"isOffset":false,"isSlot":false,"src":"1787:10:25","valueSize":1},{"declaration":4932,"isOffset":false,"isSlot":false,"src":"1761:3:25","valueSize":1},{"declaration":4910,"isOffset":false,"isSlot":false,"src":"1775:5:25","valueSize":1}],"flags":["memory-safe"],"id":4939,"nodeType":"InlineAssembly","src":"1706:111:25"},{"expression":{"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"1834:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4943,"nodeType":"ExpressionStatement","src":"1834:11:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"1867:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4948,"nodeType":"IfStatement","src":"1863:21:25","trueBody":{"id":4947,"nodeType":"Break","src":"1879:5:25"}}]},"condition":{"hexValue":"74727565","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4950,"nodeType":"WhileStatement","src":"1652:247:25"},{"expression":{"id":4951,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"1919:6:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4914,"id":4952,"nodeType":"Return","src":"1912:13:25"}]}]},"documentation":{"id":4908,"nodeType":"StructuredDocumentation","src":"1213:90:25","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4955,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:25","nodeType":"FunctionDefinition","parameters":{"id":4911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4910,"mutability":"mutable","name":"value","nameLocation":"1334:5:25","nodeType":"VariableDeclaration","scope":4955,"src":"1326:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:25"},"returnParameters":{"id":4914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4955,"src":"1364:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4912,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:25"},"scope":6243,"src":"1308:634:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4980,"nodeType":"Block","src":"2118:92:25","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"2149:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:25","trueExpression":{"hexValue":"2d","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"2195:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4973,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9809,"src":"2180:10:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$9809_$","typeString":"type(library SignedMath)"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:25","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":9808,"src":"2180:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4972,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"2171:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4963,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:25","typeDescriptions":{}}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:25","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:25","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4962,"id":4979,"nodeType":"Return","src":"2128:75:25"}]},"documentation":{"id":4956,"nodeType":"StructuredDocumentation","src":"1948:89:25","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4981,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:25","nodeType":"FunctionDefinition","parameters":{"id":4959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"value","nameLocation":"2073:5:25","nodeType":"VariableDeclaration","scope":4981,"src":"2066:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4957,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:25"},"returnParameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4981,"src":"2103:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4960,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:25"},"scope":6243,"src":"2042:168:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5000,"nodeType":"Block","src":"2389:100:25","statements":[{"id":4999,"nodeType":"UncheckedBlock","src":"2399:84:25","statements":[{"expression":{"arguments":[{"id":4990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"2442:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"2461:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4991,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"2449:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7900_$","typeString":"type(library Math)"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:25","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":7843,"src":"2449:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4989,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5001,5084,5104],"referencedDeclaration":5084,"src":"2430:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4988,"id":4998,"nodeType":"Return","src":"2423:49:25"}]}]},"documentation":{"id":4982,"nodeType":"StructuredDocumentation","src":"2216:94:25","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":5001,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:25","nodeType":"FunctionDefinition","parameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"value","nameLocation":"2344:5:25","nodeType":"VariableDeclaration","scope":5001,"src":"2336:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:25"},"returnParameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5001,"src":"2374:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4986,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:25"},"scope":6243,"src":"2315:174:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5083,"nodeType":"Block","src":"2702:435:25","statements":[{"assignments":[5012],"declarations":[{"constant":false,"id":5012,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:25","nodeType":"VariableDeclaration","scope":5083,"src":"2712:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5014,"initialValue":{"id":5013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"2733:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:25"},{"assignments":[5016],"declarations":[{"constant":false,"id":5016,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:25","nodeType":"VariableDeclaration","scope":5083,"src":"2748:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5015,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5025,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5020,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"2784:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5017,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:25"},{"expression":{"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5026,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"2805:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5028,"indexExpression":{"hexValue":"30","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5031,"nodeType":"ExpressionStatement","src":"2805:15:25"},{"expression":{"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5032,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"2830:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5034,"indexExpression":{"hexValue":"31","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5037,"nodeType":"ExpressionStatement","src":"2830:15:25"},{"body":{"id":5066,"nodeType":"Block","src":"2900:95:25","statements":[{"expression":{"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5052,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"2914:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5054,"indexExpression":{"id":5053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"2921:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5055,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"2926:10:25","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":5059,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"2937:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5061,"nodeType":"ExpressionStatement","src":"2914:40:25"},{"expression":{"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5062,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"2968:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5065,"nodeType":"ExpressionStatement","src":"2968:16:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"2888:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5067,"initializationExpression":{"assignments":[5039],"declarations":[{"constant":false,"id":5039,"mutability":"mutable","name":"i","nameLocation":"2868:1:25","nodeType":"VariableDeclaration","scope":5067,"src":"2860:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5045,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5041,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"2876:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:25"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:25","subExpression":{"id":5049,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"2897:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5051,"nodeType":"ExpressionStatement","src":"2895:3:25"},"nodeType":"ForStatement","src":"2855:140:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5068,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"3008:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5077,"nodeType":"IfStatement","src":"3004:96:25","trueBody":{"id":5076,"nodeType":"Block","src":"3025:75:25","statements":[{"errorCall":{"arguments":[{"id":5072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"3075:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5073,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"3082:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5071,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"3046:28:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5075,"nodeType":"RevertStatement","src":"3039:50:25"}]}},{"expression":{"arguments":[{"id":5080,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"3123:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5078,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:25","typeDescriptions":{}}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5010,"id":5082,"nodeType":"Return","src":"3109:21:25"}]},"documentation":{"id":5002,"nodeType":"StructuredDocumentation","src":"2495:112:25","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":5084,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:25","nodeType":"FunctionDefinition","parameters":{"id":5007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"value","nameLocation":"2641:5:25","nodeType":"VariableDeclaration","scope":5084,"src":"2633:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5003,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5006,"mutability":"mutable","name":"length","nameLocation":"2656:6:25","nodeType":"VariableDeclaration","scope":5084,"src":"2648:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:25"},"returnParameters":{"id":5010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5084,"src":"2687:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5008,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:25"},"scope":6243,"src":"2612:525:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5103,"nodeType":"Block","src":"3369:75:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":5097,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"3414:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5095,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:25","typeDescriptions":{}}},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:25","typeDescriptions":{}}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5100,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"3422:14:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5092,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5001,5084,5104],"referencedDeclaration":5084,"src":"3386:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5091,"id":5102,"nodeType":"Return","src":"3379:58:25"}]},"documentation":{"id":5085,"nodeType":"StructuredDocumentation","src":"3143:148:25","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":5104,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:25","nodeType":"FunctionDefinition","parameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5087,"mutability":"mutable","name":"addr","nameLocation":"3325:4:25","nodeType":"VariableDeclaration","scope":5104,"src":"3317:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5086,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:25"},"returnParameters":{"id":5091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5104,"src":"3354:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5089,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:25"},"scope":6243,"src":"3296:148:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5168,"nodeType":"Block","src":"3701:642:25","statements":[{"assignments":[5113],"declarations":[{"constant":false,"id":5113,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:25","nodeType":"VariableDeclaration","scope":5168,"src":"3711:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5112,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5120,"initialValue":{"arguments":[{"arguments":[{"id":5117,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"3751:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5116,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5001,5084,5104],"referencedDeclaration":5104,"src":"3739:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5114,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:25","typeDescriptions":{}}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:25"},{"assignments":[5122],"declarations":[{"constant":false,"id":5122,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:25","nodeType":"VariableDeclaration","scope":5168,"src":"3842:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5121,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5123,"nodeType":"VariableDeclarationStatement","src":"3842:17:25"},{"AST":{"nativeSrc":"3894:78:25","nodeType":"YulBlock","src":"3894:78:25","statements":[{"nativeSrc":"3908:54:25","nodeType":"YulAssignment","src":"3908:54:25","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:25","nodeType":"YulLiteral","src":"3925:2:25","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:25","nodeType":"YulIdentifier","src":"3943:6:25"},{"kind":"number","nativeSrc":"3951:4:25","nodeType":"YulLiteral","src":"3951:4:25","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:25","nodeType":"YulIdentifier","src":"3939:3:25"},"nativeSrc":"3939:17:25","nodeType":"YulFunctionCall","src":"3939:17:25"},{"kind":"number","nativeSrc":"3958:2:25","nodeType":"YulLiteral","src":"3958:2:25","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:25","nodeType":"YulIdentifier","src":"3929:9:25"},"nativeSrc":"3929:32:25","nodeType":"YulFunctionCall","src":"3929:32:25"}],"functionName":{"name":"shr","nativeSrc":"3921:3:25","nodeType":"YulIdentifier","src":"3921:3:25"},"nativeSrc":"3921:41:25","nodeType":"YulFunctionCall","src":"3921:41:25"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:25","nodeType":"YulIdentifier","src":"3908:9:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5113,"isOffset":false,"isSlot":false,"src":"3943:6:25","valueSize":1},{"declaration":5122,"isOffset":false,"isSlot":false,"src":"3908:9:25","valueSize":1}],"flags":["memory-safe"],"id":5124,"nodeType":"InlineAssembly","src":"3869:103:25"},{"body":{"id":5161,"nodeType":"Block","src":"4015:291:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5135,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"4121:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:25","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":5142,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"4150:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5144,"indexExpression":{"id":5143,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"4157:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5140,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:25","typeDescriptions":{}}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5156,"nodeType":"IfStatement","src":"4117:150:25","trueBody":{"id":5155,"nodeType":"Block","src":"4167:100:25","statements":[{"expression":{"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5149,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"4235:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5151,"indexExpression":{"id":5150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"4242:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":5152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5154,"nodeType":"ExpressionStatement","src":"4235:17:25"}]}},{"expression":{"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5157,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"4280:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5160,"nodeType":"ExpressionStatement","src":"4280:15:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"4003:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5162,"initializationExpression":{"assignments":[5126],"declarations":[{"constant":false,"id":5126,"mutability":"mutable","name":"i","nameLocation":"3995:1:25","nodeType":"VariableDeclaration","scope":5162,"src":"3987:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5128,"initialValue":{"hexValue":"3431","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:25","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:25"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:25","subExpression":{"id":5132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"4012:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5134,"nodeType":"ExpressionStatement","src":"4010:3:25"},"nodeType":"ForStatement","src":"3982:324:25"},{"expression":{"arguments":[{"id":5165,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"4329:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5163,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:25","typeDescriptions":{}}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5111,"id":5167,"nodeType":"Return","src":"4315:21:25"}]},"documentation":{"id":5105,"nodeType":"StructuredDocumentation","src":"3450:165:25","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":5169,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:25","nodeType":"FunctionDefinition","parameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"addr","nameLocation":"3657:4:25","nodeType":"VariableDeclaration","scope":5169,"src":"3649:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5106,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:25"},"returnParameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5169,"src":"3686:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5109,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:25"},"scope":6243,"src":"3620:723:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5205,"nodeType":"Block","src":"4498:104:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5181,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"4521:1:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5179,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:25","typeDescriptions":{}}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:25","memberName":"length","nodeType":"MemberAccess","src":"4515:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5186,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"4540:1:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5184,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:25","typeDescriptions":{}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:25","memberName":"length","nodeType":"MemberAccess","src":"4534:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"4569:1:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5191,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:25","typeDescriptions":{}}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5190,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":5199,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"4592:1:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5197,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:25","typeDescriptions":{}}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5196,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5178,"id":5204,"nodeType":"Return","src":"4508:87:25"}]},"documentation":{"id":5170,"nodeType":"StructuredDocumentation","src":"4349:66:25","text":" @dev Returns true if the two strings are equal."},"id":5206,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:25","nodeType":"FunctionDefinition","parameters":{"id":5175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"a","nameLocation":"4449:1:25","nodeType":"VariableDeclaration","scope":5206,"src":"4435:15:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5171,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5174,"mutability":"mutable","name":"b","nameLocation":"4466:1:25","nodeType":"VariableDeclaration","scope":5206,"src":"4452:15:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5173,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:25"},"returnParameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5206,"src":"4492:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5176,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:25"},"scope":6243,"src":"4420:182:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5224,"nodeType":"Block","src":"4899:64:25","statements":[{"expression":{"arguments":[{"id":5215,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"4926:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5219,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"4942:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5217,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:25","typeDescriptions":{}}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:25","memberName":"length","nodeType":"MemberAccess","src":"4936:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5214,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[5225,5256],"referencedDeclaration":5256,"src":"4916:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5213,"id":5223,"nodeType":"Return","src":"4909:47:25"}]},"documentation":{"id":5207,"nodeType":"StructuredDocumentation","src":"4608:214:25","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":5225,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:25","nodeType":"FunctionDefinition","parameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"input","nameLocation":"4860:5:25","nodeType":"VariableDeclaration","scope":5225,"src":"4846:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5208,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:25"},"returnParameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5225,"src":"4890:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:25"},"scope":6243,"src":"4827:136:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5255,"nodeType":"Block","src":"5368:153:25","statements":[{"assignments":[5238,5240],"declarations":[{"constant":false,"id":5238,"mutability":"mutable","name":"success","nameLocation":"5384:7:25","nodeType":"VariableDeclaration","scope":5255,"src":"5379:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5237,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5240,"mutability":"mutable","name":"value","nameLocation":"5401:5:25","nodeType":"VariableDeclaration","scope":5255,"src":"5393:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5239,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5246,"initialValue":{"arguments":[{"id":5242,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"5423:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5243,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"5430:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5244,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"5437:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5241,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[5277,5314],"referencedDeclaration":5314,"src":"5410:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:25"},{"condition":{"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:25","subExpression":{"id":5247,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"5456:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5252,"nodeType":"IfStatement","src":"5451:41:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5249,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"5472:18:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5251,"nodeType":"RevertStatement","src":"5465:27:25"}},{"expression":{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"5509:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5236,"id":5254,"nodeType":"Return","src":"5502:12:25"}]},"documentation":{"id":5226,"nodeType":"StructuredDocumentation","src":"4969:294:25","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":5256,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:25","nodeType":"FunctionDefinition","parameters":{"id":5233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5228,"mutability":"mutable","name":"input","nameLocation":"5301:5:25","nodeType":"VariableDeclaration","scope":5256,"src":"5287:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5227,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5230,"mutability":"mutable","name":"begin","nameLocation":"5316:5:25","nodeType":"VariableDeclaration","scope":5256,"src":"5308:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5229,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5232,"mutability":"mutable","name":"end","nameLocation":"5331:3:25","nodeType":"VariableDeclaration","scope":5256,"src":"5323:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:25"},"returnParameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5256,"src":"5359:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:25"},"scope":6243,"src":"5268:253:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5276,"nodeType":"Block","src":"5842:83:25","statements":[{"expression":{"arguments":[{"id":5267,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"5888:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5271,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"5904:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5269,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:25","typeDescriptions":{}}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:25","memberName":"length","nodeType":"MemberAccess","src":"5898:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5266,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"5859:28:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5265,"id":5275,"nodeType":"Return","src":"5852:66:25"}]},"documentation":{"id":5257,"nodeType":"StructuredDocumentation","src":"5527:215:25","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5277,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:25","nodeType":"FunctionDefinition","parameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"input","nameLocation":"5783:5:25","nodeType":"VariableDeclaration","scope":5277,"src":"5769:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5258,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:25"},"returnParameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"success","nameLocation":"5818:7:25","nodeType":"VariableDeclaration","scope":5277,"src":"5813:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5261,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5264,"mutability":"mutable","name":"value","nameLocation":"5835:5:25","nodeType":"VariableDeclaration","scope":5277,"src":"5827:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:25"},"scope":6243,"src":"5747:178:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5313,"nodeType":"Block","src":"6327:144:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5291,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"6341:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5294,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"6353:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5292,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:25","typeDescriptions":{}}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:25","memberName":"length","nodeType":"MemberAccess","src":"6347:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"6370:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5299,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"6378:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5306,"nodeType":"IfStatement","src":"6337:63:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5290,"id":5305,"nodeType":"Return","src":"6383:17:25"}},{"expression":{"arguments":[{"id":5308,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"6446:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5309,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"6453:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5310,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"6460:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5307,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"6417:28:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5290,"id":5312,"nodeType":"Return","src":"6410:54:25"}]},"documentation":{"id":5278,"nodeType":"StructuredDocumentation","src":"5931:238:25","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5314,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:25","nodeType":"FunctionDefinition","parameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5280,"mutability":"mutable","name":"input","nameLocation":"6219:5:25","nodeType":"VariableDeclaration","scope":5314,"src":"6205:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5279,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5282,"mutability":"mutable","name":"begin","nameLocation":"6242:5:25","nodeType":"VariableDeclaration","scope":5314,"src":"6234:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5281,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5284,"mutability":"mutable","name":"end","nameLocation":"6265:3:25","nodeType":"VariableDeclaration","scope":5314,"src":"6257:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5283,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:25"},"returnParameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5287,"mutability":"mutable","name":"success","nameLocation":"6303:7:25","nodeType":"VariableDeclaration","scope":5314,"src":"6298:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5286,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5289,"mutability":"mutable","name":"value","nameLocation":"6320:5:25","nodeType":"VariableDeclaration","scope":5314,"src":"6312:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:25"},"scope":6243,"src":"6174:297:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5383,"nodeType":"Block","src":"6874:347:25","statements":[{"assignments":[5329],"declarations":[{"constant":false,"id":5329,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:25","nodeType":"VariableDeclaration","scope":5383,"src":"6884:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5328,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5334,"initialValue":{"arguments":[{"id":5332,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"6912:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5330,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:25","typeDescriptions":{}}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:25"},{"assignments":[5336],"declarations":[{"constant":false,"id":5336,"mutability":"mutable","name":"result","nameLocation":"6937:6:25","nodeType":"VariableDeclaration","scope":5383,"src":"6929:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5335,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5338,"initialValue":{"hexValue":"30","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:25"},{"body":{"id":5377,"nodeType":"Block","src":"6995:189:25","statements":[{"assignments":[5350],"declarations":[{"constant":false,"id":5350,"mutability":"mutable","name":"chr","nameLocation":"7015:3:25","nodeType":"VariableDeclaration","scope":5377,"src":"7009:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5349,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5360,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5355,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"7064:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"7072:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5354,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"7041:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5352,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:25","typeDescriptions":{}}},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5351,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"7021:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5361,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"7094:3:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:25","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5368,"nodeType":"IfStatement","src":"7090:30:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5327,"id":5367,"nodeType":"Return","src":"7103:17:25"}},{"expression":{"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"7134:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5372,"nodeType":"ExpressionStatement","src":"7134:12:25"},{"expression":{"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"7160:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5374,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"7170:3:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5376,"nodeType":"ExpressionStatement","src":"7160:13:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"6981:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5344,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"6985:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5378,"initializationExpression":{"assignments":[5340],"declarations":[{"constant":false,"id":5340,"mutability":"mutable","name":"i","nameLocation":"6970:1:25","nodeType":"VariableDeclaration","scope":5378,"src":"6962:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5339,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5342,"initialValue":{"id":5341,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"6974:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:25","subExpression":{"id":5346,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"6992:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5348,"nodeType":"ExpressionStatement","src":"6990:3:25"},"nodeType":"ForStatement","src":"6957:227:25"},{"expression":{"components":[{"hexValue":"74727565","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"7207:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5327,"id":5382,"nodeType":"Return","src":"7193:21:25"}]},"documentation":{"id":5315,"nodeType":"StructuredDocumentation","src":"6477:224:25","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5384,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:25","nodeType":"FunctionDefinition","parameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"input","nameLocation":"6767:5:25","nodeType":"VariableDeclaration","scope":5384,"src":"6753:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5316,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5319,"mutability":"mutable","name":"begin","nameLocation":"6790:5:25","nodeType":"VariableDeclaration","scope":5384,"src":"6782:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5318,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5321,"mutability":"mutable","name":"end","nameLocation":"6813:3:25","nodeType":"VariableDeclaration","scope":5384,"src":"6805:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5320,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:25"},"returnParameters":{"id":5327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5324,"mutability":"mutable","name":"success","nameLocation":"6850:7:25","nodeType":"VariableDeclaration","scope":5384,"src":"6845:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5323,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5326,"mutability":"mutable","name":"value","nameLocation":"6867:5:25","nodeType":"VariableDeclaration","scope":5384,"src":"6859:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:25"},"scope":6243,"src":"6706:515:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5402,"nodeType":"Block","src":"7518:63:25","statements":[{"expression":{"arguments":[{"id":5393,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"7544:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5397,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"7560:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5395,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:25","typeDescriptions":{}}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:25","memberName":"length","nodeType":"MemberAccess","src":"7554:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5392,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[5403,5434],"referencedDeclaration":5434,"src":"7535:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5391,"id":5401,"nodeType":"Return","src":"7528:46:25"}]},"documentation":{"id":5385,"nodeType":"StructuredDocumentation","src":"7227:216:25","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5403,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:25","nodeType":"FunctionDefinition","parameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5387,"mutability":"mutable","name":"input","nameLocation":"7480:5:25","nodeType":"VariableDeclaration","scope":5403,"src":"7466:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5386,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:25"},"returnParameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5403,"src":"7510:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5389,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:25"},"scope":6243,"src":"7448:133:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5433,"nodeType":"Block","src":"7986:151:25","statements":[{"assignments":[5416,5418],"declarations":[{"constant":false,"id":5416,"mutability":"mutable","name":"success","nameLocation":"8002:7:25","nodeType":"VariableDeclaration","scope":5433,"src":"7997:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5415,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5418,"mutability":"mutable","name":"value","nameLocation":"8018:5:25","nodeType":"VariableDeclaration","scope":5433,"src":"8011:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5417,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5424,"initialValue":{"arguments":[{"id":5420,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"8039:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5421,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"8046:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5422,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"8053:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5419,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[5455,5497],"referencedDeclaration":5497,"src":"8027:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:25"},{"condition":{"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:25","subExpression":{"id":5425,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"8072:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5430,"nodeType":"IfStatement","src":"8067:41:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5427,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"8088:18:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5429,"nodeType":"RevertStatement","src":"8081:27:25"}},{"expression":{"id":5431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"8125:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5414,"id":5432,"nodeType":"Return","src":"8118:12:25"}]},"documentation":{"id":5404,"nodeType":"StructuredDocumentation","src":"7587:296:25","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5434,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:25","nodeType":"FunctionDefinition","parameters":{"id":5411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5406,"mutability":"mutable","name":"input","nameLocation":"7920:5:25","nodeType":"VariableDeclaration","scope":5434,"src":"7906:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5405,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5408,"mutability":"mutable","name":"begin","nameLocation":"7935:5:25","nodeType":"VariableDeclaration","scope":5434,"src":"7927:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5410,"mutability":"mutable","name":"end","nameLocation":"7950:3:25","nodeType":"VariableDeclaration","scope":5434,"src":"7942:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5409,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:25"},"returnParameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5434,"src":"7978:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5412,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:25"},"scope":6243,"src":"7888:249:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5454,"nodeType":"Block","src":"8528:82:25","statements":[{"expression":{"arguments":[{"id":5445,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"8573:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5449,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"8589:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5447,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:25","typeDescriptions":{}}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:25","memberName":"length","nodeType":"MemberAccess","src":"8583:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5444,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"8545:27:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5443,"id":5453,"nodeType":"Return","src":"8538:65:25"}]},"documentation":{"id":5435,"nodeType":"StructuredDocumentation","src":"8143:287:25","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5455,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:25","nodeType":"FunctionDefinition","parameters":{"id":5438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5437,"mutability":"mutable","name":"input","nameLocation":"8470:5:25","nodeType":"VariableDeclaration","scope":5455,"src":"8456:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5436,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:25"},"returnParameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5440,"mutability":"mutable","name":"success","nameLocation":"8505:7:25","nodeType":"VariableDeclaration","scope":5455,"src":"8500:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5439,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5442,"mutability":"mutable","name":"value","nameLocation":"8521:5:25","nodeType":"VariableDeclaration","scope":5455,"src":"8514:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5441,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:25"},"scope":6243,"src":"8435:175:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":5460,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:25","nodeType":"VariableDeclaration","scope":6243,"src":"8616:50:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":5459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:25","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":5496,"nodeType":"Block","src":"9132:143:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5474,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"9146:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5477,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"9158:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5475,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:25","typeDescriptions":{}}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:25","memberName":"length","nodeType":"MemberAccess","src":"9152:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5481,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"9175:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5482,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"9183:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5489,"nodeType":"IfStatement","src":"9142:63:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5473,"id":5488,"nodeType":"Return","src":"9188:17:25"}},{"expression":{"arguments":[{"id":5491,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"9250:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5492,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"9257:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5493,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"9264:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5490,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"9222:27:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5473,"id":5495,"nodeType":"Return","src":"9215:53:25"}]},"documentation":{"id":5461,"nodeType":"StructuredDocumentation","src":"8673:303:25","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5497,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:25","nodeType":"FunctionDefinition","parameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"input","nameLocation":"9025:5:25","nodeType":"VariableDeclaration","scope":5497,"src":"9011:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5462,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5465,"mutability":"mutable","name":"begin","nameLocation":"9048:5:25","nodeType":"VariableDeclaration","scope":5497,"src":"9040:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5464,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5467,"mutability":"mutable","name":"end","nameLocation":"9071:3:25","nodeType":"VariableDeclaration","scope":5497,"src":"9063:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:25"},"returnParameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"success","nameLocation":"9109:7:25","nodeType":"VariableDeclaration","scope":5497,"src":"9104:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5469,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5472,"mutability":"mutable","name":"value","nameLocation":"9125:5:25","nodeType":"VariableDeclaration","scope":5497,"src":"9118:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5471,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:25"},"scope":6243,"src":"8981:294:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5617,"nodeType":"Block","src":"9675:812:25","statements":[{"assignments":[5512],"declarations":[{"constant":false,"id":5512,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:25","nodeType":"VariableDeclaration","scope":5617,"src":"9685:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5511,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5517,"initialValue":{"arguments":[{"id":5515,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"9713:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5513,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:25","typeDescriptions":{}}},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:25"},{"assignments":[5519],"declarations":[{"constant":false,"id":5519,"mutability":"mutable","name":"sign","nameLocation":"9783:4:25","nodeType":"VariableDeclaration","scope":5617,"src":"9776:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5518,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5535,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"9790:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5521,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"9799:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":5530,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"9847:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5531,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"9855:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5529,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"9824:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5527,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:25","typeDescriptions":{}}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:25","trueExpression":{"arguments":[{"hexValue":"30","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5523,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:25","typeDescriptions":{}}},"id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:25"},{"assignments":[5537],"declarations":[{"constant":false,"id":5537,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:25","nodeType":"VariableDeclaration","scope":5617,"src":"9943:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5536,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5544,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5538,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"9963:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5539,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:25","typeDescriptions":{}}},"id":5542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:25"},{"assignments":[5546],"declarations":[{"constant":false,"id":5546,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:25","nodeType":"VariableDeclaration","scope":5617,"src":"9992:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5545,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5553,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5547,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"10012:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5548,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:25","typeDescriptions":{}}},"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:25"},{"assignments":[5555],"declarations":[{"constant":false,"id":5555,"mutability":"mutable","name":"offset","nameLocation":"10049:6:25","nodeType":"VariableDeclaration","scope":5617,"src":"10041:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5554,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5562,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5556,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"10059:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":5557,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"10075:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"10058:37:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:25"},{"assignments":[5564,5566],"declarations":[{"constant":false,"id":5564,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:25","nodeType":"VariableDeclaration","scope":5617,"src":"10109:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5563,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5566,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:25","nodeType":"VariableDeclaration","scope":5617,"src":"10126:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5565,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5574,"initialValue":{"arguments":[{"id":5568,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"10159:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5569,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"10166:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5570,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"10174:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5572,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"10182:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5567,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[5277,5314],"referencedDeclaration":5314,"src":"10146:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:25"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"10201:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"10215:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5577,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"10226:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5595,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"10343:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5596,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"10357:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5598,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"10373:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5599,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"10385:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5510,"id":5614,"nodeType":"Return","src":"10463:17:25"},"id":5615,"nodeType":"IfStatement","src":"10339:141:25","trueBody":{"id":5610,"nodeType":"Block","src":"10401:56:25","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5604,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5603,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:25","memberName":"min","nodeType":"MemberAccess","src":"10429:16:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5510,"id":5609,"nodeType":"Return","src":"10415:31:25"}]}},"id":5616,"nodeType":"IfStatement","src":"10197:283:25","trueBody":{"id":5594,"nodeType":"Block","src":"10242:91:25","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":5581,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"10270:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5589,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"10312:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5587,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:25","typeDescriptions":{}}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:25","trueExpression":{"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:25","subExpression":{"arguments":[{"id":5584,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"10293:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5582,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:25","typeDescriptions":{}}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5510,"id":5593,"nodeType":"Return","src":"10256:66:25"}]}}]},"documentation":{"id":5498,"nodeType":"StructuredDocumentation","src":"9281:223:25","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5618,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:25","nodeType":"FunctionDefinition","parameters":{"id":5505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"input","nameLocation":"9569:5:25","nodeType":"VariableDeclaration","scope":5618,"src":"9555:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5499,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5502,"mutability":"mutable","name":"begin","nameLocation":"9592:5:25","nodeType":"VariableDeclaration","scope":5618,"src":"9584:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5504,"mutability":"mutable","name":"end","nameLocation":"9615:3:25","nodeType":"VariableDeclaration","scope":5618,"src":"9607:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:25"},"returnParameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5507,"mutability":"mutable","name":"success","nameLocation":"9652:7:25","nodeType":"VariableDeclaration","scope":5618,"src":"9647:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5506,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5509,"mutability":"mutable","name":"value","nameLocation":"9668:5:25","nodeType":"VariableDeclaration","scope":5618,"src":"9661:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5508,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:25"},"scope":6243,"src":"9509:978:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5636,"nodeType":"Block","src":"10832:67:25","statements":[{"expression":{"arguments":[{"id":5627,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"10862:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5631,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"10878:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5629,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:25","typeDescriptions":{}}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:25","memberName":"length","nodeType":"MemberAccess","src":"10872:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5626,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[5637,5668],"referencedDeclaration":5668,"src":"10849:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5625,"id":5635,"nodeType":"Return","src":"10842:50:25"}]},"documentation":{"id":5619,"nodeType":"StructuredDocumentation","src":"10493:259:25","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5637,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:25","nodeType":"FunctionDefinition","parameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"input","nameLocation":"10793:5:25","nodeType":"VariableDeclaration","scope":5637,"src":"10779:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5620,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:25"},"returnParameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5637,"src":"10823:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5623,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:25"},"scope":6243,"src":"10757:142:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5667,"nodeType":"Block","src":"11320:156:25","statements":[{"assignments":[5650,5652],"declarations":[{"constant":false,"id":5650,"mutability":"mutable","name":"success","nameLocation":"11336:7:25","nodeType":"VariableDeclaration","scope":5667,"src":"11331:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5649,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5652,"mutability":"mutable","name":"value","nameLocation":"11353:5:25","nodeType":"VariableDeclaration","scope":5667,"src":"11345:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5651,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5658,"initialValue":{"arguments":[{"id":5654,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"11378:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5655,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"11385:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5656,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"11392:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5653,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[5689,5726],"referencedDeclaration":5726,"src":"11362:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:25"},{"condition":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:25","subExpression":{"id":5659,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"11411:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5664,"nodeType":"IfStatement","src":"11406:41:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5661,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"11427:18:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5663,"nodeType":"RevertStatement","src":"11420:27:25"}},{"expression":{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"11464:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5648,"id":5666,"nodeType":"Return","src":"11457:12:25"}]},"documentation":{"id":5638,"nodeType":"StructuredDocumentation","src":"10905:307:25","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5668,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:25","nodeType":"FunctionDefinition","parameters":{"id":5645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5640,"mutability":"mutable","name":"input","nameLocation":"11253:5:25","nodeType":"VariableDeclaration","scope":5668,"src":"11239:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5639,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5642,"mutability":"mutable","name":"begin","nameLocation":"11268:5:25","nodeType":"VariableDeclaration","scope":5668,"src":"11260:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5641,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5644,"mutability":"mutable","name":"end","nameLocation":"11283:3:25","nodeType":"VariableDeclaration","scope":5668,"src":"11275:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5643,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:25"},"returnParameters":{"id":5648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5668,"src":"11311:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5646,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:25"},"scope":6243,"src":"11217:259:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5688,"nodeType":"Block","src":"11803:86:25","statements":[{"expression":{"arguments":[{"id":5679,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"11852:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5683,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"11868:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5681,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:25","typeDescriptions":{}}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:25","memberName":"length","nodeType":"MemberAccess","src":"11862:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5678,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"11820:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5677,"id":5687,"nodeType":"Return","src":"11813:69:25"}]},"documentation":{"id":5669,"nodeType":"StructuredDocumentation","src":"11482:218:25","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5689,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:25","nodeType":"FunctionDefinition","parameters":{"id":5672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5671,"mutability":"mutable","name":"input","nameLocation":"11744:5:25","nodeType":"VariableDeclaration","scope":5689,"src":"11730:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5670,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:25"},"returnParameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"success","nameLocation":"11779:7:25","nodeType":"VariableDeclaration","scope":5689,"src":"11774:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5673,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5676,"mutability":"mutable","name":"value","nameLocation":"11796:5:25","nodeType":"VariableDeclaration","scope":5689,"src":"11788:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5675,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:25"},"scope":6243,"src":"11705:184:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5725,"nodeType":"Block","src":"12297:147:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"12311:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5706,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"12323:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5704,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:25","typeDescriptions":{}}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:25","memberName":"length","nodeType":"MemberAccess","src":"12317:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"12340:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5711,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"12348:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5718,"nodeType":"IfStatement","src":"12307:63:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5702,"id":5717,"nodeType":"Return","src":"12353:17:25"}},{"expression":{"arguments":[{"id":5720,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"12419:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5721,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"12426:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5722,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"12433:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5719,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"12387:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5702,"id":5724,"nodeType":"Return","src":"12380:57:25"}]},"documentation":{"id":5690,"nodeType":"StructuredDocumentation","src":"11895:241:25","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5726,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:25","nodeType":"FunctionDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"input","nameLocation":"12189:5:25","nodeType":"VariableDeclaration","scope":5726,"src":"12175:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5691,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5694,"mutability":"mutable","name":"begin","nameLocation":"12212:5:25","nodeType":"VariableDeclaration","scope":5726,"src":"12204:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5693,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5696,"mutability":"mutable","name":"end","nameLocation":"12235:3:25","nodeType":"VariableDeclaration","scope":5726,"src":"12227:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5695,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:25"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"success","nameLocation":"12273:7:25","nodeType":"VariableDeclaration","scope":5726,"src":"12268:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5698,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5701,"mutability":"mutable","name":"value","nameLocation":"12290:5:25","nodeType":"VariableDeclaration","scope":5726,"src":"12282:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5700,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:25"},"scope":6243,"src":"12141:303:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5828,"nodeType":"Block","src":"12853:881:25","statements":[{"assignments":[5741],"declarations":[{"constant":false,"id":5741,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:25","nodeType":"VariableDeclaration","scope":5828,"src":"12863:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5740,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5746,"initialValue":{"arguments":[{"id":5744,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"12891:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5742,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:25","typeDescriptions":{}}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:25"},{"assignments":[5748],"declarations":[{"constant":false,"id":5748,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:25","nodeType":"VariableDeclaration","scope":5828,"src":"12945:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5747,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5768,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5749,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"12963:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5750,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"12969:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5758,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"13013:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5759,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"13021:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5757,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"12990:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5755,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:25","typeDescriptions":{}}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5762,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:25","typeDescriptions":{}}},"id":5765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:25"},{"assignments":[5770],"declarations":[{"constant":false,"id":5770,"mutability":"mutable","name":"offset","nameLocation":"13133:6:25","nodeType":"VariableDeclaration","scope":5828,"src":"13125:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5769,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5776,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5771,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"13142:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"13142:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:25"},{"assignments":[5778],"declarations":[{"constant":false,"id":5778,"mutability":"mutable","name":"result","nameLocation":"13183:6:25","nodeType":"VariableDeclaration","scope":5828,"src":"13175:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5777,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5780,"initialValue":{"hexValue":"30","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:25"},{"body":{"id":5822,"nodeType":"Block","src":"13250:447:25","statements":[{"assignments":[5794],"declarations":[{"constant":false,"id":5794,"mutability":"mutable","name":"chr","nameLocation":"13270:3:25","nodeType":"VariableDeclaration","scope":5822,"src":"13264:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5793,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5804,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5799,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"13319:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5800,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"13327:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5798,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"13296:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5796,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:25","typeDescriptions":{}}},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5795,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"13276:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5805,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"13349:3:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":5806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5812,"nodeType":"IfStatement","src":"13345:31:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5739,"id":5811,"nodeType":"Return","src":"13359:17:25"}},{"expression":{"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"13390:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5816,"nodeType":"ExpressionStatement","src":"13390:12:25"},{"id":5821,"nodeType":"UncheckedBlock","src":"13416:271:25","statements":[{"expression":{"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5817,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"13659:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5818,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"13669:3:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5820,"nodeType":"ExpressionStatement","src":"13659:13:25"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5787,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"13236:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5788,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"13240:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5823,"initializationExpression":{"assignments":[5782],"declarations":[{"constant":false,"id":5782,"mutability":"mutable","name":"i","nameLocation":"13216:1:25","nodeType":"VariableDeclaration","scope":5823,"src":"13208:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5786,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5783,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"13220:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5784,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"13228:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:25","subExpression":{"id":5790,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"13247:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5792,"nodeType":"ExpressionStatement","src":"13245:3:25"},"nodeType":"ForStatement","src":"13203:494:25"},{"expression":{"components":[{"hexValue":"74727565","id":5824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"13720:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5739,"id":5827,"nodeType":"Return","src":"13706:21:25"}]},"documentation":{"id":5727,"nodeType":"StructuredDocumentation","src":"12450:227:25","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5829,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:25","nodeType":"FunctionDefinition","parameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"input","nameLocation":"12746:5:25","nodeType":"VariableDeclaration","scope":5829,"src":"12732:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5728,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5731,"mutability":"mutable","name":"begin","nameLocation":"12769:5:25","nodeType":"VariableDeclaration","scope":5829,"src":"12761:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5730,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5733,"mutability":"mutable","name":"end","nameLocation":"12792:3:25","nodeType":"VariableDeclaration","scope":5829,"src":"12784:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5732,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:25"},"returnParameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"success","nameLocation":"12829:7:25","nodeType":"VariableDeclaration","scope":5829,"src":"12824:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5735,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5738,"mutability":"mutable","name":"value","nameLocation":"12846:5:25","nodeType":"VariableDeclaration","scope":5829,"src":"12838:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5737,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:25"},"scope":6243,"src":"12682:1052:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5847,"nodeType":"Block","src":"14032:67:25","statements":[{"expression":{"arguments":[{"id":5838,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"14062:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5842,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"14078:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5840,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:25","typeDescriptions":{}}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:25","memberName":"length","nodeType":"MemberAccess","src":"14072:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5837,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[5848,5879],"referencedDeclaration":5879,"src":"14049:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5836,"id":5846,"nodeType":"Return","src":"14042:50:25"}]},"documentation":{"id":5830,"nodeType":"StructuredDocumentation","src":"13740:212:25","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5848,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:25","nodeType":"FunctionDefinition","parameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"input","nameLocation":"13993:5:25","nodeType":"VariableDeclaration","scope":5848,"src":"13979:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5831,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:25"},"returnParameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5848,"src":"14023:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5834,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:25"},"scope":6243,"src":"13957:142:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5878,"nodeType":"Block","src":"14472:165:25","statements":[{"assignments":[5861,5863],"declarations":[{"constant":false,"id":5861,"mutability":"mutable","name":"success","nameLocation":"14488:7:25","nodeType":"VariableDeclaration","scope":5878,"src":"14483:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5860,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5863,"mutability":"mutable","name":"value","nameLocation":"14505:5:25","nodeType":"VariableDeclaration","scope":5878,"src":"14497:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5862,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5869,"initialValue":{"arguments":[{"id":5865,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"14530:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5866,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"14537:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5867,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"14544:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5864,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5900,6004],"referencedDeclaration":6004,"src":"14514:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:25"},{"condition":{"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:25","subExpression":{"id":5870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"14563:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5875,"nodeType":"IfStatement","src":"14558:50:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5872,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"14579:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5874,"nodeType":"RevertStatement","src":"14572:36:25"}},{"expression":{"id":5876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"14625:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5859,"id":5877,"nodeType":"Return","src":"14618:12:25"}]},"documentation":{"id":5849,"nodeType":"StructuredDocumentation","src":"14105:259:25","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5879,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:25","nodeType":"FunctionDefinition","parameters":{"id":5856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"input","nameLocation":"14405:5:25","nodeType":"VariableDeclaration","scope":5879,"src":"14391:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5850,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5853,"mutability":"mutable","name":"begin","nameLocation":"14420:5:25","nodeType":"VariableDeclaration","scope":5879,"src":"14412:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5852,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5855,"mutability":"mutable","name":"end","nameLocation":"14435:3:25","nodeType":"VariableDeclaration","scope":5879,"src":"14427:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5854,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:25"},"returnParameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5879,"src":"14463:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5857,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:25"},"scope":6243,"src":"14369:268:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5899,"nodeType":"Block","src":"14944:70:25","statements":[{"expression":{"arguments":[{"id":5890,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"14977:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5894,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"14993:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5892,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:25","typeDescriptions":{}}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:25","memberName":"length","nodeType":"MemberAccess","src":"14987:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5889,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5900,6004],"referencedDeclaration":6004,"src":"14961:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5888,"id":5898,"nodeType":"Return","src":"14954:53:25"}]},"documentation":{"id":5880,"nodeType":"StructuredDocumentation","src":"14643:198:25","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":5900,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:25","nodeType":"FunctionDefinition","parameters":{"id":5883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"input","nameLocation":"14885:5:25","nodeType":"VariableDeclaration","scope":5900,"src":"14871:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5881,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:25"},"returnParameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5885,"mutability":"mutable","name":"success","nameLocation":"14920:7:25","nodeType":"VariableDeclaration","scope":5900,"src":"14915:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5884,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5887,"mutability":"mutable","name":"value","nameLocation":"14937:5:25","nodeType":"VariableDeclaration","scope":5900,"src":"14929:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5886,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:25"},"scope":6243,"src":"14846:168:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6003,"nodeType":"Block","src":"15407:733:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5914,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"15421:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5917,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"15433:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5915,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:25","typeDescriptions":{}}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:25","memberName":"length","nodeType":"MemberAccess","src":"15427:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5921,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"15450:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5922,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"15458:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5932,"nodeType":"IfStatement","src":"15417:72:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5926,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:25","typeDescriptions":{}}},"id":5929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5913,"id":5931,"nodeType":"Return","src":"15463:26:25"}},{"assignments":[5934],"declarations":[{"constant":false,"id":5934,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:25","nodeType":"VariableDeclaration","scope":6003,"src":"15500:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5933,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5957,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5935,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"15518:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5936,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"15524:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":5946,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"15574:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5944,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:25","typeDescriptions":{}}},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5948,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"15582:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5943,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"15545:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5941,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:25","typeDescriptions":{}}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5951,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:25","typeDescriptions":{}}},"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:25"},{"assignments":[5959],"declarations":[{"constant":false,"id":5959,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:25","nodeType":"VariableDeclaration","scope":6003,"src":"15686:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5958,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5967,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5961,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"15716:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"15716:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5968,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"15803:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5969,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"15809:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5971,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"15818:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6001,"nodeType":"Block","src":"16083:51:25","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5995,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:25","typeDescriptions":{}}},"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5913,"id":6000,"nodeType":"Return","src":"16097:26:25"}]},"id":6002,"nodeType":"IfStatement","src":"15799:335:25","trueBody":{"id":5993,"nodeType":"Block","src":"15834:243:25","statements":[{"assignments":[5974,5976],"declarations":[{"constant":false,"id":5974,"mutability":"mutable","name":"s","nameLocation":"15955:1:25","nodeType":"VariableDeclaration","scope":5993,"src":"15950:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5973,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5976,"mutability":"mutable","name":"v","nameLocation":"15966:1:25","nodeType":"VariableDeclaration","scope":5993,"src":"15958:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5975,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5982,"initialValue":{"arguments":[{"id":5978,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"16003:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5979,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"16010:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5980,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"16017:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5977,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"15971:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:25"},{"expression":{"components":[{"id":5983,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"16043:1:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":5988,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"16062:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5986,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:25","typeDescriptions":{}}},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5984,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:25","typeDescriptions":{}}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5913,"id":5992,"nodeType":"Return","src":"16035:31:25"}]}}]},"documentation":{"id":5901,"nodeType":"StructuredDocumentation","src":"15020:226:25","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":6004,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:25","nodeType":"FunctionDefinition","parameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5903,"mutability":"mutable","name":"input","nameLocation":"15299:5:25","nodeType":"VariableDeclaration","scope":6004,"src":"15285:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5902,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5905,"mutability":"mutable","name":"begin","nameLocation":"15322:5:25","nodeType":"VariableDeclaration","scope":6004,"src":"15314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5904,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5907,"mutability":"mutable","name":"end","nameLocation":"15345:3:25","nodeType":"VariableDeclaration","scope":6004,"src":"15337:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:25"},"returnParameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5910,"mutability":"mutable","name":"success","nameLocation":"15383:7:25","nodeType":"VariableDeclaration","scope":6004,"src":"15378:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5909,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5912,"mutability":"mutable","name":"value","nameLocation":"15400:5:25","nodeType":"VariableDeclaration","scope":6004,"src":"15392:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5911,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:25"},"scope":6243,"src":"15251:889:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6063,"nodeType":"Block","src":"16209:461:25","statements":[{"assignments":[6012],"declarations":[{"constant":false,"id":6012,"mutability":"mutable","name":"value","nameLocation":"16225:5:25","nodeType":"VariableDeclaration","scope":6063,"src":"16219:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6011,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6017,"initialValue":{"arguments":[{"id":6015,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"16239:3:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6013,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:25","typeDescriptions":{}}},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:25"},{"id":6060,"nodeType":"UncheckedBlock","src":"16403:238:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"16431:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:25","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"16445:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:25","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"16491:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":6030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"16505:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:25","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"16552:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"16566:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:25","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":6053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6052,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6051,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:25","memberName":"max","nodeType":"MemberAccess","src":"16615:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6010,"id":6056,"nodeType":"Return","src":"16608:22:25"},"id":6057,"nodeType":"IfStatement","src":"16548:82:25","trueBody":{"expression":{"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"16578:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":6048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:25","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6050,"nodeType":"ExpressionStatement","src":"16578:11:25"}},"id":6058,"nodeType":"IfStatement","src":"16487:143:25","trueBody":{"expression":{"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"16518:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:25","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6039,"nodeType":"ExpressionStatement","src":"16518:11:25"}},"id":6059,"nodeType":"IfStatement","src":"16427:203:25","trueBody":{"expression":{"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"16457:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6028,"nodeType":"ExpressionStatement","src":"16457:11:25"}}]},{"expression":{"id":6061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"16658:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6010,"id":6062,"nodeType":"Return","src":"16651:12:25"}]},"id":6064,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:25","nodeType":"FunctionDefinition","parameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"chr","nameLocation":"16175:3:25","nodeType":"VariableDeclaration","scope":6064,"src":"16168:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":6005,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:25"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6064,"src":"16202:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6008,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:25"},"scope":6243,"src":"16146:524:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6229,"nodeType":"Block","src":"17336:1331:25","statements":[{"assignments":[6073],"declarations":[{"constant":false,"id":6073,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:25","nodeType":"VariableDeclaration","scope":6229,"src":"17346:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6072,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6078,"initialValue":{"arguments":[{"id":6076,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"17374:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6074,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:25","typeDescriptions":{}}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:25"},{"assignments":[6080],"declarations":[{"constant":false,"id":6080,"mutability":"mutable","name":"output","nameLocation":"17403:6:25","nodeType":"VariableDeclaration","scope":6229,"src":"17390:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6079,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6088,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6084,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"17426:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:25","memberName":"length","nodeType":"MemberAccess","src":"17426:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6081,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:25"},{"assignments":[6090],"declarations":[{"constant":false,"id":6090,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:25","nodeType":"VariableDeclaration","scope":6229,"src":"17473:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6089,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6092,"initialValue":{"hexValue":"30","id":6091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:25"},{"body":{"id":6221,"nodeType":"Block","src":"17548:854:25","statements":[{"assignments":[6104],"declarations":[{"constant":false,"id":6104,"mutability":"mutable","name":"char","nameLocation":"17569:4:25","nodeType":"VariableDeclaration","scope":6221,"src":"17562:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":6103,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":6112,"initialValue":{"arguments":[{"arguments":[{"id":6108,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"17606:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6109,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"17614:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6107,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"17583:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6105,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:25","typeDescriptions":{}}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:25"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6113,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"17637:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":6117,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"17672:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6115,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:25","typeDescriptions":{}}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6219,"nodeType":"Block","src":"18330:62:25","statements":[{"expression":{"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6212,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"18348:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6215,"indexExpression":{"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:25","subExpression":{"id":6213,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"18355:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6216,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"18373:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6218,"nodeType":"ExpressionStatement","src":"18348:29:25"}]},"id":6220,"nodeType":"IfStatement","src":"17631:761:25","trueBody":{"id":6211,"nodeType":"Block","src":"17687:637:25","statements":[{"expression":{"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6126,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"17705:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6129,"indexExpression":{"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:25","subExpression":{"id":6127,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"17712:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":6130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6132,"nodeType":"ExpressionStatement","src":"17705:29:25"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6133,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"17756:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":6134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6143,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"17825:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":6144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:25","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6153,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"17894:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6163,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"17963:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":6164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:25","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6173,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"18032:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":6174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:25","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6183,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"18101:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":6184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:25","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6193,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"18171:4:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:25","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6204,"nodeType":"IfStatement","src":"18167:143:25","trueBody":{"id":6203,"nodeType":"Block","src":"18185:125:25","statements":[{"expression":{"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6196,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"18263:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6199,"indexExpression":{"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:25","subExpression":{"id":6197,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"18270:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6202,"nodeType":"ExpressionStatement","src":"18263:28:25"}]}},"id":6205,"nodeType":"IfStatement","src":"18097:213:25","trueBody":{"expression":{"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6186,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"18115:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6189,"indexExpression":{"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:25","subExpression":{"id":6187,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"18122:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6192,"nodeType":"ExpressionStatement","src":"18115:29:25"}},"id":6206,"nodeType":"IfStatement","src":"18028:282:25","trueBody":{"expression":{"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6176,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"18046:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6179,"indexExpression":{"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:25","subExpression":{"id":6177,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"18053:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":6180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6182,"nodeType":"ExpressionStatement","src":"18046:28:25"}},"id":6207,"nodeType":"IfStatement","src":"17959:351:25","trueBody":{"expression":{"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6166,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"17977:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6169,"indexExpression":{"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:25","subExpression":{"id":6167,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"17984:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":6170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6172,"nodeType":"ExpressionStatement","src":"17977:28:25"}},"id":6208,"nodeType":"IfStatement","src":"17890:420:25","trueBody":{"expression":{"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6156,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"17908:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6159,"indexExpression":{"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:25","subExpression":{"id":6157,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"17915:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":6160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6162,"nodeType":"ExpressionStatement","src":"17908:28:25"}},"id":6209,"nodeType":"IfStatement","src":"17821:489:25","trueBody":{"expression":{"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6146,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"17839:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6149,"indexExpression":{"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:25","subExpression":{"id":6147,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"17846:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":6150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6152,"nodeType":"ExpressionStatement","src":"17839:28:25"}},"id":6210,"nodeType":"IfStatement","src":"17752:558:25","trueBody":{"expression":{"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6136,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"17770:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6139,"indexExpression":{"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:25","subExpression":{"id":6137,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"17777:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6142,"nodeType":"ExpressionStatement","src":"17770:28:25"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"17524:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6097,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"17528:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:25","memberName":"length","nodeType":"MemberAccess","src":"17528:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6222,"initializationExpression":{"assignments":[6094],"declarations":[{"constant":false,"id":6094,"mutability":"mutable","name":"i","nameLocation":"17521:1:25","nodeType":"VariableDeclaration","scope":6222,"src":"17513:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6093,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6095,"nodeType":"VariableDeclarationStatement","src":"17513:9:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:25","subExpression":{"id":6100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"17545:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6102,"nodeType":"ExpressionStatement","src":"17543:3:25"},"nodeType":"ForStatement","src":"17508:894:25"},{"AST":{"nativeSrc":"18500:129:25","nodeType":"YulBlock","src":"18500:129:25","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:25","nodeType":"YulIdentifier","src":"18521:6:25"},{"name":"outputLength","nativeSrc":"18529:12:25","nodeType":"YulIdentifier","src":"18529:12:25"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:25","nodeType":"YulIdentifier","src":"18514:6:25"},"nativeSrc":"18514:28:25","nodeType":"YulFunctionCall","src":"18514:28:25"},"nativeSrc":"18514:28:25","nodeType":"YulExpressionStatement","src":"18514:28:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:25","nodeType":"YulLiteral","src":"18562:4:25","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:25","nodeType":"YulIdentifier","src":"18572:6:25"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:25","nodeType":"YulLiteral","src":"18584:1:25","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:25","nodeType":"YulLiteral","src":"18591:1:25","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:25","nodeType":"YulIdentifier","src":"18598:12:25"},{"kind":"number","nativeSrc":"18612:2:25","nodeType":"YulLiteral","src":"18612:2:25","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:25","nodeType":"YulIdentifier","src":"18594:3:25"},"nativeSrc":"18594:21:25","nodeType":"YulFunctionCall","src":"18594:21:25"}],"functionName":{"name":"shr","nativeSrc":"18587:3:25","nodeType":"YulIdentifier","src":"18587:3:25"},"nativeSrc":"18587:29:25","nodeType":"YulFunctionCall","src":"18587:29:25"}],"functionName":{"name":"shl","nativeSrc":"18580:3:25","nodeType":"YulIdentifier","src":"18580:3:25"},"nativeSrc":"18580:37:25","nodeType":"YulFunctionCall","src":"18580:37:25"}],"functionName":{"name":"add","nativeSrc":"18568:3:25","nodeType":"YulIdentifier","src":"18568:3:25"},"nativeSrc":"18568:50:25","nodeType":"YulFunctionCall","src":"18568:50:25"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:25","nodeType":"YulIdentifier","src":"18555:6:25"},"nativeSrc":"18555:64:25","nodeType":"YulFunctionCall","src":"18555:64:25"},"nativeSrc":"18555:64:25","nodeType":"YulExpressionStatement","src":"18555:64:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":6080,"isOffset":false,"isSlot":false,"src":"18521:6:25","valueSize":1},{"declaration":6080,"isOffset":false,"isSlot":false,"src":"18572:6:25","valueSize":1},{"declaration":6090,"isOffset":false,"isSlot":false,"src":"18529:12:25","valueSize":1},{"declaration":6090,"isOffset":false,"isSlot":false,"src":"18598:12:25","valueSize":1}],"flags":["memory-safe"],"id":6223,"nodeType":"InlineAssembly","src":"18475:154:25"},{"expression":{"arguments":[{"id":6226,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"18653:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6224,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:25","typeDescriptions":{}}},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6071,"id":6228,"nodeType":"Return","src":"18639:21:25"}]},"documentation":{"id":6065,"nodeType":"StructuredDocumentation","src":"16676:576:25","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":6230,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:25","nodeType":"FunctionDefinition","parameters":{"id":6068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6067,"mutability":"mutable","name":"input","nameLocation":"17291:5:25","nodeType":"VariableDeclaration","scope":6230,"src":"17277:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6066,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:25"},"returnParameters":{"id":6071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6230,"src":"17321:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6069,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:25"},"scope":6243,"src":"17257:1410:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6241,"nodeType":"Block","src":"19052:225:25","statements":[{"AST":{"nativeSrc":"19201:70:25","nodeType":"YulBlock","src":"19201:70:25","statements":[{"nativeSrc":"19215:46:25","nodeType":"YulAssignment","src":"19215:46:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:25","nodeType":"YulIdentifier","src":"19238:6:25"},{"kind":"number","nativeSrc":"19246:4:25","nodeType":"YulLiteral","src":"19246:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:25","nodeType":"YulIdentifier","src":"19234:3:25"},"nativeSrc":"19234:17:25","nodeType":"YulFunctionCall","src":"19234:17:25"},{"name":"offset","nativeSrc":"19253:6:25","nodeType":"YulIdentifier","src":"19253:6:25"}],"functionName":{"name":"add","nativeSrc":"19230:3:25","nodeType":"YulIdentifier","src":"19230:3:25"},"nativeSrc":"19230:30:25","nodeType":"YulFunctionCall","src":"19230:30:25"}],"functionName":{"name":"mload","nativeSrc":"19224:5:25","nodeType":"YulIdentifier","src":"19224:5:25"},"nativeSrc":"19224:37:25","nodeType":"YulFunctionCall","src":"19224:37:25"},"variableNames":[{"name":"value","nativeSrc":"19215:5:25","nodeType":"YulIdentifier","src":"19215:5:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6233,"isOffset":false,"isSlot":false,"src":"19238:6:25","valueSize":1},{"declaration":6235,"isOffset":false,"isSlot":false,"src":"19253:6:25","valueSize":1},{"declaration":6238,"isOffset":false,"isSlot":false,"src":"19215:5:25","valueSize":1}],"flags":["memory-safe"],"id":6240,"nodeType":"InlineAssembly","src":"19176:95:25"}]},"documentation":{"id":6231,"nodeType":"StructuredDocumentation","src":"18673:268:25","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":6242,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:25","nodeType":"FunctionDefinition","parameters":{"id":6236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:25","nodeType":"VariableDeclaration","scope":6242,"src":"18978:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6232,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6235,"mutability":"mutable","name":"offset","nameLocation":"19007:6:25","nodeType":"VariableDeclaration","scope":6242,"src":"18999:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6234,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:25"},"returnParameters":{"id":6239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6238,"mutability":"mutable","name":"value","nameLocation":"19045:5:25","nodeType":"VariableDeclaration","scope":6242,"src":"19037:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:25"},"scope":6243,"src":"18946:331:25","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":6244,"src":"297:18982:25","usedErrors":[4901,4904,4907],"usedEvents":[]}],"src":"101:19179:25"},"id":25},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[6267],"IERC165":[6279]},"id":6268,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6245,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":6247,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6268,"sourceUnit":6280,"src":"140:38:26","symbolAliases":[{"foreign":{"id":6246,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"148:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6249,"name":"IERC165","nameLocations":["688:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":6279,"src":"688:7:26"},"id":6250,"nodeType":"InheritanceSpecifier","src":"688:7:26"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":6248,"nodeType":"StructuredDocumentation","src":"180:479:26","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":6267,"linearizedBaseContracts":[6267,6279],"name":"ERC165","nameLocation":"678:6:26","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[6278],"body":{"id":6265,"nodeType":"Block","src":"812:64:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6258,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"829:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":6260,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"849:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$6279_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$6279_$","typeString":"type(contract IERC165)"}],"id":6259,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$6279","typeString":"type(contract IERC165)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:26","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6257,"id":6264,"nodeType":"Return","src":"822:47:26"}]},"documentation":{"id":6251,"nodeType":"StructuredDocumentation","src":"702:23:26","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":6266,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:26","nodeType":"FunctionDefinition","parameters":{"id":6254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6253,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:26","nodeType":"VariableDeclaration","scope":6266,"src":"757:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6252,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:26"},"returnParameters":{"id":6257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6266,"src":"806:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6255,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:26"},"scope":6267,"src":"730:146:26","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":6268,"src":"660:218:26","usedErrors":[],"usedEvents":[]}],"src":"114:765:26"},"id":26},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[6279]},"id":6280,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6269,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":6270,"nodeType":"StructuredDocumentation","src":"142:280:27","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":6279,"linearizedBaseContracts":[6279],"name":"IERC165","nameLocation":"433:7:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6271,"nodeType":"StructuredDocumentation","src":"447:340:27","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":6278,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:27","nodeType":"FunctionDefinition","parameters":{"id":6274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:27","nodeType":"VariableDeclaration","scope":6278,"src":"819:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6272,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:27"},"returnParameters":{"id":6277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6278,"src":"862:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6275,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:27"},"scope":6279,"src":"792:76:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6280,"src":"423:447:27","usedErrors":[],"usedEvents":[]}],"src":"115:756:27"},"id":27},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[7900],"Panic":[4518],"SafeCast":[9665]},"id":7901,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6281,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":6283,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7901,"sourceUnit":4519,"src":"129:35:28","symbolAliases":[{"foreign":{"id":6282,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"137:5:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6285,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7901,"sourceUnit":9666,"src":"165:40:28","symbolAliases":[{"foreign":{"id":6284,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"173:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":6286,"nodeType":"StructuredDocumentation","src":"207:73:28","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7900,"linearizedBaseContracts":[7900],"name":"Math","nameLocation":"289:4:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":6291,"members":[{"id":6287,"name":"Floor","nameLocation":"324:5:28","nodeType":"EnumValue","src":"324:5:28"},{"id":6288,"name":"Ceil","nameLocation":"367:4:28","nodeType":"EnumValue","src":"367:4:28"},{"id":6289,"name":"Trunc","nameLocation":"409:5:28","nodeType":"EnumValue","src":"409:5:28"},{"id":6290,"name":"Expand","nameLocation":"439:6:28","nodeType":"EnumValue","src":"439:6:28"}],"name":"Rounding","nameLocation":"305:8:28","nodeType":"EnumDefinition","src":"300:169:28"},{"body":{"id":6304,"nodeType":"Block","src":"731:112:28","statements":[{"AST":{"nativeSrc":"766:71:28","nodeType":"YulBlock","src":"766:71:28","statements":[{"nativeSrc":"780:16:28","nodeType":"YulAssignment","src":"780:16:28","value":{"arguments":[{"name":"a","nativeSrc":"791:1:28","nodeType":"YulIdentifier","src":"791:1:28"},{"name":"b","nativeSrc":"794:1:28","nodeType":"YulIdentifier","src":"794:1:28"}],"functionName":{"name":"add","nativeSrc":"787:3:28","nodeType":"YulIdentifier","src":"787:3:28"},"nativeSrc":"787:9:28","nodeType":"YulFunctionCall","src":"787:9:28"},"variableNames":[{"name":"low","nativeSrc":"780:3:28","nodeType":"YulIdentifier","src":"780:3:28"}]},{"nativeSrc":"809:18:28","nodeType":"YulAssignment","src":"809:18:28","value":{"arguments":[{"name":"low","nativeSrc":"820:3:28","nodeType":"YulIdentifier","src":"820:3:28"},{"name":"a","nativeSrc":"825:1:28","nodeType":"YulIdentifier","src":"825:1:28"}],"functionName":{"name":"lt","nativeSrc":"817:2:28","nodeType":"YulIdentifier","src":"817:2:28"},"nativeSrc":"817:10:28","nodeType":"YulFunctionCall","src":"817:10:28"},"variableNames":[{"name":"high","nativeSrc":"809:4:28","nodeType":"YulIdentifier","src":"809:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6294,"isOffset":false,"isSlot":false,"src":"791:1:28","valueSize":1},{"declaration":6294,"isOffset":false,"isSlot":false,"src":"825:1:28","valueSize":1},{"declaration":6296,"isOffset":false,"isSlot":false,"src":"794:1:28","valueSize":1},{"declaration":6299,"isOffset":false,"isSlot":false,"src":"809:4:28","valueSize":1},{"declaration":6301,"isOffset":false,"isSlot":false,"src":"780:3:28","valueSize":1},{"declaration":6301,"isOffset":false,"isSlot":false,"src":"820:3:28","valueSize":1}],"flags":["memory-safe"],"id":6303,"nodeType":"InlineAssembly","src":"741:96:28"}]},"documentation":{"id":6292,"nodeType":"StructuredDocumentation","src":"475:163:28","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":6305,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:28","nodeType":"FunctionDefinition","parameters":{"id":6297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6294,"mutability":"mutable","name":"a","nameLocation":"667:1:28","nodeType":"VariableDeclaration","scope":6305,"src":"659:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6296,"mutability":"mutable","name":"b","nameLocation":"678:1:28","nodeType":"VariableDeclaration","scope":6305,"src":"670:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6295,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:28"},"returnParameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"high","nameLocation":"712:4:28","nodeType":"VariableDeclaration","scope":6305,"src":"704:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6298,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6301,"mutability":"mutable","name":"low","nameLocation":"726:3:28","nodeType":"VariableDeclaration","scope":6305,"src":"718:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6300,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:28"},"scope":7900,"src":"643:200:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6318,"nodeType":"Block","src":"1115:462:28","statements":[{"AST":{"nativeSrc":"1437:134:28","nodeType":"YulBlock","src":"1437:134:28","statements":[{"nativeSrc":"1451:30:28","nodeType":"YulVariableDeclaration","src":"1451:30:28","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:28","nodeType":"YulIdentifier","src":"1468:1:28"},{"name":"b","nativeSrc":"1471:1:28","nodeType":"YulIdentifier","src":"1471:1:28"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:28","nodeType":"YulLiteral","src":"1478:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:28","nodeType":"YulIdentifier","src":"1474:3:28"},"nativeSrc":"1474:6:28","nodeType":"YulFunctionCall","src":"1474:6:28"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:28","nodeType":"YulIdentifier","src":"1461:6:28"},"nativeSrc":"1461:20:28","nodeType":"YulFunctionCall","src":"1461:20:28"},"variables":[{"name":"mm","nativeSrc":"1455:2:28","nodeType":"YulTypedName","src":"1455:2:28","type":""}]},{"nativeSrc":"1494:16:28","nodeType":"YulAssignment","src":"1494:16:28","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:28","nodeType":"YulIdentifier","src":"1505:1:28"},{"name":"b","nativeSrc":"1508:1:28","nodeType":"YulIdentifier","src":"1508:1:28"}],"functionName":{"name":"mul","nativeSrc":"1501:3:28","nodeType":"YulIdentifier","src":"1501:3:28"},"nativeSrc":"1501:9:28","nodeType":"YulFunctionCall","src":"1501:9:28"},"variableNames":[{"name":"low","nativeSrc":"1494:3:28","nodeType":"YulIdentifier","src":"1494:3:28"}]},{"nativeSrc":"1523:38:28","nodeType":"YulAssignment","src":"1523:38:28","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:28","nodeType":"YulIdentifier","src":"1539:2:28"},{"name":"low","nativeSrc":"1543:3:28","nodeType":"YulIdentifier","src":"1543:3:28"}],"functionName":{"name":"sub","nativeSrc":"1535:3:28","nodeType":"YulIdentifier","src":"1535:3:28"},"nativeSrc":"1535:12:28","nodeType":"YulFunctionCall","src":"1535:12:28"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:28","nodeType":"YulIdentifier","src":"1552:2:28"},{"name":"low","nativeSrc":"1556:3:28","nodeType":"YulIdentifier","src":"1556:3:28"}],"functionName":{"name":"lt","nativeSrc":"1549:2:28","nodeType":"YulIdentifier","src":"1549:2:28"},"nativeSrc":"1549:11:28","nodeType":"YulFunctionCall","src":"1549:11:28"}],"functionName":{"name":"sub","nativeSrc":"1531:3:28","nodeType":"YulIdentifier","src":"1531:3:28"},"nativeSrc":"1531:30:28","nodeType":"YulFunctionCall","src":"1531:30:28"},"variableNames":[{"name":"high","nativeSrc":"1523:4:28","nodeType":"YulIdentifier","src":"1523:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6308,"isOffset":false,"isSlot":false,"src":"1468:1:28","valueSize":1},{"declaration":6308,"isOffset":false,"isSlot":false,"src":"1505:1:28","valueSize":1},{"declaration":6310,"isOffset":false,"isSlot":false,"src":"1471:1:28","valueSize":1},{"declaration":6310,"isOffset":false,"isSlot":false,"src":"1508:1:28","valueSize":1},{"declaration":6313,"isOffset":false,"isSlot":false,"src":"1523:4:28","valueSize":1},{"declaration":6315,"isOffset":false,"isSlot":false,"src":"1494:3:28","valueSize":1},{"declaration":6315,"isOffset":false,"isSlot":false,"src":"1543:3:28","valueSize":1},{"declaration":6315,"isOffset":false,"isSlot":false,"src":"1556:3:28","valueSize":1}],"flags":["memory-safe"],"id":6317,"nodeType":"InlineAssembly","src":"1412:159:28"}]},"documentation":{"id":6306,"nodeType":"StructuredDocumentation","src":"849:173:28","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":6319,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:28","nodeType":"FunctionDefinition","parameters":{"id":6311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"a","nameLocation":"1051:1:28","nodeType":"VariableDeclaration","scope":6319,"src":"1043:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6310,"mutability":"mutable","name":"b","nameLocation":"1062:1:28","nodeType":"VariableDeclaration","scope":6319,"src":"1054:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:28"},"returnParameters":{"id":6316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6313,"mutability":"mutable","name":"high","nameLocation":"1096:4:28","nodeType":"VariableDeclaration","scope":6319,"src":"1088:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6315,"mutability":"mutable","name":"low","nameLocation":"1110:3:28","nodeType":"VariableDeclaration","scope":6319,"src":"1102:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:28"},"scope":7900,"src":"1027:550:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6353,"nodeType":"Block","src":"1784:149:28","statements":[{"id":6352,"nodeType":"UncheckedBlock","src":"1794:133:28","statements":[{"assignments":[6332],"declarations":[{"constant":false,"id":6332,"mutability":"mutable","name":"c","nameLocation":"1826:1:28","nodeType":"VariableDeclaration","scope":6352,"src":"1818:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6336,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"1830:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"1834:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:28"},{"expression":{"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6337,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"1849:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6338,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"1859:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"1864:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6342,"nodeType":"ExpressionStatement","src":"1849:16:28"},{"expression":{"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"1879:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6344,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"1888:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6347,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"1908:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6345,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"1892:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"1892:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6351,"nodeType":"ExpressionStatement","src":"1879:37:28"}]}]},"documentation":{"id":6320,"nodeType":"StructuredDocumentation","src":"1583:105:28","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":6354,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:28","nodeType":"FunctionDefinition","parameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"a","nameLocation":"1717:1:28","nodeType":"VariableDeclaration","scope":6354,"src":"1709:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6324,"mutability":"mutable","name":"b","nameLocation":"1728:1:28","nodeType":"VariableDeclaration","scope":6354,"src":"1720:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:28"},"returnParameters":{"id":6330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6327,"mutability":"mutable","name":"success","nameLocation":"1759:7:28","nodeType":"VariableDeclaration","scope":6354,"src":"1754:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6326,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6329,"mutability":"mutable","name":"result","nameLocation":"1776:6:28","nodeType":"VariableDeclaration","scope":6354,"src":"1768:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:28"},"scope":7900,"src":"1693:240:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6388,"nodeType":"Block","src":"2143:149:28","statements":[{"id":6387,"nodeType":"UncheckedBlock","src":"2153:133:28","statements":[{"assignments":[6367],"declarations":[{"constant":false,"id":6367,"mutability":"mutable","name":"c","nameLocation":"2185:1:28","nodeType":"VariableDeclaration","scope":6387,"src":"2177:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6371,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6368,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"2189:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6369,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"2193:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:28"},{"expression":{"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6372,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"2208:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6373,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"2218:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6374,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"2223:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6377,"nodeType":"ExpressionStatement","src":"2208:16:28"},{"expression":{"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"2238:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6379,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"2247:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6382,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"2267:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6380,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"2251:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"2251:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6386,"nodeType":"ExpressionStatement","src":"2238:37:28"}]}]},"documentation":{"id":6355,"nodeType":"StructuredDocumentation","src":"1939:108:28","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":6389,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:28","nodeType":"FunctionDefinition","parameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6357,"mutability":"mutable","name":"a","nameLocation":"2076:1:28","nodeType":"VariableDeclaration","scope":6389,"src":"2068:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6359,"mutability":"mutable","name":"b","nameLocation":"2087:1:28","nodeType":"VariableDeclaration","scope":6389,"src":"2079:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:28"},"returnParameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6362,"mutability":"mutable","name":"success","nameLocation":"2118:7:28","nodeType":"VariableDeclaration","scope":6389,"src":"2113:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6361,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6364,"mutability":"mutable","name":"result","nameLocation":"2135:6:28","nodeType":"VariableDeclaration","scope":6389,"src":"2127:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:28"},"scope":7900,"src":"2052:240:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6418,"nodeType":"Block","src":"2505:391:28","statements":[{"id":6417,"nodeType":"UncheckedBlock","src":"2515:375:28","statements":[{"assignments":[6402],"declarations":[{"constant":false,"id":6402,"mutability":"mutable","name":"c","nameLocation":"2547:1:28","nodeType":"VariableDeclaration","scope":6417,"src":"2539:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6406,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"2551:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6404,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"2555:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:28"},{"AST":{"nativeSrc":"2595:188:28","nodeType":"YulBlock","src":"2595:188:28","statements":[{"nativeSrc":"2727:42:28","nodeType":"YulAssignment","src":"2727:42:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:28","nodeType":"YulIdentifier","src":"2748:1:28"},{"name":"a","nativeSrc":"2751:1:28","nodeType":"YulIdentifier","src":"2751:1:28"}],"functionName":{"name":"div","nativeSrc":"2744:3:28","nodeType":"YulIdentifier","src":"2744:3:28"},"nativeSrc":"2744:9:28","nodeType":"YulFunctionCall","src":"2744:9:28"},{"name":"b","nativeSrc":"2755:1:28","nodeType":"YulIdentifier","src":"2755:1:28"}],"functionName":{"name":"eq","nativeSrc":"2741:2:28","nodeType":"YulIdentifier","src":"2741:2:28"},"nativeSrc":"2741:16:28","nodeType":"YulFunctionCall","src":"2741:16:28"},{"arguments":[{"name":"a","nativeSrc":"2766:1:28","nodeType":"YulIdentifier","src":"2766:1:28"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:28","nodeType":"YulIdentifier","src":"2759:6:28"},"nativeSrc":"2759:9:28","nodeType":"YulFunctionCall","src":"2759:9:28"}],"functionName":{"name":"or","nativeSrc":"2738:2:28","nodeType":"YulIdentifier","src":"2738:2:28"},"nativeSrc":"2738:31:28","nodeType":"YulFunctionCall","src":"2738:31:28"},"variableNames":[{"name":"success","nativeSrc":"2727:7:28","nodeType":"YulIdentifier","src":"2727:7:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6392,"isOffset":false,"isSlot":false,"src":"2751:1:28","valueSize":1},{"declaration":6392,"isOffset":false,"isSlot":false,"src":"2766:1:28","valueSize":1},{"declaration":6394,"isOffset":false,"isSlot":false,"src":"2755:1:28","valueSize":1},{"declaration":6402,"isOffset":false,"isSlot":false,"src":"2748:1:28","valueSize":1},{"declaration":6397,"isOffset":false,"isSlot":false,"src":"2727:7:28","valueSize":1}],"flags":["memory-safe"],"id":6407,"nodeType":"InlineAssembly","src":"2570:213:28"},{"expression":{"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"2842:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6409,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"2851:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6412,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"2871:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6410,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"2855:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"2855:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6416,"nodeType":"ExpressionStatement","src":"2842:37:28"}]}]},"documentation":{"id":6390,"nodeType":"StructuredDocumentation","src":"2298:111:28","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":6419,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:28","nodeType":"FunctionDefinition","parameters":{"id":6395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"a","nameLocation":"2438:1:28","nodeType":"VariableDeclaration","scope":6419,"src":"2430:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6394,"mutability":"mutable","name":"b","nameLocation":"2449:1:28","nodeType":"VariableDeclaration","scope":6419,"src":"2441:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:28"},"returnParameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6397,"mutability":"mutable","name":"success","nameLocation":"2480:7:28","nodeType":"VariableDeclaration","scope":6419,"src":"2475:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6396,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6399,"mutability":"mutable","name":"result","nameLocation":"2497:6:28","nodeType":"VariableDeclaration","scope":6419,"src":"2489:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:28"},"scope":7900,"src":"2414:482:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6439,"nodeType":"Block","src":"3111:231:28","statements":[{"id":6438,"nodeType":"UncheckedBlock","src":"3121:215:28","statements":[{"expression":{"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6431,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"3145:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6432,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"3155:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6436,"nodeType":"ExpressionStatement","src":"3145:15:28"},{"AST":{"nativeSrc":"3199:127:28","nodeType":"YulBlock","src":"3199:127:28","statements":[{"nativeSrc":"3293:19:28","nodeType":"YulAssignment","src":"3293:19:28","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:28","nodeType":"YulIdentifier","src":"3307:1:28"},{"name":"b","nativeSrc":"3310:1:28","nodeType":"YulIdentifier","src":"3310:1:28"}],"functionName":{"name":"div","nativeSrc":"3303:3:28","nodeType":"YulIdentifier","src":"3303:3:28"},"nativeSrc":"3303:9:28","nodeType":"YulFunctionCall","src":"3303:9:28"},"variableNames":[{"name":"result","nativeSrc":"3293:6:28","nodeType":"YulIdentifier","src":"3293:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6422,"isOffset":false,"isSlot":false,"src":"3307:1:28","valueSize":1},{"declaration":6424,"isOffset":false,"isSlot":false,"src":"3310:1:28","valueSize":1},{"declaration":6429,"isOffset":false,"isSlot":false,"src":"3293:6:28","valueSize":1}],"flags":["memory-safe"],"id":6437,"nodeType":"InlineAssembly","src":"3174:152:28"}]}]},"documentation":{"id":6420,"nodeType":"StructuredDocumentation","src":"2902:113:28","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":6440,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:28","nodeType":"FunctionDefinition","parameters":{"id":6425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6422,"mutability":"mutable","name":"a","nameLocation":"3044:1:28","nodeType":"VariableDeclaration","scope":6440,"src":"3036:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6421,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6424,"mutability":"mutable","name":"b","nameLocation":"3055:1:28","nodeType":"VariableDeclaration","scope":6440,"src":"3047:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6423,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:28"},"returnParameters":{"id":6430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"success","nameLocation":"3086:7:28","nodeType":"VariableDeclaration","scope":6440,"src":"3081:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6426,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6429,"mutability":"mutable","name":"result","nameLocation":"3103:6:28","nodeType":"VariableDeclaration","scope":6440,"src":"3095:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6428,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:28"},"scope":7900,"src":"3020:322:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6460,"nodeType":"Block","src":"3567:231:28","statements":[{"id":6459,"nodeType":"UncheckedBlock","src":"3577:215:28","statements":[{"expression":{"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6452,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"3601:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6453,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"3611:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6457,"nodeType":"ExpressionStatement","src":"3601:15:28"},{"AST":{"nativeSrc":"3655:127:28","nodeType":"YulBlock","src":"3655:127:28","statements":[{"nativeSrc":"3749:19:28","nodeType":"YulAssignment","src":"3749:19:28","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:28","nodeType":"YulIdentifier","src":"3763:1:28"},{"name":"b","nativeSrc":"3766:1:28","nodeType":"YulIdentifier","src":"3766:1:28"}],"functionName":{"name":"mod","nativeSrc":"3759:3:28","nodeType":"YulIdentifier","src":"3759:3:28"},"nativeSrc":"3759:9:28","nodeType":"YulFunctionCall","src":"3759:9:28"},"variableNames":[{"name":"result","nativeSrc":"3749:6:28","nodeType":"YulIdentifier","src":"3749:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6443,"isOffset":false,"isSlot":false,"src":"3763:1:28","valueSize":1},{"declaration":6445,"isOffset":false,"isSlot":false,"src":"3766:1:28","valueSize":1},{"declaration":6450,"isOffset":false,"isSlot":false,"src":"3749:6:28","valueSize":1}],"flags":["memory-safe"],"id":6458,"nodeType":"InlineAssembly","src":"3630:152:28"}]}]},"documentation":{"id":6441,"nodeType":"StructuredDocumentation","src":"3348:123:28","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":6461,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:28","nodeType":"FunctionDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6443,"mutability":"mutable","name":"a","nameLocation":"3500:1:28","nodeType":"VariableDeclaration","scope":6461,"src":"3492:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6442,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6445,"mutability":"mutable","name":"b","nameLocation":"3511:1:28","nodeType":"VariableDeclaration","scope":6461,"src":"3503:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6444,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:28"},"returnParameters":{"id":6451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"success","nameLocation":"3542:7:28","nodeType":"VariableDeclaration","scope":6461,"src":"3537:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6447,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6450,"mutability":"mutable","name":"result","nameLocation":"3559:6:28","nodeType":"VariableDeclaration","scope":6461,"src":"3551:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:28"},"scope":7900,"src":"3476:322:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6490,"nodeType":"Block","src":"3989:122:28","statements":[{"assignments":[6472,6474],"declarations":[{"constant":false,"id":6472,"mutability":"mutable","name":"success","nameLocation":"4005:7:28","nodeType":"VariableDeclaration","scope":6490,"src":"4000:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6471,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6474,"mutability":"mutable","name":"result","nameLocation":"4022:6:28","nodeType":"VariableDeclaration","scope":6490,"src":"4014:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6473,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6479,"initialValue":{"arguments":[{"id":6476,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"4039:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"4042:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6475,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"4032:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:28"},{"expression":{"arguments":[{"id":6481,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"4069:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"4078:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:28","memberName":"max","nodeType":"MemberAccess","src":"4086:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6480,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"4061:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6470,"id":6489,"nodeType":"Return","src":"4054:50:28"}]},"documentation":{"id":6462,"nodeType":"StructuredDocumentation","src":"3804:103:28","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6491,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:28","nodeType":"FunctionDefinition","parameters":{"id":6467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"a","nameLocation":"3943:1:28","nodeType":"VariableDeclaration","scope":6491,"src":"3935:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6463,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6466,"mutability":"mutable","name":"b","nameLocation":"3954:1:28","nodeType":"VariableDeclaration","scope":6491,"src":"3946:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:28"},"returnParameters":{"id":6470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6491,"src":"3980:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:28"},"scope":7900,"src":"3912:199:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6510,"nodeType":"Block","src":"4294:73:28","statements":[{"assignments":[null,6502],"declarations":[null,{"constant":false,"id":6502,"mutability":"mutable","name":"result","nameLocation":"4315:6:28","nodeType":"VariableDeclaration","scope":6510,"src":"4307:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6501,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6507,"initialValue":{"arguments":[{"id":6504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"4332:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"4335:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6503,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"4325:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:28"},{"expression":{"id":6508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"4354:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6500,"id":6509,"nodeType":"Return","src":"4347:13:28"}]},"documentation":{"id":6492,"nodeType":"StructuredDocumentation","src":"4117:95:28","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":6511,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:28","nodeType":"FunctionDefinition","parameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6494,"mutability":"mutable","name":"a","nameLocation":"4248:1:28","nodeType":"VariableDeclaration","scope":6511,"src":"4240:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6496,"mutability":"mutable","name":"b","nameLocation":"4259:1:28","nodeType":"VariableDeclaration","scope":6511,"src":"4251:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6495,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:28"},"returnParameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6511,"src":"4285:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6498,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:28"},"scope":7900,"src":"4217:150:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6540,"nodeType":"Block","src":"4564:122:28","statements":[{"assignments":[6522,6524],"declarations":[{"constant":false,"id":6522,"mutability":"mutable","name":"success","nameLocation":"4580:7:28","nodeType":"VariableDeclaration","scope":6540,"src":"4575:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6521,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6524,"mutability":"mutable","name":"result","nameLocation":"4597:6:28","nodeType":"VariableDeclaration","scope":6540,"src":"4589:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6523,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6529,"initialValue":{"arguments":[{"id":6526,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"4614:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6527,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"4617:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6525,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"4607:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:28"},{"expression":{"arguments":[{"id":6531,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"4644:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6532,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"4653:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6534,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6533,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:28","memberName":"max","nodeType":"MemberAccess","src":"4661:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6530,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"4636:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6520,"id":6539,"nodeType":"Return","src":"4629:50:28"}]},"documentation":{"id":6512,"nodeType":"StructuredDocumentation","src":"4373:109:28","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6541,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:28","nodeType":"FunctionDefinition","parameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6514,"mutability":"mutable","name":"a","nameLocation":"4518:1:28","nodeType":"VariableDeclaration","scope":6541,"src":"4510:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6516,"mutability":"mutable","name":"b","nameLocation":"4529:1:28","nodeType":"VariableDeclaration","scope":6541,"src":"4521:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6515,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:28"},"returnParameters":{"id":6520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6541,"src":"4555:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:28"},"scope":7900,"src":"4487:199:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6567,"nodeType":"Block","src":"5158:207:28","statements":[{"id":6566,"nodeType":"UncheckedBlock","src":"5168:191:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"5306:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6554,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"5312:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6555,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"5316:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6560,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"5337:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6558,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"5321:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"5321:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6552,"id":6565,"nodeType":"Return","src":"5299:49:28"}]}]},"documentation":{"id":6542,"nodeType":"StructuredDocumentation","src":"4692:374:28","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6568,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:28","nodeType":"FunctionDefinition","parameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6544,"mutability":"mutable","name":"condition","nameLocation":"5093:9:28","nodeType":"VariableDeclaration","scope":6568,"src":"5088:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6543,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6546,"mutability":"mutable","name":"a","nameLocation":"5112:1:28","nodeType":"VariableDeclaration","scope":6568,"src":"5104:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6548,"mutability":"mutable","name":"b","nameLocation":"5123:1:28","nodeType":"VariableDeclaration","scope":6568,"src":"5115:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6547,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:28"},"returnParameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6568,"src":"5149:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6550,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:28"},"scope":7900,"src":"5071:294:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6586,"nodeType":"Block","src":"5502:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"5527:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6580,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"5531:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"5534:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6583,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"5537:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6578,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"5519:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6577,"id":6585,"nodeType":"Return","src":"5512:27:28"}]},"documentation":{"id":6569,"nodeType":"StructuredDocumentation","src":"5371:59:28","text":" @dev Returns the largest of two numbers."},"id":6587,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:28","nodeType":"FunctionDefinition","parameters":{"id":6574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6571,"mutability":"mutable","name":"a","nameLocation":"5456:1:28","nodeType":"VariableDeclaration","scope":6587,"src":"5448:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6573,"mutability":"mutable","name":"b","nameLocation":"5467:1:28","nodeType":"VariableDeclaration","scope":6587,"src":"5459:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6572,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:28"},"returnParameters":{"id":6577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6587,"src":"5493:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6575,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:28"},"scope":7900,"src":"5435:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6605,"nodeType":"Block","src":"5684:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6598,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6590,"src":"5709:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6599,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"5713:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6601,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6590,"src":"5716:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6602,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"5719:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6597,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"5701:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6596,"id":6604,"nodeType":"Return","src":"5694:27:28"}]},"documentation":{"id":6588,"nodeType":"StructuredDocumentation","src":"5552:60:28","text":" @dev Returns the smallest of two numbers."},"id":6606,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:28","nodeType":"FunctionDefinition","parameters":{"id":6593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6590,"mutability":"mutable","name":"a","nameLocation":"5638:1:28","nodeType":"VariableDeclaration","scope":6606,"src":"5630:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6589,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6592,"mutability":"mutable","name":"b","nameLocation":"5649:1:28","nodeType":"VariableDeclaration","scope":6606,"src":"5641:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6591,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:28"},"returnParameters":{"id":6596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6606,"src":"5675:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6594,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:28"},"scope":7900,"src":"5617:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6628,"nodeType":"Block","src":"5912:82:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"5967:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6617,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"5971:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"5977:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6621,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"5981:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6615,"id":6627,"nodeType":"Return","src":"5959:28:28"}]},"documentation":{"id":6607,"nodeType":"StructuredDocumentation","src":"5734:102:28","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":6629,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:28","nodeType":"FunctionDefinition","parameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6609,"mutability":"mutable","name":"a","nameLocation":"5866:1:28","nodeType":"VariableDeclaration","scope":6629,"src":"5858:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6608,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6611,"mutability":"mutable","name":"b","nameLocation":"5877:1:28","nodeType":"VariableDeclaration","scope":6629,"src":"5869:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6610,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:28"},"returnParameters":{"id":6615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6629,"src":"5903:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6613,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:28"},"scope":7900,"src":"5841:153:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6669,"nodeType":"Block","src":"6286:633:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6639,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"6300:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6650,"nodeType":"IfStatement","src":"6296:150:28","trueBody":{"id":6649,"nodeType":"Block","src":"6308:138:28","statements":[{"expression":{"arguments":[{"expression":{"id":6645,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"6412:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4518_$","typeString":"type(library Panic)"}},"id":6646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4485,"src":"6412:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6642,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"6400:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4518_$","typeString":"type(library Panic)"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4517,"src":"6400:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6648,"nodeType":"ExpressionStatement","src":"6400:35:28"}]}},{"id":6668,"nodeType":"UncheckedBlock","src":"6829:84:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6653,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"6876:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6651,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"6860:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"6860:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"6887:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6661,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"6896:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6638,"id":6667,"nodeType":"Return","src":"6853:49:28"}]}]},"documentation":{"id":6630,"nodeType":"StructuredDocumentation","src":"6000:210:28","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":6670,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:28","nodeType":"FunctionDefinition","parameters":{"id":6635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6632,"mutability":"mutable","name":"a","nameLocation":"6240:1:28","nodeType":"VariableDeclaration","scope":6670,"src":"6232:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6631,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6634,"mutability":"mutable","name":"b","nameLocation":"6251:1:28","nodeType":"VariableDeclaration","scope":6670,"src":"6243:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6633,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:28"},"returnParameters":{"id":6638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6670,"src":"6277:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6636,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:28"},"scope":7900,"src":"6215:704:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6805,"nodeType":"Block","src":"7340:3585:28","statements":[{"id":6804,"nodeType":"UncheckedBlock","src":"7350:3569:28","statements":[{"assignments":[6683,6685],"declarations":[{"constant":false,"id":6683,"mutability":"mutable","name":"high","nameLocation":"7383:4:28","nodeType":"VariableDeclaration","scope":6804,"src":"7375:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6682,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6685,"mutability":"mutable","name":"low","nameLocation":"7397:3:28","nodeType":"VariableDeclaration","scope":6804,"src":"7389:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6684,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6690,"initialValue":{"arguments":[{"id":6687,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"7411:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6688,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"7414:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6686,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"7404:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"7498:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6699,"nodeType":"IfStatement","src":"7494:365:28","trueBody":{"id":6698,"nodeType":"Block","src":"7509:350:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6694,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"7827:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6695,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"7833:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6681,"id":6697,"nodeType":"Return","src":"7820:24:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6700,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"7969:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6701,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"7984:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6718,"nodeType":"IfStatement","src":"7965:142:28","trueBody":{"id":6717,"nodeType":"Block","src":"7990:117:28","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6707,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"8028:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6710,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"8046:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4518_$","typeString":"type(library Panic)"}},"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4485,"src":"8046:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6712,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"8070:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4518_$","typeString":"type(library Panic)"}},"id":6713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4481,"src":"8070:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6706,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"8020:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6703,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"8008:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4518_$","typeString":"type(library Panic)"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4517,"src":"8008:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6716,"nodeType":"ExpressionStatement","src":"8008:84:28"}]}},{"assignments":[6720],"declarations":[{"constant":false,"id":6720,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:28","nodeType":"VariableDeclaration","scope":6804,"src":"8359:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6719,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6721,"nodeType":"VariableDeclarationStatement","src":"8359:17:28"},{"AST":{"nativeSrc":"8415:283:28","nodeType":"YulBlock","src":"8415:283:28","statements":[{"nativeSrc":"8484:38:28","nodeType":"YulAssignment","src":"8484:38:28","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:28","nodeType":"YulIdentifier","src":"8504:1:28"},{"name":"y","nativeSrc":"8507:1:28","nodeType":"YulIdentifier","src":"8507:1:28"},{"name":"denominator","nativeSrc":"8510:11:28","nodeType":"YulIdentifier","src":"8510:11:28"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:28","nodeType":"YulIdentifier","src":"8497:6:28"},"nativeSrc":"8497:25:28","nodeType":"YulFunctionCall","src":"8497:25:28"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:28","nodeType":"YulIdentifier","src":"8484:9:28"}]},{"nativeSrc":"8604:37:28","nodeType":"YulAssignment","src":"8604:37:28","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:28","nodeType":"YulIdentifier","src":"8616:4:28"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:28","nodeType":"YulIdentifier","src":"8625:9:28"},{"name":"low","nativeSrc":"8636:3:28","nodeType":"YulIdentifier","src":"8636:3:28"}],"functionName":{"name":"gt","nativeSrc":"8622:2:28","nodeType":"YulIdentifier","src":"8622:2:28"},"nativeSrc":"8622:18:28","nodeType":"YulFunctionCall","src":"8622:18:28"}],"functionName":{"name":"sub","nativeSrc":"8612:3:28","nodeType":"YulIdentifier","src":"8612:3:28"},"nativeSrc":"8612:29:28","nodeType":"YulFunctionCall","src":"8612:29:28"},"variableNames":[{"name":"high","nativeSrc":"8604:4:28","nodeType":"YulIdentifier","src":"8604:4:28"}]},{"nativeSrc":"8658:26:28","nodeType":"YulAssignment","src":"8658:26:28","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:28","nodeType":"YulIdentifier","src":"8669:3:28"},{"name":"remainder","nativeSrc":"8674:9:28","nodeType":"YulIdentifier","src":"8674:9:28"}],"functionName":{"name":"sub","nativeSrc":"8665:3:28","nodeType":"YulIdentifier","src":"8665:3:28"},"nativeSrc":"8665:19:28","nodeType":"YulFunctionCall","src":"8665:19:28"},"variableNames":[{"name":"low","nativeSrc":"8658:3:28","nodeType":"YulIdentifier","src":"8658:3:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6677,"isOffset":false,"isSlot":false,"src":"8510:11:28","valueSize":1},{"declaration":6683,"isOffset":false,"isSlot":false,"src":"8604:4:28","valueSize":1},{"declaration":6683,"isOffset":false,"isSlot":false,"src":"8616:4:28","valueSize":1},{"declaration":6685,"isOffset":false,"isSlot":false,"src":"8636:3:28","valueSize":1},{"declaration":6685,"isOffset":false,"isSlot":false,"src":"8658:3:28","valueSize":1},{"declaration":6685,"isOffset":false,"isSlot":false,"src":"8669:3:28","valueSize":1},{"declaration":6720,"isOffset":false,"isSlot":false,"src":"8484:9:28","valueSize":1},{"declaration":6720,"isOffset":false,"isSlot":false,"src":"8625:9:28","valueSize":1},{"declaration":6720,"isOffset":false,"isSlot":false,"src":"8674:9:28","valueSize":1},{"declaration":6673,"isOffset":false,"isSlot":false,"src":"8504:1:28","valueSize":1},{"declaration":6675,"isOffset":false,"isSlot":false,"src":"8507:1:28","valueSize":1}],"flags":["memory-safe"],"id":6722,"nodeType":"InlineAssembly","src":"8390:308:28"},{"assignments":[6724],"declarations":[{"constant":false,"id":6724,"mutability":"mutable","name":"twos","nameLocation":"8910:4:28","nodeType":"VariableDeclaration","scope":6804,"src":"8902:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6723,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6731,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6725,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"8917:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":6726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6727,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"8936:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:28"},{"AST":{"nativeSrc":"8987:359:28","nodeType":"YulBlock","src":"8987:359:28","statements":[{"nativeSrc":"9052:37:28","nodeType":"YulAssignment","src":"9052:37:28","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:28","nodeType":"YulIdentifier","src":"9071:11:28"},{"name":"twos","nativeSrc":"9084:4:28","nodeType":"YulIdentifier","src":"9084:4:28"}],"functionName":{"name":"div","nativeSrc":"9067:3:28","nodeType":"YulIdentifier","src":"9067:3:28"},"nativeSrc":"9067:22:28","nodeType":"YulFunctionCall","src":"9067:22:28"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:28","nodeType":"YulIdentifier","src":"9052:11:28"}]},{"nativeSrc":"9153:21:28","nodeType":"YulAssignment","src":"9153:21:28","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:28","nodeType":"YulIdentifier","src":"9164:3:28"},{"name":"twos","nativeSrc":"9169:4:28","nodeType":"YulIdentifier","src":"9169:4:28"}],"functionName":{"name":"div","nativeSrc":"9160:3:28","nodeType":"YulIdentifier","src":"9160:3:28"},"nativeSrc":"9160:14:28","nodeType":"YulFunctionCall","src":"9160:14:28"},"variableNames":[{"name":"low","nativeSrc":"9153:3:28","nodeType":"YulIdentifier","src":"9153:3:28"}]},{"nativeSrc":"9293:39:28","nodeType":"YulAssignment","src":"9293:39:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:28","nodeType":"YulLiteral","src":"9313:1:28","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:28","nodeType":"YulIdentifier","src":"9316:4:28"}],"functionName":{"name":"sub","nativeSrc":"9309:3:28","nodeType":"YulIdentifier","src":"9309:3:28"},"nativeSrc":"9309:12:28","nodeType":"YulFunctionCall","src":"9309:12:28"},{"name":"twos","nativeSrc":"9323:4:28","nodeType":"YulIdentifier","src":"9323:4:28"}],"functionName":{"name":"div","nativeSrc":"9305:3:28","nodeType":"YulIdentifier","src":"9305:3:28"},"nativeSrc":"9305:23:28","nodeType":"YulFunctionCall","src":"9305:23:28"},{"kind":"number","nativeSrc":"9330:1:28","nodeType":"YulLiteral","src":"9330:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:28","nodeType":"YulIdentifier","src":"9301:3:28"},"nativeSrc":"9301:31:28","nodeType":"YulFunctionCall","src":"9301:31:28"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:28","nodeType":"YulIdentifier","src":"9293:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6677,"isOffset":false,"isSlot":false,"src":"9052:11:28","valueSize":1},{"declaration":6677,"isOffset":false,"isSlot":false,"src":"9071:11:28","valueSize":1},{"declaration":6685,"isOffset":false,"isSlot":false,"src":"9153:3:28","valueSize":1},{"declaration":6685,"isOffset":false,"isSlot":false,"src":"9164:3:28","valueSize":1},{"declaration":6724,"isOffset":false,"isSlot":false,"src":"9084:4:28","valueSize":1},{"declaration":6724,"isOffset":false,"isSlot":false,"src":"9169:4:28","valueSize":1},{"declaration":6724,"isOffset":false,"isSlot":false,"src":"9293:4:28","valueSize":1},{"declaration":6724,"isOffset":false,"isSlot":false,"src":"9316:4:28","valueSize":1},{"declaration":6724,"isOffset":false,"isSlot":false,"src":"9323:4:28","valueSize":1}],"flags":["memory-safe"],"id":6732,"nodeType":"InlineAssembly","src":"8962:384:28"},{"expression":{"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6733,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"9409:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6734,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"9416:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6735,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"9423:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6738,"nodeType":"ExpressionStatement","src":"9409:18:28"},{"assignments":[6740],"declarations":[{"constant":false,"id":6740,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:28","nodeType":"VariableDeclaration","scope":6804,"src":"9762:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6739,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6747,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6742,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"9785:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:28"},{"expression":{"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6748,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10018:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6750,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"10033:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6751,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10047:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6755,"nodeType":"ExpressionStatement","src":"10018:36:28"},{"expression":{"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6756,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10088:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6758,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"10103:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6759,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10117:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6763,"nodeType":"ExpressionStatement","src":"10088:36:28"},{"expression":{"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6764,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10160:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6766,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"10175:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6767,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10189:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6771,"nodeType":"ExpressionStatement","src":"10160:36:28"},{"expression":{"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6772,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10231:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6774,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"10246:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6775,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10260:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6779,"nodeType":"ExpressionStatement","src":"10231:36:28"},{"expression":{"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6780,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10304:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6782,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"10319:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6783,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10333:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6787,"nodeType":"ExpressionStatement","src":"10304:36:28"},{"expression":{"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6788,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10378:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6790,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"10393:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6791,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10407:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6795,"nodeType":"ExpressionStatement","src":"10378:36:28"},{"expression":{"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"10859:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6797,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"10868:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6798,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"10874:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6801,"nodeType":"ExpressionStatement","src":"10859:22:28"},{"expression":{"id":6802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"10902:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6681,"id":6803,"nodeType":"Return","src":"10895:13:28"}]}]},"documentation":{"id":6671,"nodeType":"StructuredDocumentation","src":"6925:312:28","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":6806,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:28","nodeType":"FunctionDefinition","parameters":{"id":6678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"x","nameLocation":"7266:1:28","nodeType":"VariableDeclaration","scope":6806,"src":"7258:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6672,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6675,"mutability":"mutable","name":"y","nameLocation":"7277:1:28","nodeType":"VariableDeclaration","scope":6806,"src":"7269:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6674,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6677,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:28","nodeType":"VariableDeclaration","scope":6806,"src":"7280:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6676,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:28"},"returnParameters":{"id":6681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6680,"mutability":"mutable","name":"result","nameLocation":"7332:6:28","nodeType":"VariableDeclaration","scope":6806,"src":"7324:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6679,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:28"},"scope":7900,"src":"7242:3683:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6842,"nodeType":"Block","src":"11164:128:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6822,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"11188:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6823,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"11191:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6824,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"11194:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6821,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6806,6843],"referencedDeclaration":6806,"src":"11181:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6829,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"11242:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}],"id":6828,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"11225:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6291_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6832,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"11262:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6833,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"11265:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6834,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"11268:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6831,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6826,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"11209:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"11209:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6820,"id":6841,"nodeType":"Return","src":"11174:111:28"}]},"documentation":{"id":6807,"nodeType":"StructuredDocumentation","src":"10931:118:28","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6843,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:28","nodeType":"FunctionDefinition","parameters":{"id":6817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6809,"mutability":"mutable","name":"x","nameLocation":"11078:1:28","nodeType":"VariableDeclaration","scope":6843,"src":"11070:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6808,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6811,"mutability":"mutable","name":"y","nameLocation":"11089:1:28","nodeType":"VariableDeclaration","scope":6843,"src":"11081:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6810,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6813,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:28","nodeType":"VariableDeclaration","scope":6843,"src":"11092:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6812,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6816,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:28","nodeType":"VariableDeclaration","scope":6843,"src":"11113:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"},"typeName":{"id":6815,"nodeType":"UserDefinedTypeName","pathNode":{"id":6814,"name":"Rounding","nameLocations":["11113:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6291,"src":"11113:8:28"},"referencedDeclaration":6291,"src":"11113:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:28"},"returnParameters":{"id":6820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6843,"src":"11155:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6818,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:28"},"scope":7900,"src":"11054:238:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6892,"nodeType":"Block","src":"11500:245:28","statements":[{"id":6891,"nodeType":"UncheckedBlock","src":"11510:229:28","statements":[{"assignments":[6856,6858],"declarations":[{"constant":false,"id":6856,"mutability":"mutable","name":"high","nameLocation":"11543:4:28","nodeType":"VariableDeclaration","scope":6891,"src":"11535:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6855,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6858,"mutability":"mutable","name":"low","nameLocation":"11557:3:28","nodeType":"VariableDeclaration","scope":6891,"src":"11549:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6857,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6863,"initialValue":{"arguments":[{"id":6860,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"11571:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6861,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"11574:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6859,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"11564:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6864,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"11594:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6866,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"11607:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6877,"nodeType":"IfStatement","src":"11590:86:28","trueBody":{"id":6876,"nodeType":"Block","src":"11610:66:28","statements":[{"expression":{"arguments":[{"expression":{"id":6872,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"11640:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4518_$","typeString":"type(library Panic)"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4481,"src":"11640:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6869,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"11628:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4518_$","typeString":"type(library Panic)"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4517,"src":"11628:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6875,"nodeType":"ExpressionStatement","src":"11628:33:28"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6878,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"11697:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":6879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6880,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"11712:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":6882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6885,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"11719:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6886,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"11726:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6854,"id":6890,"nodeType":"Return","src":"11689:39:28"}]}]},"documentation":{"id":6844,"nodeType":"StructuredDocumentation","src":"11298:111:28","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":6893,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:28","nodeType":"FunctionDefinition","parameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6846,"mutability":"mutable","name":"x","nameLocation":"11438:1:28","nodeType":"VariableDeclaration","scope":6893,"src":"11430:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6845,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6848,"mutability":"mutable","name":"y","nameLocation":"11449:1:28","nodeType":"VariableDeclaration","scope":6893,"src":"11441:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6850,"mutability":"mutable","name":"n","nameLocation":"11458:1:28","nodeType":"VariableDeclaration","scope":6893,"src":"11452:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6849,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:28"},"returnParameters":{"id":6854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6853,"mutability":"mutable","name":"result","nameLocation":"11492:6:28","nodeType":"VariableDeclaration","scope":6893,"src":"11484:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6852,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:28"},"scope":7900,"src":"11414:331:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6931,"nodeType":"Block","src":"11963:113:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6909,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"11987:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6910,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"11990:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6911,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"11993:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6908,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[6893,6932],"referencedDeclaration":6893,"src":"11980:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6916,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"12031:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}],"id":6915,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"12014:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6291_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6919,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"12051:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6920,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"12054:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6922,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"12062:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6918,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6913,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"11998:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"11998:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6907,"id":6930,"nodeType":"Return","src":"11973:96:28"}]},"documentation":{"id":6894,"nodeType":"StructuredDocumentation","src":"11751:109:28","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":6932,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:28","nodeType":"FunctionDefinition","parameters":{"id":6904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6896,"mutability":"mutable","name":"x","nameLocation":"11889:1:28","nodeType":"VariableDeclaration","scope":6932,"src":"11881:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6895,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6898,"mutability":"mutable","name":"y","nameLocation":"11900:1:28","nodeType":"VariableDeclaration","scope":6932,"src":"11892:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6897,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6900,"mutability":"mutable","name":"n","nameLocation":"11909:1:28","nodeType":"VariableDeclaration","scope":6932,"src":"11903:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6899,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6903,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:28","nodeType":"VariableDeclaration","scope":6932,"src":"11912:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"},"typeName":{"id":6902,"nodeType":"UserDefinedTypeName","pathNode":{"id":6901,"name":"Rounding","nameLocations":["11912:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6291,"src":"11912:8:28"},"referencedDeclaration":6291,"src":"11912:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:28"},"returnParameters":{"id":6907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6932,"src":"11954:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6905,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:28"},"scope":7900,"src":"11865:211:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7028,"nodeType":"Block","src":"12710:1849:28","statements":[{"id":7027,"nodeType":"UncheckedBlock","src":"12720:1833:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6942,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"12748:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6947,"nodeType":"IfStatement","src":"12744:20:28","trueBody":{"expression":{"hexValue":"30","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6941,"id":6946,"nodeType":"Return","src":"12756:8:28"}},{"assignments":[6949],"declarations":[{"constant":false,"id":6949,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:28","nodeType":"VariableDeclaration","scope":7027,"src":"13235:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6948,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6953,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"13255:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6951,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"13259:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:28"},{"assignments":[6955],"declarations":[{"constant":false,"id":6955,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:28","nodeType":"VariableDeclaration","scope":7027,"src":"13274:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6954,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6957,"initialValue":{"id":6956,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"13288:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:28"},{"assignments":[6959],"declarations":[{"constant":false,"id":6959,"mutability":"mutable","name":"x","nameLocation":"13432:1:28","nodeType":"VariableDeclaration","scope":7027,"src":"13425:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6958,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6961,"initialValue":{"hexValue":"30","id":6960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:28"},{"assignments":[6963],"declarations":[{"constant":false,"id":6963,"mutability":"mutable","name":"y","nameLocation":"13458:1:28","nodeType":"VariableDeclaration","scope":7027,"src":"13451:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6962,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6965,"initialValue":{"hexValue":"31","id":6964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:28"},{"body":{"id":7002,"nodeType":"Block","src":"13501:882:28","statements":[{"assignments":[6970],"declarations":[{"constant":false,"id":6970,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:28","nodeType":"VariableDeclaration","scope":7002,"src":"13519:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6969,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6974,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"13538:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6972,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"13544:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:28"},{"expression":{"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6975,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"13573:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6976,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"13578:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6977,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6978,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"13678:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6979,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"13923:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6980,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"13929:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6981,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"13941:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6986,"nodeType":"ExpressionStatement","src":"13572:395:28"},{"expression":{"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6987,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"13987:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6988,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"13990:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6989,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6990,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"14072:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6991,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"14326:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6992,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"14330:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6995,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"14341:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6993,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:28","typeDescriptions":{}}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7001,"nodeType":"ExpressionStatement","src":"13986:382:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6966,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"13485:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7003,"nodeType":"WhileStatement","src":"13478:905:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7004,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"14401:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":7005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7009,"nodeType":"IfStatement","src":"14397:22:28","trueBody":{"expression":{"hexValue":"30","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6941,"id":7008,"nodeType":"Return","src":"14411:8:28"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7011,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"14470:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7014,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"14477:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:28","subExpression":{"id":7017,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"14490:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7015,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:28","typeDescriptions":{}}},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7023,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"14502:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7021,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:28","typeDescriptions":{}}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7010,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"14462:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6941,"id":7026,"nodeType":"Return","src":"14455:50:28"}]}]},"documentation":{"id":6933,"nodeType":"StructuredDocumentation","src":"12082:553:28","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":7029,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:28","nodeType":"FunctionDefinition","parameters":{"id":6938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6935,"mutability":"mutable","name":"a","nameLocation":"12664:1:28","nodeType":"VariableDeclaration","scope":7029,"src":"12656:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6934,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6937,"mutability":"mutable","name":"n","nameLocation":"12675:1:28","nodeType":"VariableDeclaration","scope":7029,"src":"12667:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6936,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:28"},"returnParameters":{"id":6941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7029,"src":"12701:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6939,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:28"},"scope":7900,"src":"12640:1919:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7049,"nodeType":"Block","src":"15159:82:28","statements":[{"id":7048,"nodeType":"UncheckedBlock","src":"15169:66:28","statements":[{"expression":{"arguments":[{"id":7041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"15212:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7042,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"15215:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":7043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7045,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"15222:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7039,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"15200:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7900_$","typeString":"type(library Math)"}},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:28","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":7086,"src":"15200:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7038,"id":7047,"nodeType":"Return","src":"15193:31:28"}]}]},"documentation":{"id":7030,"nodeType":"StructuredDocumentation","src":"14565:514:28","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":7050,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:28","nodeType":"FunctionDefinition","parameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7032,"mutability":"mutable","name":"a","nameLocation":"15113:1:28","nodeType":"VariableDeclaration","scope":7050,"src":"15105:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7031,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7034,"mutability":"mutable","name":"p","nameLocation":"15124:1:28","nodeType":"VariableDeclaration","scope":7050,"src":"15116:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7033,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:28"},"returnParameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7050,"src":"15150:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7036,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:28"},"scope":7900,"src":"15084:157:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7085,"nodeType":"Block","src":"16011:174:28","statements":[{"assignments":[7063,7065],"declarations":[{"constant":false,"id":7063,"mutability":"mutable","name":"success","nameLocation":"16027:7:28","nodeType":"VariableDeclaration","scope":7085,"src":"16022:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7062,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7065,"mutability":"mutable","name":"result","nameLocation":"16044:6:28","nodeType":"VariableDeclaration","scope":7085,"src":"16036:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7064,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7071,"initialValue":{"arguments":[{"id":7067,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"16064:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7068,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"16067:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7069,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"16070:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7066,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[7110,7192],"referencedDeclaration":7110,"src":"16054:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:28"},{"condition":{"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:28","subExpression":{"id":7072,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"16087:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7082,"nodeType":"IfStatement","src":"16082:74:28","trueBody":{"id":7081,"nodeType":"Block","src":"16096:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":7077,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"16122:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4518_$","typeString":"type(library Panic)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4485,"src":"16122:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7074,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"16110:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4518_$","typeString":"type(library Panic)"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4517,"src":"16110:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7080,"nodeType":"ExpressionStatement","src":"16110:35:28"}]}},{"expression":{"id":7083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"16172:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7061,"id":7084,"nodeType":"Return","src":"16165:13:28"}]},"documentation":{"id":7051,"nodeType":"StructuredDocumentation","src":"15247:678:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":7086,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:28","nodeType":"FunctionDefinition","parameters":{"id":7058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7053,"mutability":"mutable","name":"b","nameLocation":"15954:1:28","nodeType":"VariableDeclaration","scope":7086,"src":"15946:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7052,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7055,"mutability":"mutable","name":"e","nameLocation":"15965:1:28","nodeType":"VariableDeclaration","scope":7086,"src":"15957:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7054,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7057,"mutability":"mutable","name":"m","nameLocation":"15976:1:28","nodeType":"VariableDeclaration","scope":7086,"src":"15968:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7056,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:28"},"returnParameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7086,"src":"16002:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7059,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:28"},"scope":7900,"src":"15930:255:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7109,"nodeType":"Block","src":"17039:1493:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7100,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"17053:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7107,"nodeType":"IfStatement","src":"17049:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":7099,"id":7106,"nodeType":"Return","src":"17061:17:28"}},{"AST":{"nativeSrc":"17113:1413:28","nodeType":"YulBlock","src":"17113:1413:28","statements":[{"nativeSrc":"17127:22:28","nodeType":"YulVariableDeclaration","src":"17127:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:28","nodeType":"YulLiteral","src":"17144:4:28","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:28","nodeType":"YulIdentifier","src":"17138:5:28"},"nativeSrc":"17138:11:28","nodeType":"YulFunctionCall","src":"17138:11:28"},"variables":[{"name":"ptr","nativeSrc":"17131:3:28","nodeType":"YulTypedName","src":"17131:3:28","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:28","nodeType":"YulIdentifier","src":"18057:3:28"},{"kind":"number","nativeSrc":"18062:4:28","nodeType":"YulLiteral","src":"18062:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:28","nodeType":"YulIdentifier","src":"18050:6:28"},"nativeSrc":"18050:17:28","nodeType":"YulFunctionCall","src":"18050:17:28"},"nativeSrc":"18050:17:28","nodeType":"YulExpressionStatement","src":"18050:17:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:28","nodeType":"YulIdentifier","src":"18091:3:28"},{"kind":"number","nativeSrc":"18096:4:28","nodeType":"YulLiteral","src":"18096:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:28","nodeType":"YulIdentifier","src":"18087:3:28"},"nativeSrc":"18087:14:28","nodeType":"YulFunctionCall","src":"18087:14:28"},{"kind":"number","nativeSrc":"18103:4:28","nodeType":"YulLiteral","src":"18103:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:28","nodeType":"YulIdentifier","src":"18080:6:28"},"nativeSrc":"18080:28:28","nodeType":"YulFunctionCall","src":"18080:28:28"},"nativeSrc":"18080:28:28","nodeType":"YulExpressionStatement","src":"18080:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:28","nodeType":"YulIdentifier","src":"18132:3:28"},{"kind":"number","nativeSrc":"18137:4:28","nodeType":"YulLiteral","src":"18137:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:28","nodeType":"YulIdentifier","src":"18128:3:28"},"nativeSrc":"18128:14:28","nodeType":"YulFunctionCall","src":"18128:14:28"},{"kind":"number","nativeSrc":"18144:4:28","nodeType":"YulLiteral","src":"18144:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:28","nodeType":"YulIdentifier","src":"18121:6:28"},"nativeSrc":"18121:28:28","nodeType":"YulFunctionCall","src":"18121:28:28"},"nativeSrc":"18121:28:28","nodeType":"YulExpressionStatement","src":"18121:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:28","nodeType":"YulIdentifier","src":"18173:3:28"},{"kind":"number","nativeSrc":"18178:4:28","nodeType":"YulLiteral","src":"18178:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:28","nodeType":"YulIdentifier","src":"18169:3:28"},"nativeSrc":"18169:14:28","nodeType":"YulFunctionCall","src":"18169:14:28"},{"name":"b","nativeSrc":"18185:1:28","nodeType":"YulIdentifier","src":"18185:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:28","nodeType":"YulIdentifier","src":"18162:6:28"},"nativeSrc":"18162:25:28","nodeType":"YulFunctionCall","src":"18162:25:28"},"nativeSrc":"18162:25:28","nodeType":"YulExpressionStatement","src":"18162:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:28","nodeType":"YulIdentifier","src":"18211:3:28"},{"kind":"number","nativeSrc":"18216:4:28","nodeType":"YulLiteral","src":"18216:4:28","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:28","nodeType":"YulIdentifier","src":"18207:3:28"},"nativeSrc":"18207:14:28","nodeType":"YulFunctionCall","src":"18207:14:28"},{"name":"e","nativeSrc":"18223:1:28","nodeType":"YulIdentifier","src":"18223:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:28","nodeType":"YulIdentifier","src":"18200:6:28"},"nativeSrc":"18200:25:28","nodeType":"YulFunctionCall","src":"18200:25:28"},"nativeSrc":"18200:25:28","nodeType":"YulExpressionStatement","src":"18200:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:28","nodeType":"YulIdentifier","src":"18249:3:28"},{"kind":"number","nativeSrc":"18254:4:28","nodeType":"YulLiteral","src":"18254:4:28","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:28","nodeType":"YulIdentifier","src":"18245:3:28"},"nativeSrc":"18245:14:28","nodeType":"YulFunctionCall","src":"18245:14:28"},{"name":"m","nativeSrc":"18261:1:28","nodeType":"YulIdentifier","src":"18261:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:28","nodeType":"YulIdentifier","src":"18238:6:28"},"nativeSrc":"18238:25:28","nodeType":"YulFunctionCall","src":"18238:25:28"},"nativeSrc":"18238:25:28","nodeType":"YulExpressionStatement","src":"18238:25:28"},{"nativeSrc":"18425:57:28","nodeType":"YulAssignment","src":"18425:57:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:28","nodeType":"YulIdentifier","src":"18447:3:28"},"nativeSrc":"18447:5:28","nodeType":"YulFunctionCall","src":"18447:5:28"},{"kind":"number","nativeSrc":"18454:4:28","nodeType":"YulLiteral","src":"18454:4:28","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:28","nodeType":"YulIdentifier","src":"18460:3:28"},{"kind":"number","nativeSrc":"18465:4:28","nodeType":"YulLiteral","src":"18465:4:28","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:28","nodeType":"YulLiteral","src":"18471:4:28","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:28","nodeType":"YulLiteral","src":"18477:4:28","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:28","nodeType":"YulIdentifier","src":"18436:10:28"},"nativeSrc":"18436:46:28","nodeType":"YulFunctionCall","src":"18436:46:28"},"variableNames":[{"name":"success","nativeSrc":"18425:7:28","nodeType":"YulIdentifier","src":"18425:7:28"}]},{"nativeSrc":"18495:21:28","nodeType":"YulAssignment","src":"18495:21:28","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:28","nodeType":"YulLiteral","src":"18511:4:28","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:28","nodeType":"YulIdentifier","src":"18505:5:28"},"nativeSrc":"18505:11:28","nodeType":"YulFunctionCall","src":"18505:11:28"},"variableNames":[{"name":"result","nativeSrc":"18495:6:28","nodeType":"YulIdentifier","src":"18495:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7089,"isOffset":false,"isSlot":false,"src":"18185:1:28","valueSize":1},{"declaration":7091,"isOffset":false,"isSlot":false,"src":"18223:1:28","valueSize":1},{"declaration":7093,"isOffset":false,"isSlot":false,"src":"18261:1:28","valueSize":1},{"declaration":7098,"isOffset":false,"isSlot":false,"src":"18495:6:28","valueSize":1},{"declaration":7096,"isOffset":false,"isSlot":false,"src":"18425:7:28","valueSize":1}],"flags":["memory-safe"],"id":7108,"nodeType":"InlineAssembly","src":"17088:1438:28"}]},"documentation":{"id":7087,"nodeType":"StructuredDocumentation","src":"16191:738:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":7110,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:28","nodeType":"FunctionDefinition","parameters":{"id":7094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7089,"mutability":"mutable","name":"b","nameLocation":"16961:1:28","nodeType":"VariableDeclaration","scope":7110,"src":"16953:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7088,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7091,"mutability":"mutable","name":"e","nameLocation":"16972:1:28","nodeType":"VariableDeclaration","scope":7110,"src":"16964:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7090,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7093,"mutability":"mutable","name":"m","nameLocation":"16983:1:28","nodeType":"VariableDeclaration","scope":7110,"src":"16975:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7092,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:28"},"returnParameters":{"id":7099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7096,"mutability":"mutable","name":"success","nameLocation":"17014:7:28","nodeType":"VariableDeclaration","scope":7110,"src":"17009:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7095,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7098,"mutability":"mutable","name":"result","nameLocation":"17031:6:28","nodeType":"VariableDeclaration","scope":7110,"src":"17023:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7097,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:28"},"scope":7900,"src":"16934:1598:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7145,"nodeType":"Block","src":"18729:179:28","statements":[{"assignments":[7123,7125],"declarations":[{"constant":false,"id":7123,"mutability":"mutable","name":"success","nameLocation":"18745:7:28","nodeType":"VariableDeclaration","scope":7145,"src":"18740:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7122,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7125,"mutability":"mutable","name":"result","nameLocation":"18767:6:28","nodeType":"VariableDeclaration","scope":7145,"src":"18754:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7124,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7131,"initialValue":{"arguments":[{"id":7127,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"18787:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7128,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"18790:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7129,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"18793:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7126,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[7110,7192],"referencedDeclaration":7192,"src":"18777:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:28"},{"condition":{"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:28","subExpression":{"id":7132,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"18810:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7142,"nodeType":"IfStatement","src":"18805:74:28","trueBody":{"id":7141,"nodeType":"Block","src":"18819:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":7137,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"18845:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4518_$","typeString":"type(library Panic)"}},"id":7138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4485,"src":"18845:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7134,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"18833:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4518_$","typeString":"type(library Panic)"}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4517,"src":"18833:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7140,"nodeType":"ExpressionStatement","src":"18833:35:28"}]}},{"expression":{"id":7143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"18895:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":7121,"id":7144,"nodeType":"Return","src":"18888:13:28"}]},"documentation":{"id":7111,"nodeType":"StructuredDocumentation","src":"18538:85:28","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":7146,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:28","nodeType":"FunctionDefinition","parameters":{"id":7118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7113,"mutability":"mutable","name":"b","nameLocation":"18657:1:28","nodeType":"VariableDeclaration","scope":7146,"src":"18644:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7112,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7115,"mutability":"mutable","name":"e","nameLocation":"18673:1:28","nodeType":"VariableDeclaration","scope":7146,"src":"18660:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7114,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7117,"mutability":"mutable","name":"m","nameLocation":"18689:1:28","nodeType":"VariableDeclaration","scope":7146,"src":"18676:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7116,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:28"},"returnParameters":{"id":7121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7146,"src":"18715:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7119,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:28"},"scope":7900,"src":"18628:280:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7191,"nodeType":"Block","src":"19162:771:28","statements":[{"condition":{"arguments":[{"id":7161,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"19187:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7160,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"19176:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7170,"nodeType":"IfStatement","src":"19172:47:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":7166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":7164,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":7167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":7168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":7159,"id":7169,"nodeType":"Return","src":"19191:28:28"}},{"assignments":[7172],"declarations":[{"constant":false,"id":7172,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:28","nodeType":"VariableDeclaration","scope":7191,"src":"19230:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7171,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7175,"initialValue":{"expression":{"id":7173,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"19245:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:28","memberName":"length","nodeType":"MemberAccess","src":"19245:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:28"},{"expression":{"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"19335:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7179,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"19361:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:28","memberName":"length","nodeType":"MemberAccess","src":"19361:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7181,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"19371:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:28","memberName":"length","nodeType":"MemberAccess","src":"19371:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7183,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"19381:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7184,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"19387:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7185,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"19390:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7186,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"19393:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7177,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7189,"nodeType":"ExpressionStatement","src":"19335:60:28"},{"AST":{"nativeSrc":"19431:496:28","nodeType":"YulBlock","src":"19431:496:28","statements":[{"nativeSrc":"19445:32:28","nodeType":"YulVariableDeclaration","src":"19445:32:28","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:28","nodeType":"YulIdentifier","src":"19464:6:28"},{"kind":"number","nativeSrc":"19472:4:28","nodeType":"YulLiteral","src":"19472:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:28","nodeType":"YulIdentifier","src":"19460:3:28"},"nativeSrc":"19460:17:28","nodeType":"YulFunctionCall","src":"19460:17:28"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:28","nodeType":"YulTypedName","src":"19449:7:28","type":""}]},{"nativeSrc":"19567:73:28","nodeType":"YulAssignment","src":"19567:73:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:28","nodeType":"YulIdentifier","src":"19589:3:28"},"nativeSrc":"19589:5:28","nodeType":"YulFunctionCall","src":"19589:5:28"},{"kind":"number","nativeSrc":"19596:4:28","nodeType":"YulLiteral","src":"19596:4:28","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:28","nodeType":"YulIdentifier","src":"19602:7:28"},{"arguments":[{"name":"result","nativeSrc":"19617:6:28","nodeType":"YulIdentifier","src":"19617:6:28"}],"functionName":{"name":"mload","nativeSrc":"19611:5:28","nodeType":"YulIdentifier","src":"19611:5:28"},"nativeSrc":"19611:13:28","nodeType":"YulFunctionCall","src":"19611:13:28"},{"name":"dataPtr","nativeSrc":"19626:7:28","nodeType":"YulIdentifier","src":"19626:7:28"},{"name":"mLen","nativeSrc":"19635:4:28","nodeType":"YulIdentifier","src":"19635:4:28"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:28","nodeType":"YulIdentifier","src":"19578:10:28"},"nativeSrc":"19578:62:28","nodeType":"YulFunctionCall","src":"19578:62:28"},"variableNames":[{"name":"success","nativeSrc":"19567:7:28","nodeType":"YulIdentifier","src":"19567:7:28"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:28","nodeType":"YulIdentifier","src":"19796:6:28"},{"name":"mLen","nativeSrc":"19804:4:28","nodeType":"YulIdentifier","src":"19804:4:28"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:28","nodeType":"YulIdentifier","src":"19789:6:28"},"nativeSrc":"19789:20:28","nodeType":"YulFunctionCall","src":"19789:20:28"},"nativeSrc":"19789:20:28","nodeType":"YulExpressionStatement","src":"19789:20:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:28","nodeType":"YulLiteral","src":"19892:4:28","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:28","nodeType":"YulIdentifier","src":"19902:7:28"},{"name":"mLen","nativeSrc":"19911:4:28","nodeType":"YulIdentifier","src":"19911:4:28"}],"functionName":{"name":"add","nativeSrc":"19898:3:28","nodeType":"YulIdentifier","src":"19898:3:28"},"nativeSrc":"19898:18:28","nodeType":"YulFunctionCall","src":"19898:18:28"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:28","nodeType":"YulIdentifier","src":"19885:6:28"},"nativeSrc":"19885:32:28","nodeType":"YulFunctionCall","src":"19885:32:28"},"nativeSrc":"19885:32:28","nodeType":"YulExpressionStatement","src":"19885:32:28"}]},"evmVersion":"paris","externalReferences":[{"declaration":7172,"isOffset":false,"isSlot":false,"src":"19635:4:28","valueSize":1},{"declaration":7172,"isOffset":false,"isSlot":false,"src":"19804:4:28","valueSize":1},{"declaration":7172,"isOffset":false,"isSlot":false,"src":"19911:4:28","valueSize":1},{"declaration":7158,"isOffset":false,"isSlot":false,"src":"19464:6:28","valueSize":1},{"declaration":7158,"isOffset":false,"isSlot":false,"src":"19617:6:28","valueSize":1},{"declaration":7158,"isOffset":false,"isSlot":false,"src":"19796:6:28","valueSize":1},{"declaration":7156,"isOffset":false,"isSlot":false,"src":"19567:7:28","valueSize":1}],"flags":["memory-safe"],"id":7190,"nodeType":"InlineAssembly","src":"19406:521:28"}]},"documentation":{"id":7147,"nodeType":"StructuredDocumentation","src":"18914:88:28","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":7192,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:28","nodeType":"FunctionDefinition","parameters":{"id":7154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"b","nameLocation":"19048:1:28","nodeType":"VariableDeclaration","scope":7192,"src":"19035:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7148,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7151,"mutability":"mutable","name":"e","nameLocation":"19072:1:28","nodeType":"VariableDeclaration","scope":7192,"src":"19059:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7150,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7153,"mutability":"mutable","name":"m","nameLocation":"19096:1:28","nodeType":"VariableDeclaration","scope":7192,"src":"19083:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7152,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:28"},"returnParameters":{"id":7159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7156,"mutability":"mutable","name":"success","nameLocation":"19132:7:28","nodeType":"VariableDeclaration","scope":7192,"src":"19127:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7155,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7158,"mutability":"mutable","name":"result","nameLocation":"19154:6:28","nodeType":"VariableDeclaration","scope":7192,"src":"19141:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7157,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:28"},"scope":7900,"src":"19007:926:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7224,"nodeType":"Block","src":"20088:176:28","statements":[{"body":{"id":7220,"nodeType":"Block","src":"20145:92:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7211,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"20163:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7213,"indexExpression":{"id":7212,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"20173:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7219,"nodeType":"IfStatement","src":"20159:68:28","trueBody":{"id":7218,"nodeType":"Block","src":"20182:45:28","statements":[{"expression":{"hexValue":"66616c7365","id":7216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7199,"id":7217,"nodeType":"Return","src":"20200:12:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"20118:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7205,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"20122:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:28","memberName":"length","nodeType":"MemberAccess","src":"20122:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7221,"initializationExpression":{"assignments":[7201],"declarations":[{"constant":false,"id":7201,"mutability":"mutable","name":"i","nameLocation":"20111:1:28","nodeType":"VariableDeclaration","scope":7221,"src":"20103:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7200,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7203,"initialValue":{"hexValue":"30","id":7202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:28"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:28","subExpression":{"id":7208,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"20142:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7210,"nodeType":"ExpressionStatement","src":"20140:3:28"},"nodeType":"ForStatement","src":"20098:139:28"},{"expression":{"hexValue":"74727565","id":7222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7199,"id":7223,"nodeType":"Return","src":"20246:11:28"}]},"documentation":{"id":7193,"nodeType":"StructuredDocumentation","src":"19939:72:28","text":" @dev Returns whether the provided byte array is zero."},"id":7225,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:28","nodeType":"FunctionDefinition","parameters":{"id":7196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7195,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:28","nodeType":"VariableDeclaration","scope":7225,"src":"20036:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7194,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:28"},"returnParameters":{"id":7199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7225,"src":"20082:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7197,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:28"},"scope":7900,"src":"20016:248:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7443,"nodeType":"Block","src":"20624:5124:28","statements":[{"id":7442,"nodeType":"UncheckedBlock","src":"20634:5108:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7233,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"20728:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":7234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7239,"nodeType":"IfStatement","src":"20724:53:28","trueBody":{"id":7238,"nodeType":"Block","src":"20736:41:28","statements":[{"expression":{"id":7236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"20761:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7232,"id":7237,"nodeType":"Return","src":"20754:8:28"}]}},{"assignments":[7241],"declarations":[{"constant":false,"id":7241,"mutability":"mutable","name":"aa","nameLocation":"21712:2:28","nodeType":"VariableDeclaration","scope":7442,"src":"21704:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7240,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7243,"initialValue":{"id":7242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"21717:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:28"},{"assignments":[7245],"declarations":[{"constant":false,"id":7245,"mutability":"mutable","name":"xn","nameLocation":"21740:2:28","nodeType":"VariableDeclaration","scope":7442,"src":"21732:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7244,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7247,"initialValue":{"hexValue":"31","id":7246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7248,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"21765:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":7251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":7250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":7252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7263,"nodeType":"IfStatement","src":"21761:92:28","trueBody":{"id":7262,"nodeType":"Block","src":"21783:70:28","statements":[{"expression":{"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7254,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"21801:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7257,"nodeType":"ExpressionStatement","src":"21801:10:28"},{"expression":{"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7258,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"21829:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":7259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7261,"nodeType":"ExpressionStatement","src":"21829:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7264,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"21870:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":7267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":7268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7279,"nodeType":"IfStatement","src":"21866:90:28","trueBody":{"id":7278,"nodeType":"Block","src":"21887:69:28","statements":[{"expression":{"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7270,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"21905:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":7271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7273,"nodeType":"ExpressionStatement","src":"21905:9:28"},{"expression":{"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7274,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"21932:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":7275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7277,"nodeType":"ExpressionStatement","src":"21932:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7280,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"21973:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":7283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":7284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7295,"nodeType":"IfStatement","src":"21969:90:28","trueBody":{"id":7294,"nodeType":"Block","src":"21990:69:28","statements":[{"expression":{"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7286,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"22008:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":7287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7289,"nodeType":"ExpressionStatement","src":"22008:9:28"},{"expression":{"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7290,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"22035:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7293,"nodeType":"ExpressionStatement","src":"22035:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7296,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"22076:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":7299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":7298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":7300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7311,"nodeType":"IfStatement","src":"22072:89:28","trueBody":{"id":7310,"nodeType":"Block","src":"22093:68:28","statements":[{"expression":{"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7302,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"22111:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":7303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7305,"nodeType":"ExpressionStatement","src":"22111:9:28"},{"expression":{"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7306,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"22138:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7309,"nodeType":"ExpressionStatement","src":"22138:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7312,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"22178:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":7315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":7314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":7316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7327,"nodeType":"IfStatement","src":"22174:87:28","trueBody":{"id":7326,"nodeType":"Block","src":"22194:67:28","statements":[{"expression":{"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7318,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"22212:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7321,"nodeType":"ExpressionStatement","src":"22212:8:28"},{"expression":{"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7322,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"22238:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":7323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7325,"nodeType":"ExpressionStatement","src":"22238:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7328,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"22278:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":7331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":7332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7343,"nodeType":"IfStatement","src":"22274:87:28","trueBody":{"id":7342,"nodeType":"Block","src":"22294:67:28","statements":[{"expression":{"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7334,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"22312:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":7335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7337,"nodeType":"ExpressionStatement","src":"22312:8:28"},{"expression":{"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7338,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"22338:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7341,"nodeType":"ExpressionStatement","src":"22338:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7344,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"22378:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":7347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":7348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7355,"nodeType":"IfStatement","src":"22374:61:28","trueBody":{"id":7354,"nodeType":"Block","src":"22394:41:28","statements":[{"expression":{"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7350,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"22412:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":7351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7353,"nodeType":"ExpressionStatement","src":"22412:8:28"}]}},{"expression":{"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7356,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"22855:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7358,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"22865:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7364,"nodeType":"ExpressionStatement","src":"22855:18:28"},{"expression":{"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7365,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"24760:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7366,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"24766:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7367,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"24771:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7368,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"24775:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7375,"nodeType":"ExpressionStatement","src":"24760:23:28"},{"expression":{"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7376,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"24869:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7377,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"24875:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7378,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"24880:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7379,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"24884:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7386,"nodeType":"ExpressionStatement","src":"24869:23:28"},{"expression":{"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7387,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"24980:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7388,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"24986:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"24991:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7390,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"24995:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7397,"nodeType":"ExpressionStatement","src":"24980:23:28"},{"expression":{"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7398,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25089:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7399,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25095:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7400,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"25100:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7401,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25104:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7408,"nodeType":"ExpressionStatement","src":"25089:23:28"},{"expression":{"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7409,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25199:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7410,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25205:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"25210:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7412,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25214:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7415,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7419,"nodeType":"ExpressionStatement","src":"25199:23:28"},{"expression":{"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7420,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25309:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7421,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25315:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"25320:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7423,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25324:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7430,"nodeType":"ExpressionStatement","src":"25309:23:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7431,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25698:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7434,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25719:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"25724:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7436,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"25728:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7432,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"25703:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"25703:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7232,"id":7441,"nodeType":"Return","src":"25691:40:28"}]}]},"documentation":{"id":7226,"nodeType":"StructuredDocumentation","src":"20270:292:28","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":7444,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:28","nodeType":"FunctionDefinition","parameters":{"id":7229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7228,"mutability":"mutable","name":"a","nameLocation":"20589:1:28","nodeType":"VariableDeclaration","scope":7444,"src":"20581:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7227,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:28"},"returnParameters":{"id":7232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7444,"src":"20615:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7230,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:28"},"scope":7900,"src":"20567:5181:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7477,"nodeType":"Block","src":"25921:171:28","statements":[{"id":7476,"nodeType":"UncheckedBlock","src":"25931:155:28","statements":[{"assignments":[7456],"declarations":[{"constant":false,"id":7456,"mutability":"mutable","name":"result","nameLocation":"25963:6:28","nodeType":"VariableDeclaration","scope":7476,"src":"25955:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7455,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7460,"initialValue":{"arguments":[{"id":7458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"25977:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7457,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[7444,7478],"referencedDeclaration":7444,"src":"25972:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7456,"src":"26000:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7465,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"26042:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}],"id":7464,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"26025:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6291_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7456,"src":"26055:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7456,"src":"26064:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"26073:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7462,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"26009:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"26009:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7454,"id":7475,"nodeType":"Return","src":"25993:82:28"}]}]},"documentation":{"id":7445,"nodeType":"StructuredDocumentation","src":"25754:86:28","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":7478,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:28","nodeType":"FunctionDefinition","parameters":{"id":7451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7447,"mutability":"mutable","name":"a","nameLocation":"25867:1:28","nodeType":"VariableDeclaration","scope":7478,"src":"25859:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7446,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7450,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:28","nodeType":"VariableDeclaration","scope":7478,"src":"25870:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"},"typeName":{"id":7449,"nodeType":"UserDefinedTypeName","pathNode":{"id":7448,"name":"Rounding","nameLocations":["25870:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6291,"src":"25870:8:28"},"referencedDeclaration":6291,"src":"25870:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:28"},"returnParameters":{"id":7454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7478,"src":"25912:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7452,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:28"},"scope":7900,"src":"25845:247:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7568,"nodeType":"Block","src":"26281:2334:28","statements":[{"expression":{"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7486,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"26363:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7489,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7481,"src":"26383:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7487,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"26367:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"26367:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:28","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7496,"nodeType":"ExpressionStatement","src":"26363:64:28"},{"expression":{"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7497,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"26503:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7500,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7481,"src":"26525:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7501,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"26530:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7498,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"26508:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"26508:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:28","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7510,"nodeType":"ExpressionStatement","src":"26503:56:28"},{"expression":{"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7511,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"26634:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7514,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7481,"src":"26656:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7515,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"26661:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7512,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"26639:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"26639:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7524,"nodeType":"ExpressionStatement","src":"26634:48:28"},{"expression":{"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7525,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"26757:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7528,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7481,"src":"26779:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7529,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"26784:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7526,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"26762:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"26762:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7538,"nodeType":"ExpressionStatement","src":"26757:44:28"},{"expression":{"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7539,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"26874:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7542,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7481,"src":"26896:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7543,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"26901:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7540,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"26879:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"26879:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7552,"nodeType":"ExpressionStatement","src":"26874:42:28"},{"expression":{"id":7565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7553,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"26988:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7556,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7481,"src":"27010:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7557,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"27015:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":7560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:28","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7554,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"26993:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"26993:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7566,"nodeType":"ExpressionStatement","src":"26988:41:28"},{"AST":{"nativeSrc":"28490:119:28","nodeType":"YulBlock","src":"28490:119:28","statements":[{"nativeSrc":"28504:95:28","nodeType":"YulAssignment","src":"28504:95:28","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:28","nodeType":"YulIdentifier","src":"28512:1:28"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:28","nodeType":"YulIdentifier","src":"28524:1:28"},{"name":"x","nativeSrc":"28527:1:28","nodeType":"YulIdentifier","src":"28527:1:28"}],"functionName":{"name":"shr","nativeSrc":"28520:3:28","nodeType":"YulIdentifier","src":"28520:3:28"},"nativeSrc":"28520:9:28","nodeType":"YulFunctionCall","src":"28520:9:28"},{"kind":"number","nativeSrc":"28531:66:28","nodeType":"YulLiteral","src":"28531:66:28","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:28","nodeType":"YulIdentifier","src":"28515:4:28"},"nativeSrc":"28515:83:28","nodeType":"YulFunctionCall","src":"28515:83:28"}],"functionName":{"name":"or","nativeSrc":"28509:2:28","nodeType":"YulIdentifier","src":"28509:2:28"},"nativeSrc":"28509:90:28","nodeType":"YulFunctionCall","src":"28509:90:28"},"variableNames":[{"name":"r","nativeSrc":"28504:1:28","nodeType":"YulIdentifier","src":"28504:1:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7484,"isOffset":false,"isSlot":false,"src":"28504:1:28","valueSize":1},{"declaration":7484,"isOffset":false,"isSlot":false,"src":"28512:1:28","valueSize":1},{"declaration":7484,"isOffset":false,"isSlot":false,"src":"28524:1:28","valueSize":1},{"declaration":7481,"isOffset":false,"isSlot":false,"src":"28527:1:28","valueSize":1}],"flags":["memory-safe"],"id":7567,"nodeType":"InlineAssembly","src":"28465:144:28"}]},"documentation":{"id":7479,"nodeType":"StructuredDocumentation","src":"26098:119:28","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7569,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:28","nodeType":"FunctionDefinition","parameters":{"id":7482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7481,"mutability":"mutable","name":"x","nameLocation":"26244:1:28","nodeType":"VariableDeclaration","scope":7569,"src":"26236:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7480,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:28"},"returnParameters":{"id":7485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7484,"mutability":"mutable","name":"r","nameLocation":"26278:1:28","nodeType":"VariableDeclaration","scope":7569,"src":"26270:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7483,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:28"},"scope":7900,"src":"26222:2393:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7602,"nodeType":"Block","src":"28848:175:28","statements":[{"id":7601,"nodeType":"UncheckedBlock","src":"28858:159:28","statements":[{"assignments":[7581],"declarations":[{"constant":false,"id":7581,"mutability":"mutable","name":"result","nameLocation":"28890:6:28","nodeType":"VariableDeclaration","scope":7601,"src":"28882:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7580,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7585,"initialValue":{"arguments":[{"id":7583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"28904:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7582,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[7569,7603],"referencedDeclaration":7569,"src":"28899:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7586,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"28931:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7590,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"28973:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}],"id":7589,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"28956:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6291_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7593,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"28991:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"29000:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7587,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"28940:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"28940:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7579,"id":7600,"nodeType":"Return","src":"28924:82:28"}]}]},"documentation":{"id":7570,"nodeType":"StructuredDocumentation","src":"28621:142:28","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7603,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:28","nodeType":"FunctionDefinition","parameters":{"id":7576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7572,"mutability":"mutable","name":"value","nameLocation":"28790:5:28","nodeType":"VariableDeclaration","scope":7603,"src":"28782:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7571,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7575,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:28","nodeType":"VariableDeclaration","scope":7603,"src":"28797:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"},"typeName":{"id":7574,"nodeType":"UserDefinedTypeName","pathNode":{"id":7573,"name":"Rounding","nameLocations":["28797:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6291,"src":"28797:8:28"},"referencedDeclaration":6291,"src":"28797:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:28"},"returnParameters":{"id":7579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7603,"src":"28839:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7577,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:28"},"scope":7900,"src":"28768:255:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7731,"nodeType":"Block","src":"29216:854:28","statements":[{"assignments":[7612],"declarations":[{"constant":false,"id":7612,"mutability":"mutable","name":"result","nameLocation":"29234:6:28","nodeType":"VariableDeclaration","scope":7731,"src":"29226:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7611,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7614,"initialValue":{"hexValue":"30","id":7613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:28"},{"id":7728,"nodeType":"UncheckedBlock","src":"29254:787:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29282:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7631,"nodeType":"IfStatement","src":"29278:103:28","trueBody":{"id":7630,"nodeType":"Block","src":"29301:80:28","statements":[{"expression":{"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29319:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7625,"nodeType":"ExpressionStatement","src":"29319:17:28"},{"expression":{"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"29354:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":7627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7629,"nodeType":"ExpressionStatement","src":"29354:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29398:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7648,"nodeType":"IfStatement","src":"29394:103:28","trueBody":{"id":7647,"nodeType":"Block","src":"29417:80:28","statements":[{"expression":{"id":7641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29435:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7642,"nodeType":"ExpressionStatement","src":"29435:17:28"},{"expression":{"id":7645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7643,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"29470:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":7644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7646,"nodeType":"ExpressionStatement","src":"29470:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29514:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7665,"nodeType":"IfStatement","src":"29510:103:28","trueBody":{"id":7664,"nodeType":"Block","src":"29533:80:28","statements":[{"expression":{"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29551:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7659,"nodeType":"ExpressionStatement","src":"29551:17:28"},{"expression":{"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"29586:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":7661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7663,"nodeType":"ExpressionStatement","src":"29586:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29630:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7682,"nodeType":"IfStatement","src":"29626:100:28","trueBody":{"id":7681,"nodeType":"Block","src":"29648:78:28","statements":[{"expression":{"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29666:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7676,"nodeType":"ExpressionStatement","src":"29666:16:28"},{"expression":{"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"29700:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7680,"nodeType":"ExpressionStatement","src":"29700:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29743:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7699,"nodeType":"IfStatement","src":"29739:100:28","trueBody":{"id":7698,"nodeType":"Block","src":"29761:78:28","statements":[{"expression":{"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29779:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7693,"nodeType":"ExpressionStatement","src":"29779:16:28"},{"expression":{"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"29813:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":7695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7697,"nodeType":"ExpressionStatement","src":"29813:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29856:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7716,"nodeType":"IfStatement","src":"29852:100:28","trueBody":{"id":7715,"nodeType":"Block","src":"29874:78:28","statements":[{"expression":{"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29892:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7710,"nodeType":"ExpressionStatement","src":"29892:16:28"},{"expression":{"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"29926:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7714,"nodeType":"ExpressionStatement","src":"29926:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"29969:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":7720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":7719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7727,"nodeType":"IfStatement","src":"29965:66:28","trueBody":{"id":7726,"nodeType":"Block","src":"29987:44:28","statements":[{"expression":{"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"30005:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7725,"nodeType":"ExpressionStatement","src":"30005:11:28"}]}}]},{"expression":{"id":7729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"30057:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7610,"id":7730,"nodeType":"Return","src":"30050:13:28"}]},"documentation":{"id":7604,"nodeType":"StructuredDocumentation","src":"29029:120:28","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7732,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:28","nodeType":"FunctionDefinition","parameters":{"id":7607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7606,"mutability":"mutable","name":"value","nameLocation":"29177:5:28","nodeType":"VariableDeclaration","scope":7732,"src":"29169:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7605,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:28"},"returnParameters":{"id":7610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7732,"src":"29207:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7608,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:28"},"scope":7900,"src":"29154:916:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7765,"nodeType":"Block","src":"30305:177:28","statements":[{"id":7764,"nodeType":"UncheckedBlock","src":"30315:161:28","statements":[{"assignments":[7744],"declarations":[{"constant":false,"id":7744,"mutability":"mutable","name":"result","nameLocation":"30347:6:28","nodeType":"VariableDeclaration","scope":7764,"src":"30339:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7743,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7748,"initialValue":{"arguments":[{"id":7746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"30362:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7745,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[7732,7766],"referencedDeclaration":7732,"src":"30356:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"30389:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7753,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"30431:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}],"id":7752,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"30414:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6291_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":7756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"30450:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7735,"src":"30459:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7750,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"30398:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"30398:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7742,"id":7763,"nodeType":"Return","src":"30382:83:28"}]}]},"documentation":{"id":7733,"nodeType":"StructuredDocumentation","src":"30076:143:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7766,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:28","nodeType":"FunctionDefinition","parameters":{"id":7739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7735,"mutability":"mutable","name":"value","nameLocation":"30247:5:28","nodeType":"VariableDeclaration","scope":7766,"src":"30239:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7734,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7738,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:28","nodeType":"VariableDeclaration","scope":7766,"src":"30254:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"},"typeName":{"id":7737,"nodeType":"UserDefinedTypeName","pathNode":{"id":7736,"name":"Rounding","nameLocations":["30254:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6291,"src":"30254:8:28"},"referencedDeclaration":6291,"src":"30254:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:28"},"returnParameters":{"id":7742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7766,"src":"30296:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7740,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:28"},"scope":7900,"src":"30224:258:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7842,"nodeType":"Block","src":"30800:675:28","statements":[{"expression":{"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7774,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"30882:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7777,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"30902:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7775,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"30886:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"30886:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:28","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7784,"nodeType":"ExpressionStatement","src":"30882:64:28"},{"expression":{"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7785,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"31022:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7788,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"31044:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7789,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"31049:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7786,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"31027:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"31027:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:28","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7798,"nodeType":"ExpressionStatement","src":"31022:56:28"},{"expression":{"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7799,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"31153:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7802,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"31175:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7803,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"31180:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7800,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"31158:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"31158:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7812,"nodeType":"ExpressionStatement","src":"31153:48:28"},{"expression":{"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7813,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"31276:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7816,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"31298:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7817,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"31303:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7814,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"31281:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"31281:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7826,"nodeType":"ExpressionStatement","src":"31276:44:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7827,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"31426:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":7828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7833,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"31453:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7834,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"31458:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7831,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"31436:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"31436:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7773,"id":7841,"nodeType":"Return","src":"31418:50:28"}]},"documentation":{"id":7767,"nodeType":"StructuredDocumentation","src":"30488:246:28","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":7843,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:28","nodeType":"FunctionDefinition","parameters":{"id":7770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7769,"mutability":"mutable","name":"x","nameLocation":"30763:1:28","nodeType":"VariableDeclaration","scope":7843,"src":"30755:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7768,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:28"},"returnParameters":{"id":7773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7772,"mutability":"mutable","name":"r","nameLocation":"30797:1:28","nodeType":"VariableDeclaration","scope":7843,"src":"30789:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7771,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:28"},"scope":7900,"src":"30739:736:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7879,"nodeType":"Block","src":"31712:184:28","statements":[{"id":7878,"nodeType":"UncheckedBlock","src":"31722:168:28","statements":[{"assignments":[7855],"declarations":[{"constant":false,"id":7855,"mutability":"mutable","name":"result","nameLocation":"31754:6:28","nodeType":"VariableDeclaration","scope":7878,"src":"31746:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7854,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7859,"initialValue":{"arguments":[{"id":7857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"31770:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7856,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[7843,7880],"referencedDeclaration":7843,"src":"31763:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"31797:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7864,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"31839:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}],"id":7863,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"31822:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6291_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"31858:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"31873:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7861,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"31806:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"31806:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7853,"id":7877,"nodeType":"Return","src":"31790:89:28"}]}]},"documentation":{"id":7844,"nodeType":"StructuredDocumentation","src":"31481:144:28","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7880,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:28","nodeType":"FunctionDefinition","parameters":{"id":7850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7846,"mutability":"mutable","name":"value","nameLocation":"31654:5:28","nodeType":"VariableDeclaration","scope":7880,"src":"31646:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7845,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7849,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:28","nodeType":"VariableDeclaration","scope":7880,"src":"31661:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"},"typeName":{"id":7848,"nodeType":"UserDefinedTypeName","pathNode":{"id":7847,"name":"Rounding","nameLocations":["31661:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6291,"src":"31661:8:28"},"referencedDeclaration":6291,"src":"31661:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:28"},"returnParameters":{"id":7853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7880,"src":"31703:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7851,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:28"},"scope":7900,"src":"31630:266:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7898,"nodeType":"Block","src":"32094:48:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7891,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"32117:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}],"id":7890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7889,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:28","typeDescriptions":{}}},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":7893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7888,"id":7897,"nodeType":"Return","src":"32104:31:28"}]},"documentation":{"id":7881,"nodeType":"StructuredDocumentation","src":"31902:113:28","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":7899,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:28","nodeType":"FunctionDefinition","parameters":{"id":7885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7884,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:28","nodeType":"VariableDeclaration","scope":7899,"src":"32046:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"},"typeName":{"id":7883,"nodeType":"UserDefinedTypeName","pathNode":{"id":7882,"name":"Rounding","nameLocations":["32046:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":6291,"src":"32046:8:28"},"referencedDeclaration":6291,"src":"32046:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6291","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:28"},"returnParameters":{"id":7888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7899,"src":"32088:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7886,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:28"},"scope":7900,"src":"32020:122:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7901,"src":"281:31863:28","usedErrors":[],"usedEvents":[]}],"src":"103:32042:28"},"id":28},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[9665]},"id":9666,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7902,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":7903,"nodeType":"StructuredDocumentation","src":"218:550:29","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":9665,"linearizedBaseContracts":[9665],"name":"SafeCast","nameLocation":"777:8:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7904,"nodeType":"StructuredDocumentation","src":"792:68:29","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":7910,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:29","nodeType":"ErrorDefinition","parameters":{"id":7909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7906,"mutability":"mutable","name":"bits","nameLocation":"908:4:29","nodeType":"VariableDeclaration","scope":7910,"src":"902:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7905,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7908,"mutability":"mutable","name":"value","nameLocation":"922:5:29","nodeType":"VariableDeclaration","scope":7910,"src":"914:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7907,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:29"},"src":"865:64:29"},{"documentation":{"id":7911,"nodeType":"StructuredDocumentation","src":"935:75:29","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":7915,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:29","nodeType":"ErrorDefinition","parameters":{"id":7914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7913,"mutability":"mutable","name":"value","nameLocation":"1056:5:29","nodeType":"VariableDeclaration","scope":7915,"src":"1049:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7912,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:29"},"src":"1015:48:29"},{"documentation":{"id":7916,"nodeType":"StructuredDocumentation","src":"1069:67:29","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":7922,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:29","nodeType":"ErrorDefinition","parameters":{"id":7921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7918,"mutability":"mutable","name":"bits","nameLocation":"1183:4:29","nodeType":"VariableDeclaration","scope":7922,"src":"1177:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7917,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7920,"mutability":"mutable","name":"value","nameLocation":"1196:5:29","nodeType":"VariableDeclaration","scope":7922,"src":"1189:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7919,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:29"},"src":"1141:62:29"},{"documentation":{"id":7923,"nodeType":"StructuredDocumentation","src":"1209:75:29","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":7927,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:29","nodeType":"ErrorDefinition","parameters":{"id":7926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7925,"mutability":"mutable","name":"value","nameLocation":"1331:5:29","nodeType":"VariableDeclaration","scope":7927,"src":"1323:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:29"},"src":"1289:49:29"},{"body":{"id":7954,"nodeType":"Block","src":"1695:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"1709:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7937,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7936,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:29","memberName":"max","nodeType":"MemberAccess","src":"1717:17:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7948,"nodeType":"IfStatement","src":"1705:105:29","trueBody":{"id":7947,"nodeType":"Block","src":"1736:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"1793:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7942,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"1757:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7946,"nodeType":"RevertStatement","src":"1750:49:29"}]}},{"expression":{"arguments":[{"id":7951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"1834:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7949,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:29","typeDescriptions":{}}},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7934,"id":7953,"nodeType":"Return","src":"1819:21:29"}]},"documentation":{"id":7928,"nodeType":"StructuredDocumentation","src":"1344:280:29","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7955,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:29","nodeType":"FunctionDefinition","parameters":{"id":7931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7930,"mutability":"mutable","name":"value","nameLocation":"1656:5:29","nodeType":"VariableDeclaration","scope":7955,"src":"1648:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7929,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:29"},"returnParameters":{"id":7934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7955,"src":"1686:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7932,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:29"},"scope":9665,"src":"1629:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7982,"nodeType":"Block","src":"2204:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"2218:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7965,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7964,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:29","memberName":"max","nodeType":"MemberAccess","src":"2226:17:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7976,"nodeType":"IfStatement","src":"2214:105:29","trueBody":{"id":7975,"nodeType":"Block","src":"2245:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"2302:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7970,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"2266:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7974,"nodeType":"RevertStatement","src":"2259:49:29"}]}},{"expression":{"arguments":[{"id":7979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"2343:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7977,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:29","typeDescriptions":{}}},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7962,"id":7981,"nodeType":"Return","src":"2328:21:29"}]},"documentation":{"id":7956,"nodeType":"StructuredDocumentation","src":"1853:280:29","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7983,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:29","nodeType":"FunctionDefinition","parameters":{"id":7959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7958,"mutability":"mutable","name":"value","nameLocation":"2165:5:29","nodeType":"VariableDeclaration","scope":7983,"src":"2157:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7957,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:29"},"returnParameters":{"id":7962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7983,"src":"2195:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7960,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:29"},"scope":9665,"src":"2138:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8010,"nodeType":"Block","src":"2713:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"2727:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7993,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7992,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:29","memberName":"max","nodeType":"MemberAccess","src":"2735:17:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8004,"nodeType":"IfStatement","src":"2723:105:29","trueBody":{"id":8003,"nodeType":"Block","src":"2754:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"2811:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7998,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"2775:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8002,"nodeType":"RevertStatement","src":"2768:49:29"}]}},{"expression":{"arguments":[{"id":8007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"2852:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":8005,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:29","typeDescriptions":{}}},"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7990,"id":8009,"nodeType":"Return","src":"2837:21:29"}]},"documentation":{"id":7984,"nodeType":"StructuredDocumentation","src":"2362:280:29","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8011,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:29","nodeType":"FunctionDefinition","parameters":{"id":7987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7986,"mutability":"mutable","name":"value","nameLocation":"2674:5:29","nodeType":"VariableDeclaration","scope":8011,"src":"2666:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:29"},"returnParameters":{"id":7990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8011,"src":"2704:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7988,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:29"},"scope":9665,"src":"2647:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8038,"nodeType":"Block","src":"3222:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"3236:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8021,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":8020,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":8024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:29","memberName":"max","nodeType":"MemberAccess","src":"3244:17:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8032,"nodeType":"IfStatement","src":"3232:105:29","trueBody":{"id":8031,"nodeType":"Block","src":"3263:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"3320:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8026,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"3284:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8030,"nodeType":"RevertStatement","src":"3277:49:29"}]}},{"expression":{"arguments":[{"id":8035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"3361:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8033,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:29","typeDescriptions":{}}},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8018,"id":8037,"nodeType":"Return","src":"3346:21:29"}]},"documentation":{"id":8012,"nodeType":"StructuredDocumentation","src":"2871:280:29","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8039,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:29","nodeType":"FunctionDefinition","parameters":{"id":8015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8014,"mutability":"mutable","name":"value","nameLocation":"3183:5:29","nodeType":"VariableDeclaration","scope":8039,"src":"3175:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8013,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:29"},"returnParameters":{"id":8018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8039,"src":"3213:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8016,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:29"},"scope":9665,"src":"3156:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8066,"nodeType":"Block","src":"3731:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8042,"src":"3745:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8049,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":8048,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":8052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:29","memberName":"max","nodeType":"MemberAccess","src":"3753:17:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8060,"nodeType":"IfStatement","src":"3741:105:29","trueBody":{"id":8059,"nodeType":"Block","src":"3772:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8042,"src":"3829:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8054,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"3793:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8058,"nodeType":"RevertStatement","src":"3786:49:29"}]}},{"expression":{"arguments":[{"id":8063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8042,"src":"3870:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8061,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:29","typeDescriptions":{}}},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":8046,"id":8065,"nodeType":"Return","src":"3855:21:29"}]},"documentation":{"id":8040,"nodeType":"StructuredDocumentation","src":"3380:280:29","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8067,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:29","nodeType":"FunctionDefinition","parameters":{"id":8043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8042,"mutability":"mutable","name":"value","nameLocation":"3692:5:29","nodeType":"VariableDeclaration","scope":8067,"src":"3684:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8041,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:29"},"returnParameters":{"id":8046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8067,"src":"3722:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":8044,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:29"},"scope":9665,"src":"3665:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8094,"nodeType":"Block","src":"4240:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"4254:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8077,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":8076,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":8080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:29","memberName":"max","nodeType":"MemberAccess","src":"4262:17:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8088,"nodeType":"IfStatement","src":"4250:105:29","trueBody":{"id":8087,"nodeType":"Block","src":"4281:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"4338:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8082,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"4302:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8086,"nodeType":"RevertStatement","src":"4295:49:29"}]}},{"expression":{"arguments":[{"id":8091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"4379:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8089,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:29","typeDescriptions":{}}},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8074,"id":8093,"nodeType":"Return","src":"4364:21:29"}]},"documentation":{"id":8068,"nodeType":"StructuredDocumentation","src":"3889:280:29","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8095,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:29","nodeType":"FunctionDefinition","parameters":{"id":8071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8070,"mutability":"mutable","name":"value","nameLocation":"4201:5:29","nodeType":"VariableDeclaration","scope":8095,"src":"4193:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8069,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:29"},"returnParameters":{"id":8074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8095,"src":"4231:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8072,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:29"},"scope":9665,"src":"4174:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8122,"nodeType":"Block","src":"4749:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"4763:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8105,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":8104,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":8108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:29","memberName":"max","nodeType":"MemberAccess","src":"4771:17:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8116,"nodeType":"IfStatement","src":"4759:105:29","trueBody":{"id":8115,"nodeType":"Block","src":"4790:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"4847:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8110,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"4811:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8114,"nodeType":"RevertStatement","src":"4804:49:29"}]}},{"expression":{"arguments":[{"id":8119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"4888:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8117,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:29","typeDescriptions":{}}},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":8102,"id":8121,"nodeType":"Return","src":"4873:21:29"}]},"documentation":{"id":8096,"nodeType":"StructuredDocumentation","src":"4398:280:29","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8123,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:29","nodeType":"FunctionDefinition","parameters":{"id":8099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8098,"mutability":"mutable","name":"value","nameLocation":"4710:5:29","nodeType":"VariableDeclaration","scope":8123,"src":"4702:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:29"},"returnParameters":{"id":8102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8123,"src":"4740:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":8100,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:29"},"scope":9665,"src":"4683:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8150,"nodeType":"Block","src":"5258:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"5272:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8133,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":8132,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":8136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:29","memberName":"max","nodeType":"MemberAccess","src":"5280:17:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8144,"nodeType":"IfStatement","src":"5268:105:29","trueBody":{"id":8143,"nodeType":"Block","src":"5299:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"5356:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8138,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"5320:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8142,"nodeType":"RevertStatement","src":"5313:49:29"}]}},{"expression":{"arguments":[{"id":8147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"5397:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8145,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:29","typeDescriptions":{}}},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":8130,"id":8149,"nodeType":"Return","src":"5382:21:29"}]},"documentation":{"id":8124,"nodeType":"StructuredDocumentation","src":"4907:280:29","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8151,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:29","nodeType":"FunctionDefinition","parameters":{"id":8127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8126,"mutability":"mutable","name":"value","nameLocation":"5219:5:29","nodeType":"VariableDeclaration","scope":8151,"src":"5211:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8125,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:29"},"returnParameters":{"id":8130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8151,"src":"5249:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":8128,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:29"},"scope":9665,"src":"5192:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8178,"nodeType":"Block","src":"5767:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"5781:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8161,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":8160,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":8164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:29","memberName":"max","nodeType":"MemberAccess","src":"5789:17:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8172,"nodeType":"IfStatement","src":"5777:105:29","trueBody":{"id":8171,"nodeType":"Block","src":"5808:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"5865:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8166,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"5829:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8170,"nodeType":"RevertStatement","src":"5822:49:29"}]}},{"expression":{"arguments":[{"id":8175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"5906:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8173,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:29","typeDescriptions":{}}},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":8158,"id":8177,"nodeType":"Return","src":"5891:21:29"}]},"documentation":{"id":8152,"nodeType":"StructuredDocumentation","src":"5416:280:29","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8179,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:29","nodeType":"FunctionDefinition","parameters":{"id":8155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8154,"mutability":"mutable","name":"value","nameLocation":"5728:5:29","nodeType":"VariableDeclaration","scope":8179,"src":"5720:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8153,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:29"},"returnParameters":{"id":8158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8179,"src":"5758:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":8156,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:29"},"scope":9665,"src":"5701:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8206,"nodeType":"Block","src":"6276:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"6290:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8189,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":8188,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":8192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:29","memberName":"max","nodeType":"MemberAccess","src":"6298:17:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8200,"nodeType":"IfStatement","src":"6286:105:29","trueBody":{"id":8199,"nodeType":"Block","src":"6317:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"6374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8194,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"6338:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8198,"nodeType":"RevertStatement","src":"6331:49:29"}]}},{"expression":{"arguments":[{"id":8203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"6415:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8201,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:29","typeDescriptions":{}}},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":8186,"id":8205,"nodeType":"Return","src":"6400:21:29"}]},"documentation":{"id":8180,"nodeType":"StructuredDocumentation","src":"5925:280:29","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8207,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:29","nodeType":"FunctionDefinition","parameters":{"id":8183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8182,"mutability":"mutable","name":"value","nameLocation":"6237:5:29","nodeType":"VariableDeclaration","scope":8207,"src":"6229:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8181,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:29"},"returnParameters":{"id":8186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8207,"src":"6267:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":8184,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:29"},"scope":9665,"src":"6210:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8234,"nodeType":"Block","src":"6785:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8210,"src":"6799:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8217,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":8216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":8220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:29","memberName":"max","nodeType":"MemberAccess","src":"6807:17:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8228,"nodeType":"IfStatement","src":"6795:105:29","trueBody":{"id":8227,"nodeType":"Block","src":"6826:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8210,"src":"6883:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8222,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"6847:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8226,"nodeType":"RevertStatement","src":"6840:49:29"}]}},{"expression":{"arguments":[{"id":8231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8210,"src":"6924:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8229,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:29","typeDescriptions":{}}},"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":8214,"id":8233,"nodeType":"Return","src":"6909:21:29"}]},"documentation":{"id":8208,"nodeType":"StructuredDocumentation","src":"6434:280:29","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8235,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:29","nodeType":"FunctionDefinition","parameters":{"id":8211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8210,"mutability":"mutable","name":"value","nameLocation":"6746:5:29","nodeType":"VariableDeclaration","scope":8235,"src":"6738:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8209,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:29"},"returnParameters":{"id":8214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8235,"src":"6776:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":8212,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:29"},"scope":9665,"src":"6719:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8262,"nodeType":"Block","src":"7294:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"7308:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8245,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":8244,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":8248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:29","memberName":"max","nodeType":"MemberAccess","src":"7316:17:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8256,"nodeType":"IfStatement","src":"7304:105:29","trueBody":{"id":8255,"nodeType":"Block","src":"7335:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"7392:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8250,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"7356:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8254,"nodeType":"RevertStatement","src":"7349:49:29"}]}},{"expression":{"arguments":[{"id":8259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"7433:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8257,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:29","typeDescriptions":{}}},"id":8260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8242,"id":8261,"nodeType":"Return","src":"7418:21:29"}]},"documentation":{"id":8236,"nodeType":"StructuredDocumentation","src":"6943:280:29","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8263,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:29","nodeType":"FunctionDefinition","parameters":{"id":8239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8238,"mutability":"mutable","name":"value","nameLocation":"7255:5:29","nodeType":"VariableDeclaration","scope":8263,"src":"7247:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8237,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:29"},"returnParameters":{"id":8242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8263,"src":"7285:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8240,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:29"},"scope":9665,"src":"7228:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8290,"nodeType":"Block","src":"7803:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8266,"src":"7817:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8273,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":8272,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":8276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:29","memberName":"max","nodeType":"MemberAccess","src":"7825:17:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8284,"nodeType":"IfStatement","src":"7813:105:29","trueBody":{"id":8283,"nodeType":"Block","src":"7844:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8266,"src":"7901:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8278,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"7865:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8282,"nodeType":"RevertStatement","src":"7858:49:29"}]}},{"expression":{"arguments":[{"id":8287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8266,"src":"7942:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8285,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:29","typeDescriptions":{}}},"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":8270,"id":8289,"nodeType":"Return","src":"7927:21:29"}]},"documentation":{"id":8264,"nodeType":"StructuredDocumentation","src":"7452:280:29","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8291,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:29","nodeType":"FunctionDefinition","parameters":{"id":8267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8266,"mutability":"mutable","name":"value","nameLocation":"7764:5:29","nodeType":"VariableDeclaration","scope":8291,"src":"7756:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8265,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:29"},"returnParameters":{"id":8270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8291,"src":"7794:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":8268,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:29"},"scope":9665,"src":"7737:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8318,"nodeType":"Block","src":"8312:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8294,"src":"8326:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8301,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":8300,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":8304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:29","memberName":"max","nodeType":"MemberAccess","src":"8334:17:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8312,"nodeType":"IfStatement","src":"8322:105:29","trueBody":{"id":8311,"nodeType":"Block","src":"8353:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8294,"src":"8410:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8306,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"8374:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8310,"nodeType":"RevertStatement","src":"8367:49:29"}]}},{"expression":{"arguments":[{"id":8315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8294,"src":"8451:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8313,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:29","typeDescriptions":{}}},"id":8316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":8298,"id":8317,"nodeType":"Return","src":"8436:21:29"}]},"documentation":{"id":8292,"nodeType":"StructuredDocumentation","src":"7961:280:29","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8319,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:29","nodeType":"FunctionDefinition","parameters":{"id":8295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8294,"mutability":"mutable","name":"value","nameLocation":"8273:5:29","nodeType":"VariableDeclaration","scope":8319,"src":"8265:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8293,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:29"},"returnParameters":{"id":8298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8319,"src":"8303:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":8296,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:29"},"scope":9665,"src":"8246:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8346,"nodeType":"Block","src":"8821:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8322,"src":"8835:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8329,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":8328,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":8332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:29","memberName":"max","nodeType":"MemberAccess","src":"8843:17:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8340,"nodeType":"IfStatement","src":"8831:105:29","trueBody":{"id":8339,"nodeType":"Block","src":"8862:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8322,"src":"8919:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8334,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"8883:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8338,"nodeType":"RevertStatement","src":"8876:49:29"}]}},{"expression":{"arguments":[{"id":8343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8322,"src":"8960:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8341,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:29","typeDescriptions":{}}},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":8326,"id":8345,"nodeType":"Return","src":"8945:21:29"}]},"documentation":{"id":8320,"nodeType":"StructuredDocumentation","src":"8470:280:29","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8347,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:29","nodeType":"FunctionDefinition","parameters":{"id":8323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8322,"mutability":"mutable","name":"value","nameLocation":"8782:5:29","nodeType":"VariableDeclaration","scope":8347,"src":"8774:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8321,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:29"},"returnParameters":{"id":8326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8347,"src":"8812:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":8324,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:29"},"scope":9665,"src":"8755:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8374,"nodeType":"Block","src":"9330:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"9344:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8357,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":8356,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":8360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:29","memberName":"max","nodeType":"MemberAccess","src":"9352:17:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8368,"nodeType":"IfStatement","src":"9340:105:29","trueBody":{"id":8367,"nodeType":"Block","src":"9371:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"9428:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8362,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"9392:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8366,"nodeType":"RevertStatement","src":"9385:49:29"}]}},{"expression":{"arguments":[{"id":8371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"9469:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8369,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:29","typeDescriptions":{}}},"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":8354,"id":8373,"nodeType":"Return","src":"9454:21:29"}]},"documentation":{"id":8348,"nodeType":"StructuredDocumentation","src":"8979:280:29","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8375,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:29","nodeType":"FunctionDefinition","parameters":{"id":8351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8350,"mutability":"mutable","name":"value","nameLocation":"9291:5:29","nodeType":"VariableDeclaration","scope":8375,"src":"9283:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8349,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:29"},"returnParameters":{"id":8354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8375,"src":"9321:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":8352,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:29"},"scope":9665,"src":"9264:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8402,"nodeType":"Block","src":"9839:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"9853:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8385,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":8384,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":8388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:29","memberName":"max","nodeType":"MemberAccess","src":"9861:17:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8396,"nodeType":"IfStatement","src":"9849:105:29","trueBody":{"id":8395,"nodeType":"Block","src":"9880:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"9937:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8390,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"9901:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8394,"nodeType":"RevertStatement","src":"9894:49:29"}]}},{"expression":{"arguments":[{"id":8399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"9978:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8397,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:29","typeDescriptions":{}}},"id":8400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":8382,"id":8401,"nodeType":"Return","src":"9963:21:29"}]},"documentation":{"id":8376,"nodeType":"StructuredDocumentation","src":"9488:280:29","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8403,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:29","nodeType":"FunctionDefinition","parameters":{"id":8379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8378,"mutability":"mutable","name":"value","nameLocation":"9800:5:29","nodeType":"VariableDeclaration","scope":8403,"src":"9792:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8377,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:29"},"returnParameters":{"id":8382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8403,"src":"9830:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":8380,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:29"},"scope":9665,"src":"9773:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8430,"nodeType":"Block","src":"10348:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"10362:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8413,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":8412,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":8416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:29","memberName":"max","nodeType":"MemberAccess","src":"10370:17:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8424,"nodeType":"IfStatement","src":"10358:105:29","trueBody":{"id":8423,"nodeType":"Block","src":"10389:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"10446:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8418,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"10410:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8422,"nodeType":"RevertStatement","src":"10403:49:29"}]}},{"expression":{"arguments":[{"id":8427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"10487:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8425,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:29","typeDescriptions":{}}},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":8410,"id":8429,"nodeType":"Return","src":"10472:21:29"}]},"documentation":{"id":8404,"nodeType":"StructuredDocumentation","src":"9997:280:29","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8431,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:29","nodeType":"FunctionDefinition","parameters":{"id":8407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8406,"mutability":"mutable","name":"value","nameLocation":"10309:5:29","nodeType":"VariableDeclaration","scope":8431,"src":"10301:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8405,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:29"},"returnParameters":{"id":8410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8431,"src":"10339:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8408,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:29"},"scope":9665,"src":"10282:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8458,"nodeType":"Block","src":"10857:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"10871:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8441,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":8440,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":8444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:29","memberName":"max","nodeType":"MemberAccess","src":"10879:17:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8452,"nodeType":"IfStatement","src":"10867:105:29","trueBody":{"id":8451,"nodeType":"Block","src":"10898:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"10955:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8446,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"10919:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8450,"nodeType":"RevertStatement","src":"10912:49:29"}]}},{"expression":{"arguments":[{"id":8455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"10996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8453,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:29","typeDescriptions":{}}},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":8438,"id":8457,"nodeType":"Return","src":"10981:21:29"}]},"documentation":{"id":8432,"nodeType":"StructuredDocumentation","src":"10506:280:29","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8459,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:29","nodeType":"FunctionDefinition","parameters":{"id":8435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8434,"mutability":"mutable","name":"value","nameLocation":"10818:5:29","nodeType":"VariableDeclaration","scope":8459,"src":"10810:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8433,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:29"},"returnParameters":{"id":8438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8459,"src":"10848:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":8436,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:29"},"scope":9665,"src":"10791:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8486,"nodeType":"Block","src":"11360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"11374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8469,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":8468,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":8472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:29","memberName":"max","nodeType":"MemberAccess","src":"11382:16:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8480,"nodeType":"IfStatement","src":"11370:103:29","trueBody":{"id":8479,"nodeType":"Block","src":"11400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"11456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8474,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"11421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8478,"nodeType":"RevertStatement","src":"11414:48:29"}]}},{"expression":{"arguments":[{"id":8483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"11496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8481,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:29","typeDescriptions":{}}},"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":8466,"id":8485,"nodeType":"Return","src":"11482:20:29"}]},"documentation":{"id":8460,"nodeType":"StructuredDocumentation","src":"11015:276:29","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8487,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:29","nodeType":"FunctionDefinition","parameters":{"id":8463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8462,"mutability":"mutable","name":"value","nameLocation":"11322:5:29","nodeType":"VariableDeclaration","scope":8487,"src":"11314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8461,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:29"},"returnParameters":{"id":8466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8487,"src":"11352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8464,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:29"},"scope":9665,"src":"11296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8514,"nodeType":"Block","src":"11860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"11874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8497,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":8496,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":8500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:29","memberName":"max","nodeType":"MemberAccess","src":"11882:16:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8508,"nodeType":"IfStatement","src":"11870:103:29","trueBody":{"id":8507,"nodeType":"Block","src":"11900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"11956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8502,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"11921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8506,"nodeType":"RevertStatement","src":"11914:48:29"}]}},{"expression":{"arguments":[{"id":8511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"11996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8509,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:29","typeDescriptions":{}}},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":8494,"id":8513,"nodeType":"Return","src":"11982:20:29"}]},"documentation":{"id":8488,"nodeType":"StructuredDocumentation","src":"11515:276:29","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8515,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:29","nodeType":"FunctionDefinition","parameters":{"id":8491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8490,"mutability":"mutable","name":"value","nameLocation":"11822:5:29","nodeType":"VariableDeclaration","scope":8515,"src":"11814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8489,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:29"},"returnParameters":{"id":8494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8515,"src":"11852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":8492,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:29"},"scope":9665,"src":"11796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8542,"nodeType":"Block","src":"12360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8518,"src":"12374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8525,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":8524,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":8528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:29","memberName":"max","nodeType":"MemberAccess","src":"12382:16:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8536,"nodeType":"IfStatement","src":"12370:103:29","trueBody":{"id":8535,"nodeType":"Block","src":"12400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8518,"src":"12456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8530,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"12421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8534,"nodeType":"RevertStatement","src":"12414:48:29"}]}},{"expression":{"arguments":[{"id":8539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8518,"src":"12496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8537,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:29","typeDescriptions":{}}},"id":8540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":8522,"id":8541,"nodeType":"Return","src":"12482:20:29"}]},"documentation":{"id":8516,"nodeType":"StructuredDocumentation","src":"12015:276:29","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8543,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:29","nodeType":"FunctionDefinition","parameters":{"id":8519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8518,"mutability":"mutable","name":"value","nameLocation":"12322:5:29","nodeType":"VariableDeclaration","scope":8543,"src":"12314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8517,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:29"},"returnParameters":{"id":8522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8543,"src":"12352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8520,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:29"},"scope":9665,"src":"12296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8570,"nodeType":"Block","src":"12860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"12874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8553,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":8552,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":8556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:29","memberName":"max","nodeType":"MemberAccess","src":"12882:16:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8564,"nodeType":"IfStatement","src":"12870:103:29","trueBody":{"id":8563,"nodeType":"Block","src":"12900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"12956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8558,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"12921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8562,"nodeType":"RevertStatement","src":"12914:48:29"}]}},{"expression":{"arguments":[{"id":8567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"12996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8565,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:29","typeDescriptions":{}}},"id":8568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":8550,"id":8569,"nodeType":"Return","src":"12982:20:29"}]},"documentation":{"id":8544,"nodeType":"StructuredDocumentation","src":"12515:276:29","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8571,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:29","nodeType":"FunctionDefinition","parameters":{"id":8547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8546,"mutability":"mutable","name":"value","nameLocation":"12822:5:29","nodeType":"VariableDeclaration","scope":8571,"src":"12814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8545,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:29"},"returnParameters":{"id":8550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8571,"src":"12852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":8548,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:29"},"scope":9665,"src":"12796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8598,"nodeType":"Block","src":"13360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"13374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8581,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":8580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":8584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:29","memberName":"max","nodeType":"MemberAccess","src":"13382:16:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8592,"nodeType":"IfStatement","src":"13370:103:29","trueBody":{"id":8591,"nodeType":"Block","src":"13400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"13456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8586,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"13421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8590,"nodeType":"RevertStatement","src":"13414:48:29"}]}},{"expression":{"arguments":[{"id":8595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"13496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8593,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:29","typeDescriptions":{}}},"id":8596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8578,"id":8597,"nodeType":"Return","src":"13482:20:29"}]},"documentation":{"id":8572,"nodeType":"StructuredDocumentation","src":"13015:276:29","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8599,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:29","nodeType":"FunctionDefinition","parameters":{"id":8575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8574,"mutability":"mutable","name":"value","nameLocation":"13322:5:29","nodeType":"VariableDeclaration","scope":8599,"src":"13314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8573,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:29"},"returnParameters":{"id":8578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8599,"src":"13352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8576,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:29"},"scope":9665,"src":"13296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8626,"nodeType":"Block","src":"13860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"13874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8609,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":8608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":8612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:29","memberName":"max","nodeType":"MemberAccess","src":"13882:16:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8620,"nodeType":"IfStatement","src":"13870:103:29","trueBody":{"id":8619,"nodeType":"Block","src":"13900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"13956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8614,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"13921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8618,"nodeType":"RevertStatement","src":"13914:48:29"}]}},{"expression":{"arguments":[{"id":8623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"13996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8621,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:29","typeDescriptions":{}}},"id":8624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":8606,"id":8625,"nodeType":"Return","src":"13982:20:29"}]},"documentation":{"id":8600,"nodeType":"StructuredDocumentation","src":"13515:276:29","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8627,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:29","nodeType":"FunctionDefinition","parameters":{"id":8603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8602,"mutability":"mutable","name":"value","nameLocation":"13822:5:29","nodeType":"VariableDeclaration","scope":8627,"src":"13814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8601,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:29"},"returnParameters":{"id":8606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8627,"src":"13852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":8604,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:29"},"scope":9665,"src":"13796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8654,"nodeType":"Block","src":"14360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"14374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8637,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":8636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":8640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:29","memberName":"max","nodeType":"MemberAccess","src":"14382:16:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8648,"nodeType":"IfStatement","src":"14370:103:29","trueBody":{"id":8647,"nodeType":"Block","src":"14400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"14456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8642,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"14421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8646,"nodeType":"RevertStatement","src":"14414:48:29"}]}},{"expression":{"arguments":[{"id":8651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"14496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8649,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:29","typeDescriptions":{}}},"id":8652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8634,"id":8653,"nodeType":"Return","src":"14482:20:29"}]},"documentation":{"id":8628,"nodeType":"StructuredDocumentation","src":"14015:276:29","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8655,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:29","nodeType":"FunctionDefinition","parameters":{"id":8631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8630,"mutability":"mutable","name":"value","nameLocation":"14322:5:29","nodeType":"VariableDeclaration","scope":8655,"src":"14314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8629,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:29"},"returnParameters":{"id":8634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8655,"src":"14352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8632,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:29"},"scope":9665,"src":"14296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8682,"nodeType":"Block","src":"14860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8658,"src":"14874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8665,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":8664,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":8668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:29","memberName":"max","nodeType":"MemberAccess","src":"14882:16:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8676,"nodeType":"IfStatement","src":"14870:103:29","trueBody":{"id":8675,"nodeType":"Block","src":"14900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8658,"src":"14956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8670,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"14921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8674,"nodeType":"RevertStatement","src":"14914:48:29"}]}},{"expression":{"arguments":[{"id":8679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8658,"src":"14996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8677,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:29","typeDescriptions":{}}},"id":8680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":8662,"id":8681,"nodeType":"Return","src":"14982:20:29"}]},"documentation":{"id":8656,"nodeType":"StructuredDocumentation","src":"14515:276:29","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8683,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:29","nodeType":"FunctionDefinition","parameters":{"id":8659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8658,"mutability":"mutable","name":"value","nameLocation":"14822:5:29","nodeType":"VariableDeclaration","scope":8683,"src":"14814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8657,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:29"},"returnParameters":{"id":8662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8683,"src":"14852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8660,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:29"},"scope":9665,"src":"14796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8710,"nodeType":"Block","src":"15360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"15374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8693,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":8692,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":8696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:29","memberName":"max","nodeType":"MemberAccess","src":"15382:16:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8704,"nodeType":"IfStatement","src":"15370:103:29","trueBody":{"id":8703,"nodeType":"Block","src":"15400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"15456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8698,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"15421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8702,"nodeType":"RevertStatement","src":"15414:48:29"}]}},{"expression":{"arguments":[{"id":8707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"15496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8705,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:29","typeDescriptions":{}}},"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8690,"id":8709,"nodeType":"Return","src":"15482:20:29"}]},"documentation":{"id":8684,"nodeType":"StructuredDocumentation","src":"15015:276:29","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8711,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:29","nodeType":"FunctionDefinition","parameters":{"id":8687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8686,"mutability":"mutable","name":"value","nameLocation":"15322:5:29","nodeType":"VariableDeclaration","scope":8711,"src":"15314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8685,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:29"},"returnParameters":{"id":8690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8711,"src":"15352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8688,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:29"},"scope":9665,"src":"15296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8738,"nodeType":"Block","src":"15860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"15874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8721,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":8720,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":8724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:29","memberName":"max","nodeType":"MemberAccess","src":"15882:16:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8732,"nodeType":"IfStatement","src":"15870:103:29","trueBody":{"id":8731,"nodeType":"Block","src":"15900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"15956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8726,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"15921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8730,"nodeType":"RevertStatement","src":"15914:48:29"}]}},{"expression":{"arguments":[{"id":8735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"15996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8733,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:29","typeDescriptions":{}}},"id":8736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":8718,"id":8737,"nodeType":"Return","src":"15982:20:29"}]},"documentation":{"id":8712,"nodeType":"StructuredDocumentation","src":"15515:276:29","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8739,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:29","nodeType":"FunctionDefinition","parameters":{"id":8715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8714,"mutability":"mutable","name":"value","nameLocation":"15822:5:29","nodeType":"VariableDeclaration","scope":8739,"src":"15814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8713,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:29"},"returnParameters":{"id":8718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8739,"src":"15852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8716,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:29"},"scope":9665,"src":"15796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8766,"nodeType":"Block","src":"16360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"16374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8749,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":8748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":8752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:29","memberName":"max","nodeType":"MemberAccess","src":"16382:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8760,"nodeType":"IfStatement","src":"16370:103:29","trueBody":{"id":8759,"nodeType":"Block","src":"16400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"16456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8754,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"16421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8758,"nodeType":"RevertStatement","src":"16414:48:29"}]}},{"expression":{"arguments":[{"id":8763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"16496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8761,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:29","typeDescriptions":{}}},"id":8764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":8746,"id":8765,"nodeType":"Return","src":"16482:20:29"}]},"documentation":{"id":8740,"nodeType":"StructuredDocumentation","src":"16015:276:29","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8767,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:29","nodeType":"FunctionDefinition","parameters":{"id":8743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8742,"mutability":"mutable","name":"value","nameLocation":"16322:5:29","nodeType":"VariableDeclaration","scope":8767,"src":"16314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8741,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:29"},"returnParameters":{"id":8746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8767,"src":"16352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8744,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:29"},"scope":9665,"src":"16296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8794,"nodeType":"Block","src":"16854:146:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"16868:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8777,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":8776,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":8780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:29","memberName":"max","nodeType":"MemberAccess","src":"16876:15:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8788,"nodeType":"IfStatement","src":"16864:101:29","trueBody":{"id":8787,"nodeType":"Block","src":"16893:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"16948:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8782,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"16914:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8786,"nodeType":"RevertStatement","src":"16907:47:29"}]}},{"expression":{"arguments":[{"id":8791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"16987:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8789,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:29","typeDescriptions":{}}},"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8774,"id":8793,"nodeType":"Return","src":"16974:19:29"}]},"documentation":{"id":8768,"nodeType":"StructuredDocumentation","src":"16515:272:29","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8795,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:29","nodeType":"FunctionDefinition","parameters":{"id":8771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8770,"mutability":"mutable","name":"value","nameLocation":"16817:5:29","nodeType":"VariableDeclaration","scope":8795,"src":"16809:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8769,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:29"},"returnParameters":{"id":8774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8795,"src":"16847:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8772,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:29"},"scope":9665,"src":"16792:208:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8817,"nodeType":"Block","src":"17236:128:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"17250:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":8804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8811,"nodeType":"IfStatement","src":"17246:81:29","trueBody":{"id":8810,"nodeType":"Block","src":"17261:66:29","statements":[{"errorCall":{"arguments":[{"id":8807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"17310:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8806,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7915,"src":"17282:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":8808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8809,"nodeType":"RevertStatement","src":"17275:41:29"}]}},{"expression":{"arguments":[{"id":8814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"17351:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8812,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:29","typeDescriptions":{}}},"id":8815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8802,"id":8816,"nodeType":"Return","src":"17336:21:29"}]},"documentation":{"id":8796,"nodeType":"StructuredDocumentation","src":"17006:160:29","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":8818,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:29","nodeType":"FunctionDefinition","parameters":{"id":8799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8798,"mutability":"mutable","name":"value","nameLocation":"17197:5:29","nodeType":"VariableDeclaration","scope":8818,"src":"17190:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8797,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:29"},"returnParameters":{"id":8802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8818,"src":"17227:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8800,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:29"},"scope":9665,"src":"17171:193:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8843,"nodeType":"Block","src":"17761:150:29","statements":[{"expression":{"id":8831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8824,"src":"17771:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"17791:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":8827,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:29","typeDescriptions":{}}},"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":8832,"nodeType":"ExpressionStatement","src":"17771:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8824,"src":"17811:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"17825:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8842,"nodeType":"IfStatement","src":"17807:98:29","trueBody":{"id":8841,"nodeType":"Block","src":"17832:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"17888:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8836,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"17853:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8840,"nodeType":"RevertStatement","src":"17846:48:29"}]}}]},"documentation":{"id":8819,"nodeType":"StructuredDocumentation","src":"17370:312:29","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8844,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:29","nodeType":"FunctionDefinition","parameters":{"id":8822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8821,"mutability":"mutable","name":"value","nameLocation":"17712:5:29","nodeType":"VariableDeclaration","scope":8844,"src":"17705:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8820,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:29"},"returnParameters":{"id":8825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8824,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:29","nodeType":"VariableDeclaration","scope":8844,"src":"17742:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":8823,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:29"},"scope":9665,"src":"17687:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8869,"nodeType":"Block","src":"18308:150:29","statements":[{"expression":{"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8850,"src":"18318:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"18338:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":8853,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:29","typeDescriptions":{}}},"id":8856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":8858,"nodeType":"ExpressionStatement","src":"18318:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8850,"src":"18358:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"18372:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8868,"nodeType":"IfStatement","src":"18354:98:29","trueBody":{"id":8867,"nodeType":"Block","src":"18379:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"18435:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8862,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"18400:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8866,"nodeType":"RevertStatement","src":"18393:48:29"}]}}]},"documentation":{"id":8845,"nodeType":"StructuredDocumentation","src":"17917:312:29","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8870,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:29","nodeType":"FunctionDefinition","parameters":{"id":8848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8847,"mutability":"mutable","name":"value","nameLocation":"18259:5:29","nodeType":"VariableDeclaration","scope":8870,"src":"18252:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8846,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:29"},"returnParameters":{"id":8851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8850,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:29","nodeType":"VariableDeclaration","scope":8870,"src":"18289:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":8849,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:29"},"scope":9665,"src":"18234:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8895,"nodeType":"Block","src":"18855:150:29","statements":[{"expression":{"id":8883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8876,"src":"18865:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"18885:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":8879,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:29","typeDescriptions":{}}},"id":8882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":8884,"nodeType":"ExpressionStatement","src":"18865:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8876,"src":"18905:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"18919:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8894,"nodeType":"IfStatement","src":"18901:98:29","trueBody":{"id":8893,"nodeType":"Block","src":"18926:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"18982:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8888,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"18947:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8892,"nodeType":"RevertStatement","src":"18940:48:29"}]}}]},"documentation":{"id":8871,"nodeType":"StructuredDocumentation","src":"18464:312:29","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8896,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:29","nodeType":"FunctionDefinition","parameters":{"id":8874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8873,"mutability":"mutable","name":"value","nameLocation":"18806:5:29","nodeType":"VariableDeclaration","scope":8896,"src":"18799:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8872,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:29"},"returnParameters":{"id":8877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8876,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:29","nodeType":"VariableDeclaration","scope":8896,"src":"18836:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":8875,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:29"},"scope":9665,"src":"18781:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8921,"nodeType":"Block","src":"19402:150:29","statements":[{"expression":{"id":8909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"19412:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8899,"src":"19432:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":8905,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:29","typeDescriptions":{}}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":8910,"nodeType":"ExpressionStatement","src":"19412:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"19452:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8899,"src":"19466:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8920,"nodeType":"IfStatement","src":"19448:98:29","trueBody":{"id":8919,"nodeType":"Block","src":"19473:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8899,"src":"19529:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8914,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"19494:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8918,"nodeType":"RevertStatement","src":"19487:48:29"}]}}]},"documentation":{"id":8897,"nodeType":"StructuredDocumentation","src":"19011:312:29","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8922,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:29","nodeType":"FunctionDefinition","parameters":{"id":8900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8899,"mutability":"mutable","name":"value","nameLocation":"19353:5:29","nodeType":"VariableDeclaration","scope":8922,"src":"19346:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8898,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:29"},"returnParameters":{"id":8903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8902,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:29","nodeType":"VariableDeclaration","scope":8922,"src":"19383:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":8901,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:29"},"scope":9665,"src":"19328:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8947,"nodeType":"Block","src":"19949:150:29","statements":[{"expression":{"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"19959:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"19979:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":8931,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:29","typeDescriptions":{}}},"id":8934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":8936,"nodeType":"ExpressionStatement","src":"19959:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"19999:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"20013:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8946,"nodeType":"IfStatement","src":"19995:98:29","trueBody":{"id":8945,"nodeType":"Block","src":"20020:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"20076:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8940,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"20041:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8944,"nodeType":"RevertStatement","src":"20034:48:29"}]}}]},"documentation":{"id":8923,"nodeType":"StructuredDocumentation","src":"19558:312:29","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8948,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:29","nodeType":"FunctionDefinition","parameters":{"id":8926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8925,"mutability":"mutable","name":"value","nameLocation":"19900:5:29","nodeType":"VariableDeclaration","scope":8948,"src":"19893:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8924,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:29"},"returnParameters":{"id":8929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8928,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:29","nodeType":"VariableDeclaration","scope":8948,"src":"19930:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":8927,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:29"},"scope":9665,"src":"19875:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8973,"nodeType":"Block","src":"20496:150:29","statements":[{"expression":{"id":8961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"20506:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"20526:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8957,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:29","typeDescriptions":{}}},"id":8960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8962,"nodeType":"ExpressionStatement","src":"20506:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"20546:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"20560:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8972,"nodeType":"IfStatement","src":"20542:98:29","trueBody":{"id":8971,"nodeType":"Block","src":"20567:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"20623:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8966,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"20588:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8970,"nodeType":"RevertStatement","src":"20581:48:29"}]}}]},"documentation":{"id":8949,"nodeType":"StructuredDocumentation","src":"20105:312:29","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8974,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:29","nodeType":"FunctionDefinition","parameters":{"id":8952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8951,"mutability":"mutable","name":"value","nameLocation":"20447:5:29","nodeType":"VariableDeclaration","scope":8974,"src":"20440:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8950,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:29"},"returnParameters":{"id":8955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8954,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:29","nodeType":"VariableDeclaration","scope":8974,"src":"20477:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8953,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:29"},"scope":9665,"src":"20422:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8999,"nodeType":"Block","src":"21043:150:29","statements":[{"expression":{"id":8987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8980,"src":"21053:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8977,"src":"21073:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8983,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:29","typeDescriptions":{}}},"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8988,"nodeType":"ExpressionStatement","src":"21053:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8989,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8980,"src":"21093:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8977,"src":"21107:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8998,"nodeType":"IfStatement","src":"21089:98:29","trueBody":{"id":8997,"nodeType":"Block","src":"21114:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8977,"src":"21170:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8992,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"21135:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8996,"nodeType":"RevertStatement","src":"21128:48:29"}]}}]},"documentation":{"id":8975,"nodeType":"StructuredDocumentation","src":"20652:312:29","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":9000,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:29","nodeType":"FunctionDefinition","parameters":{"id":8978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8977,"mutability":"mutable","name":"value","nameLocation":"20994:5:29","nodeType":"VariableDeclaration","scope":9000,"src":"20987:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8976,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:29"},"returnParameters":{"id":8981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8980,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:29","nodeType":"VariableDeclaration","scope":9000,"src":"21024:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8979,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:29"},"scope":9665,"src":"20969:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9025,"nodeType":"Block","src":"21590:150:29","statements":[{"expression":{"id":9013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9006,"src":"21600:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9003,"src":"21620:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":9009,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:29","typeDescriptions":{}}},"id":9012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":9014,"nodeType":"ExpressionStatement","src":"21600:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9006,"src":"21640:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9003,"src":"21654:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9024,"nodeType":"IfStatement","src":"21636:98:29","trueBody":{"id":9023,"nodeType":"Block","src":"21661:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":9019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":9020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9003,"src":"21717:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9018,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"21682:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9022,"nodeType":"RevertStatement","src":"21675:48:29"}]}}]},"documentation":{"id":9001,"nodeType":"StructuredDocumentation","src":"21199:312:29","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":9026,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:29","nodeType":"FunctionDefinition","parameters":{"id":9004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9003,"mutability":"mutable","name":"value","nameLocation":"21541:5:29","nodeType":"VariableDeclaration","scope":9026,"src":"21534:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9002,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:29"},"returnParameters":{"id":9007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9006,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:29","nodeType":"VariableDeclaration","scope":9026,"src":"21571:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":9005,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:29"},"scope":9665,"src":"21516:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9051,"nodeType":"Block","src":"22137:150:29","statements":[{"expression":{"id":9039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9032,"src":"22147:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"22167:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":9035,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:29","typeDescriptions":{}}},"id":9038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":9040,"nodeType":"ExpressionStatement","src":"22147:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9032,"src":"22187:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"22201:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9050,"nodeType":"IfStatement","src":"22183:98:29","trueBody":{"id":9049,"nodeType":"Block","src":"22208:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":9045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":9046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"22264:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9044,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"22229:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9048,"nodeType":"RevertStatement","src":"22222:48:29"}]}}]},"documentation":{"id":9027,"nodeType":"StructuredDocumentation","src":"21746:312:29","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":9052,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:29","nodeType":"FunctionDefinition","parameters":{"id":9030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9029,"mutability":"mutable","name":"value","nameLocation":"22088:5:29","nodeType":"VariableDeclaration","scope":9052,"src":"22081:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9028,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:29"},"returnParameters":{"id":9033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9032,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:29","nodeType":"VariableDeclaration","scope":9052,"src":"22118:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":9031,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:29"},"scope":9665,"src":"22063:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9077,"nodeType":"Block","src":"22684:150:29","statements":[{"expression":{"id":9065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"22694:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"22714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":9061,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:29","typeDescriptions":{}}},"id":9064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":9066,"nodeType":"ExpressionStatement","src":"22694:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9067,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"22734:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"22748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9076,"nodeType":"IfStatement","src":"22730:98:29","trueBody":{"id":9075,"nodeType":"Block","src":"22755:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":9071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":9072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"22811:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9070,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"22776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9074,"nodeType":"RevertStatement","src":"22769:48:29"}]}}]},"documentation":{"id":9053,"nodeType":"StructuredDocumentation","src":"22293:312:29","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":9078,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:29","nodeType":"FunctionDefinition","parameters":{"id":9056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9055,"mutability":"mutable","name":"value","nameLocation":"22635:5:29","nodeType":"VariableDeclaration","scope":9078,"src":"22628:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9054,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:29"},"returnParameters":{"id":9059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9058,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:29","nodeType":"VariableDeclaration","scope":9078,"src":"22665:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":9057,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:29"},"scope":9665,"src":"22610:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9103,"nodeType":"Block","src":"23231:150:29","statements":[{"expression":{"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9084,"src":"23241:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"23261:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":9087,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:29","typeDescriptions":{}}},"id":9090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":9092,"nodeType":"ExpressionStatement","src":"23241:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9093,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9084,"src":"23281:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"23295:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9102,"nodeType":"IfStatement","src":"23277:98:29","trueBody":{"id":9101,"nodeType":"Block","src":"23302:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":9097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":9098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"23358:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9096,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"23323:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9100,"nodeType":"RevertStatement","src":"23316:48:29"}]}}]},"documentation":{"id":9079,"nodeType":"StructuredDocumentation","src":"22840:312:29","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":9104,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:29","nodeType":"FunctionDefinition","parameters":{"id":9082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9081,"mutability":"mutable","name":"value","nameLocation":"23182:5:29","nodeType":"VariableDeclaration","scope":9104,"src":"23175:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9080,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:29"},"returnParameters":{"id":9085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9084,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:29","nodeType":"VariableDeclaration","scope":9104,"src":"23212:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":9083,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:29"},"scope":9665,"src":"23157:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9129,"nodeType":"Block","src":"23778:150:29","statements":[{"expression":{"id":9117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9110,"src":"23788:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9107,"src":"23808:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":9113,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:29","typeDescriptions":{}}},"id":9116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":9118,"nodeType":"ExpressionStatement","src":"23788:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9119,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9110,"src":"23828:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9107,"src":"23842:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9128,"nodeType":"IfStatement","src":"23824:98:29","trueBody":{"id":9127,"nodeType":"Block","src":"23849:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":9123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":9124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9107,"src":"23905:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9122,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"23870:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9126,"nodeType":"RevertStatement","src":"23863:48:29"}]}}]},"documentation":{"id":9105,"nodeType":"StructuredDocumentation","src":"23387:312:29","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":9130,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:29","nodeType":"FunctionDefinition","parameters":{"id":9108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9107,"mutability":"mutable","name":"value","nameLocation":"23729:5:29","nodeType":"VariableDeclaration","scope":9130,"src":"23722:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9106,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:29"},"returnParameters":{"id":9111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9110,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:29","nodeType":"VariableDeclaration","scope":9130,"src":"23759:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":9109,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:29"},"scope":9665,"src":"23704:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9155,"nodeType":"Block","src":"24325:150:29","statements":[{"expression":{"id":9143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9136,"src":"24335:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9133,"src":"24355:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":9139,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:29","typeDescriptions":{}}},"id":9142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":9144,"nodeType":"ExpressionStatement","src":"24335:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9145,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9136,"src":"24375:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9133,"src":"24389:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9154,"nodeType":"IfStatement","src":"24371:98:29","trueBody":{"id":9153,"nodeType":"Block","src":"24396:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":9149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":9150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9133,"src":"24452:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9148,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"24417:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9152,"nodeType":"RevertStatement","src":"24410:48:29"}]}}]},"documentation":{"id":9131,"nodeType":"StructuredDocumentation","src":"23934:312:29","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":9156,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:29","nodeType":"FunctionDefinition","parameters":{"id":9134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9133,"mutability":"mutable","name":"value","nameLocation":"24276:5:29","nodeType":"VariableDeclaration","scope":9156,"src":"24269:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9132,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:29"},"returnParameters":{"id":9137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9136,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:29","nodeType":"VariableDeclaration","scope":9156,"src":"24306:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":9135,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:29"},"scope":9665,"src":"24251:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9181,"nodeType":"Block","src":"24872:150:29","statements":[{"expression":{"id":9169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"24882:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9159,"src":"24902:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":9165,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:29","typeDescriptions":{}}},"id":9168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":9170,"nodeType":"ExpressionStatement","src":"24882:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9171,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"24922:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9159,"src":"24936:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9180,"nodeType":"IfStatement","src":"24918:98:29","trueBody":{"id":9179,"nodeType":"Block","src":"24943:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":9175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":9176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9159,"src":"24999:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9174,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"24964:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9178,"nodeType":"RevertStatement","src":"24957:48:29"}]}}]},"documentation":{"id":9157,"nodeType":"StructuredDocumentation","src":"24481:312:29","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":9182,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:29","nodeType":"FunctionDefinition","parameters":{"id":9160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9159,"mutability":"mutable","name":"value","nameLocation":"24823:5:29","nodeType":"VariableDeclaration","scope":9182,"src":"24816:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9158,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:29"},"returnParameters":{"id":9163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9162,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:29","nodeType":"VariableDeclaration","scope":9182,"src":"24853:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":9161,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:29"},"scope":9665,"src":"24798:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9207,"nodeType":"Block","src":"25419:150:29","statements":[{"expression":{"id":9195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9188,"src":"25429:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9185,"src":"25449:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":9191,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:29","typeDescriptions":{}}},"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":9196,"nodeType":"ExpressionStatement","src":"25429:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9197,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9188,"src":"25469:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9185,"src":"25483:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9206,"nodeType":"IfStatement","src":"25465:98:29","trueBody":{"id":9205,"nodeType":"Block","src":"25490:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":9201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":9202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9185,"src":"25546:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9200,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"25511:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9204,"nodeType":"RevertStatement","src":"25504:48:29"}]}}]},"documentation":{"id":9183,"nodeType":"StructuredDocumentation","src":"25028:312:29","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":9208,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:29","nodeType":"FunctionDefinition","parameters":{"id":9186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9185,"mutability":"mutable","name":"value","nameLocation":"25370:5:29","nodeType":"VariableDeclaration","scope":9208,"src":"25363:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9184,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:29"},"returnParameters":{"id":9189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9188,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:29","nodeType":"VariableDeclaration","scope":9208,"src":"25400:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":9187,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:29"},"scope":9665,"src":"25345:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9233,"nodeType":"Block","src":"25966:150:29","statements":[{"expression":{"id":9221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9214,"src":"25976:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"25996:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":9217,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:29","typeDescriptions":{}}},"id":9220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":9222,"nodeType":"ExpressionStatement","src":"25976:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9223,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9214,"src":"26016:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"26030:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9232,"nodeType":"IfStatement","src":"26012:98:29","trueBody":{"id":9231,"nodeType":"Block","src":"26037:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":9227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":9228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"26093:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9226,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"26058:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9230,"nodeType":"RevertStatement","src":"26051:48:29"}]}}]},"documentation":{"id":9209,"nodeType":"StructuredDocumentation","src":"25575:312:29","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":9234,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:29","nodeType":"FunctionDefinition","parameters":{"id":9212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9211,"mutability":"mutable","name":"value","nameLocation":"25917:5:29","nodeType":"VariableDeclaration","scope":9234,"src":"25910:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9210,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:29"},"returnParameters":{"id":9215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9214,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:29","nodeType":"VariableDeclaration","scope":9234,"src":"25947:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9213,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:29"},"scope":9665,"src":"25892:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9259,"nodeType":"Block","src":"26513:150:29","statements":[{"expression":{"id":9247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9240,"src":"26523:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9237,"src":"26543:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":9243,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:29","typeDescriptions":{}}},"id":9246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":9248,"nodeType":"ExpressionStatement","src":"26523:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9249,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9240,"src":"26563:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9237,"src":"26577:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9258,"nodeType":"IfStatement","src":"26559:98:29","trueBody":{"id":9257,"nodeType":"Block","src":"26584:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":9253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":9254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9237,"src":"26640:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9252,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"26605:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9256,"nodeType":"RevertStatement","src":"26598:48:29"}]}}]},"documentation":{"id":9235,"nodeType":"StructuredDocumentation","src":"26122:312:29","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":9260,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:29","nodeType":"FunctionDefinition","parameters":{"id":9238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9237,"mutability":"mutable","name":"value","nameLocation":"26464:5:29","nodeType":"VariableDeclaration","scope":9260,"src":"26457:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9236,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:29"},"returnParameters":{"id":9241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9240,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:29","nodeType":"VariableDeclaration","scope":9260,"src":"26494:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":9239,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:29"},"scope":9665,"src":"26439:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9285,"nodeType":"Block","src":"27060:150:29","statements":[{"expression":{"id":9273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9266,"src":"27070:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9263,"src":"27090:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":9269,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:29","typeDescriptions":{}}},"id":9272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":9274,"nodeType":"ExpressionStatement","src":"27070:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9275,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9266,"src":"27110:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9263,"src":"27124:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9284,"nodeType":"IfStatement","src":"27106:98:29","trueBody":{"id":9283,"nodeType":"Block","src":"27131:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":9279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":9280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9263,"src":"27187:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9278,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"27152:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9282,"nodeType":"RevertStatement","src":"27145:48:29"}]}}]},"documentation":{"id":9261,"nodeType":"StructuredDocumentation","src":"26669:312:29","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":9286,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:29","nodeType":"FunctionDefinition","parameters":{"id":9264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9263,"mutability":"mutable","name":"value","nameLocation":"27011:5:29","nodeType":"VariableDeclaration","scope":9286,"src":"27004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9262,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:29"},"returnParameters":{"id":9267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9266,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:29","nodeType":"VariableDeclaration","scope":9286,"src":"27041:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":9265,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:29"},"scope":9665,"src":"26986:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9311,"nodeType":"Block","src":"27607:150:29","statements":[{"expression":{"id":9299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9292,"src":"27617:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"27637:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":9295,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:29","typeDescriptions":{}}},"id":9298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":9300,"nodeType":"ExpressionStatement","src":"27617:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9301,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9292,"src":"27657:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"27671:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9310,"nodeType":"IfStatement","src":"27653:98:29","trueBody":{"id":9309,"nodeType":"Block","src":"27678:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":9305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":9306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"27734:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9304,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"27699:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9308,"nodeType":"RevertStatement","src":"27692:48:29"}]}}]},"documentation":{"id":9287,"nodeType":"StructuredDocumentation","src":"27216:312:29","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":9312,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:29","nodeType":"FunctionDefinition","parameters":{"id":9290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9289,"mutability":"mutable","name":"value","nameLocation":"27558:5:29","nodeType":"VariableDeclaration","scope":9312,"src":"27551:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9288,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:29"},"returnParameters":{"id":9293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9292,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:29","nodeType":"VariableDeclaration","scope":9312,"src":"27588:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":9291,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:29"},"scope":9665,"src":"27533:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9337,"nodeType":"Block","src":"28147:148:29","statements":[{"expression":{"id":9325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9318,"src":"28157:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9315,"src":"28176:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":9321,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:29","typeDescriptions":{}}},"id":9324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":9326,"nodeType":"ExpressionStatement","src":"28157:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9327,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9318,"src":"28196:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9315,"src":"28210:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9336,"nodeType":"IfStatement","src":"28192:97:29","trueBody":{"id":9335,"nodeType":"Block","src":"28217:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":9331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":9332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9315,"src":"28272:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9330,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"28238:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9334,"nodeType":"RevertStatement","src":"28231:47:29"}]}}]},"documentation":{"id":9313,"nodeType":"StructuredDocumentation","src":"27763:307:29","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":9338,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:29","nodeType":"FunctionDefinition","parameters":{"id":9316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9315,"mutability":"mutable","name":"value","nameLocation":"28099:5:29","nodeType":"VariableDeclaration","scope":9338,"src":"28092:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9314,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:29"},"returnParameters":{"id":9319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9318,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:29","nodeType":"VariableDeclaration","scope":9338,"src":"28129:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":9317,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:29"},"scope":9665,"src":"28075:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9363,"nodeType":"Block","src":"28685:148:29","statements":[{"expression":{"id":9351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9344,"src":"28695:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9341,"src":"28714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":9347,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:29","typeDescriptions":{}}},"id":9350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":9352,"nodeType":"ExpressionStatement","src":"28695:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9353,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9344,"src":"28734:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9341,"src":"28748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9362,"nodeType":"IfStatement","src":"28730:97:29","trueBody":{"id":9361,"nodeType":"Block","src":"28755:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":9357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":9358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9341,"src":"28810:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9356,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"28776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9360,"nodeType":"RevertStatement","src":"28769:47:29"}]}}]},"documentation":{"id":9339,"nodeType":"StructuredDocumentation","src":"28301:307:29","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":9364,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:29","nodeType":"FunctionDefinition","parameters":{"id":9342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9341,"mutability":"mutable","name":"value","nameLocation":"28637:5:29","nodeType":"VariableDeclaration","scope":9364,"src":"28630:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9340,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:29"},"returnParameters":{"id":9345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9344,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:29","nodeType":"VariableDeclaration","scope":9364,"src":"28667:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":9343,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:29"},"scope":9665,"src":"28613:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9389,"nodeType":"Block","src":"29223:148:29","statements":[{"expression":{"id":9377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9370,"src":"29233:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9367,"src":"29252:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":9373,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:29","typeDescriptions":{}}},"id":9376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":9378,"nodeType":"ExpressionStatement","src":"29233:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9379,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9370,"src":"29272:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9367,"src":"29286:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9388,"nodeType":"IfStatement","src":"29268:97:29","trueBody":{"id":9387,"nodeType":"Block","src":"29293:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":9383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":9384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9367,"src":"29348:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9382,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"29314:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9386,"nodeType":"RevertStatement","src":"29307:47:29"}]}}]},"documentation":{"id":9365,"nodeType":"StructuredDocumentation","src":"28839:307:29","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":9390,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:29","nodeType":"FunctionDefinition","parameters":{"id":9368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9367,"mutability":"mutable","name":"value","nameLocation":"29175:5:29","nodeType":"VariableDeclaration","scope":9390,"src":"29168:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9366,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:29"},"returnParameters":{"id":9371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9370,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:29","nodeType":"VariableDeclaration","scope":9390,"src":"29205:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":9369,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:29"},"scope":9665,"src":"29151:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9415,"nodeType":"Block","src":"29761:148:29","statements":[{"expression":{"id":9403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"29771:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9393,"src":"29790:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":9399,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:29","typeDescriptions":{}}},"id":9402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":9404,"nodeType":"ExpressionStatement","src":"29771:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9405,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"29810:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9393,"src":"29824:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9414,"nodeType":"IfStatement","src":"29806:97:29","trueBody":{"id":9413,"nodeType":"Block","src":"29831:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":9409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":9410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9393,"src":"29886:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9408,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"29852:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9412,"nodeType":"RevertStatement","src":"29845:47:29"}]}}]},"documentation":{"id":9391,"nodeType":"StructuredDocumentation","src":"29377:307:29","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":9416,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:29","nodeType":"FunctionDefinition","parameters":{"id":9394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9393,"mutability":"mutable","name":"value","nameLocation":"29713:5:29","nodeType":"VariableDeclaration","scope":9416,"src":"29706:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9392,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:29"},"returnParameters":{"id":9397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9396,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:29","nodeType":"VariableDeclaration","scope":9416,"src":"29743:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":9395,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:29"},"scope":9665,"src":"29689:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9441,"nodeType":"Block","src":"30299:148:29","statements":[{"expression":{"id":9429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"30309:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9419,"src":"30328:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":9425,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:29","typeDescriptions":{}}},"id":9428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":9430,"nodeType":"ExpressionStatement","src":"30309:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9431,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"30348:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9419,"src":"30362:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9440,"nodeType":"IfStatement","src":"30344:97:29","trueBody":{"id":9439,"nodeType":"Block","src":"30369:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":9435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":9436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9419,"src":"30424:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9434,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"30390:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9438,"nodeType":"RevertStatement","src":"30383:47:29"}]}}]},"documentation":{"id":9417,"nodeType":"StructuredDocumentation","src":"29915:307:29","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":9442,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:29","nodeType":"FunctionDefinition","parameters":{"id":9420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9419,"mutability":"mutable","name":"value","nameLocation":"30251:5:29","nodeType":"VariableDeclaration","scope":9442,"src":"30244:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9418,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:29"},"returnParameters":{"id":9423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9422,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:29","nodeType":"VariableDeclaration","scope":9442,"src":"30281:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9421,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:29"},"scope":9665,"src":"30227:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9467,"nodeType":"Block","src":"30837:148:29","statements":[{"expression":{"id":9455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9448,"src":"30847:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9445,"src":"30866:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":9451,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:29","typeDescriptions":{}}},"id":9454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":9456,"nodeType":"ExpressionStatement","src":"30847:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9457,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9448,"src":"30886:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9445,"src":"30900:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9466,"nodeType":"IfStatement","src":"30882:97:29","trueBody":{"id":9465,"nodeType":"Block","src":"30907:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":9461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":9462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9445,"src":"30962:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9460,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"30928:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9464,"nodeType":"RevertStatement","src":"30921:47:29"}]}}]},"documentation":{"id":9443,"nodeType":"StructuredDocumentation","src":"30453:307:29","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":9468,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:29","nodeType":"FunctionDefinition","parameters":{"id":9446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9445,"mutability":"mutable","name":"value","nameLocation":"30789:5:29","nodeType":"VariableDeclaration","scope":9468,"src":"30782:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9444,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:29"},"returnParameters":{"id":9449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9448,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:29","nodeType":"VariableDeclaration","scope":9468,"src":"30819:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":9447,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:29"},"scope":9665,"src":"30765:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9493,"nodeType":"Block","src":"31375:148:29","statements":[{"expression":{"id":9481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"31385:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9471,"src":"31404:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":9477,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:29","typeDescriptions":{}}},"id":9480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":9482,"nodeType":"ExpressionStatement","src":"31385:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9483,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"31424:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9471,"src":"31438:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9492,"nodeType":"IfStatement","src":"31420:97:29","trueBody":{"id":9491,"nodeType":"Block","src":"31445:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":9487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":9488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9471,"src":"31500:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9486,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"31466:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9490,"nodeType":"RevertStatement","src":"31459:47:29"}]}}]},"documentation":{"id":9469,"nodeType":"StructuredDocumentation","src":"30991:307:29","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":9494,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:29","nodeType":"FunctionDefinition","parameters":{"id":9472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9471,"mutability":"mutable","name":"value","nameLocation":"31327:5:29","nodeType":"VariableDeclaration","scope":9494,"src":"31320:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9470,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:29"},"returnParameters":{"id":9475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9474,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:29","nodeType":"VariableDeclaration","scope":9494,"src":"31357:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":9473,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:29"},"scope":9665,"src":"31303:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9519,"nodeType":"Block","src":"31913:148:29","statements":[{"expression":{"id":9507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9500,"src":"31923:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9497,"src":"31942:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":9503,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:29","typeDescriptions":{}}},"id":9506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":9508,"nodeType":"ExpressionStatement","src":"31923:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9509,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9500,"src":"31962:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9497,"src":"31976:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9518,"nodeType":"IfStatement","src":"31958:97:29","trueBody":{"id":9517,"nodeType":"Block","src":"31983:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":9513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":9514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9497,"src":"32038:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9512,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"32004:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9516,"nodeType":"RevertStatement","src":"31997:47:29"}]}}]},"documentation":{"id":9495,"nodeType":"StructuredDocumentation","src":"31529:307:29","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":9520,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:29","nodeType":"FunctionDefinition","parameters":{"id":9498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9497,"mutability":"mutable","name":"value","nameLocation":"31865:5:29","nodeType":"VariableDeclaration","scope":9520,"src":"31858:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9496,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:29"},"returnParameters":{"id":9501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9500,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:29","nodeType":"VariableDeclaration","scope":9520,"src":"31895:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":9499,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:29"},"scope":9665,"src":"31841:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9545,"nodeType":"Block","src":"32451:148:29","statements":[{"expression":{"id":9533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9526,"src":"32461:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9523,"src":"32480:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":9529,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:29","typeDescriptions":{}}},"id":9532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":9534,"nodeType":"ExpressionStatement","src":"32461:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9535,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9526,"src":"32500:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9523,"src":"32514:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9544,"nodeType":"IfStatement","src":"32496:97:29","trueBody":{"id":9543,"nodeType":"Block","src":"32521:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9523,"src":"32576:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9538,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"32542:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9542,"nodeType":"RevertStatement","src":"32535:47:29"}]}}]},"documentation":{"id":9521,"nodeType":"StructuredDocumentation","src":"32067:307:29","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9546,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:29","nodeType":"FunctionDefinition","parameters":{"id":9524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9523,"mutability":"mutable","name":"value","nameLocation":"32403:5:29","nodeType":"VariableDeclaration","scope":9546,"src":"32396:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9522,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:29"},"returnParameters":{"id":9527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9526,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:29","nodeType":"VariableDeclaration","scope":9546,"src":"32433:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":9525,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:29"},"scope":9665,"src":"32379:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9571,"nodeType":"Block","src":"32989:148:29","statements":[{"expression":{"id":9559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9552,"src":"32999:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9549,"src":"33018:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":9555,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:29","typeDescriptions":{}}},"id":9558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":9560,"nodeType":"ExpressionStatement","src":"32999:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9561,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9552,"src":"33038:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9549,"src":"33052:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9570,"nodeType":"IfStatement","src":"33034:97:29","trueBody":{"id":9569,"nodeType":"Block","src":"33059:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9549,"src":"33114:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9564,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"33080:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9568,"nodeType":"RevertStatement","src":"33073:47:29"}]}}]},"documentation":{"id":9547,"nodeType":"StructuredDocumentation","src":"32605:307:29","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9572,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:29","nodeType":"FunctionDefinition","parameters":{"id":9550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9549,"mutability":"mutable","name":"value","nameLocation":"32941:5:29","nodeType":"VariableDeclaration","scope":9572,"src":"32934:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9548,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:29"},"returnParameters":{"id":9553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9552,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:29","nodeType":"VariableDeclaration","scope":9572,"src":"32971:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":9551,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:29"},"scope":9665,"src":"32917:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9597,"nodeType":"Block","src":"33527:148:29","statements":[{"expression":{"id":9585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9578,"src":"33537:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9575,"src":"33556:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":9581,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:29","typeDescriptions":{}}},"id":9584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":9586,"nodeType":"ExpressionStatement","src":"33537:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9587,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9578,"src":"33576:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9575,"src":"33590:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9596,"nodeType":"IfStatement","src":"33572:97:29","trueBody":{"id":9595,"nodeType":"Block","src":"33597:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9575,"src":"33652:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9590,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"33618:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9594,"nodeType":"RevertStatement","src":"33611:47:29"}]}}]},"documentation":{"id":9573,"nodeType":"StructuredDocumentation","src":"33143:307:29","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9598,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:29","nodeType":"FunctionDefinition","parameters":{"id":9576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9575,"mutability":"mutable","name":"value","nameLocation":"33479:5:29","nodeType":"VariableDeclaration","scope":9598,"src":"33472:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9574,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:29"},"returnParameters":{"id":9579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9578,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:29","nodeType":"VariableDeclaration","scope":9598,"src":"33509:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":9577,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:29"},"scope":9665,"src":"33455:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9623,"nodeType":"Block","src":"34058:146:29","statements":[{"expression":{"id":9611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9604,"src":"34068:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"34086:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":9607,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:29","typeDescriptions":{}}},"id":9610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":9612,"nodeType":"ExpressionStatement","src":"34068:24:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9613,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9604,"src":"34106:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"34120:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9622,"nodeType":"IfStatement","src":"34102:96:29","trueBody":{"id":9621,"nodeType":"Block","src":"34127:71:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9601,"src":"34181:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9616,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"34148:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9620,"nodeType":"RevertStatement","src":"34141:46:29"}]}}]},"documentation":{"id":9599,"nodeType":"StructuredDocumentation","src":"33681:302:29","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9624,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:29","nodeType":"FunctionDefinition","parameters":{"id":9602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9601,"mutability":"mutable","name":"value","nameLocation":"34011:5:29","nodeType":"VariableDeclaration","scope":9624,"src":"34004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9600,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:29"},"returnParameters":{"id":9605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9604,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:29","nodeType":"VariableDeclaration","scope":9624,"src":"34041:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":9603,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:29"},"scope":9665,"src":"33988:216:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9653,"nodeType":"Block","src":"34444:250:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"34557:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":9637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9636,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":9635,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":9639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:29","memberName":"max","nodeType":"MemberAccess","src":"34573:16:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9633,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:29","typeDescriptions":{}}},"id":9640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9647,"nodeType":"IfStatement","src":"34553:105:29","trueBody":{"id":9646,"nodeType":"Block","src":"34592:66:29","statements":[{"errorCall":{"arguments":[{"id":9643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"34641:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9642,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"34613:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":9644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9645,"nodeType":"RevertStatement","src":"34606:41:29"}]}},{"expression":{"arguments":[{"id":9650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"34681:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9648,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:29","typeDescriptions":{}}},"id":9651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9631,"id":9652,"nodeType":"Return","src":"34667:20:29"}]},"documentation":{"id":9625,"nodeType":"StructuredDocumentation","src":"34210:165:29","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":9654,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:29","nodeType":"FunctionDefinition","parameters":{"id":9628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9627,"mutability":"mutable","name":"value","nameLocation":"34406:5:29","nodeType":"VariableDeclaration","scope":9654,"src":"34398:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9626,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:29"},"returnParameters":{"id":9631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9654,"src":"34436:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9629,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:29"},"scope":9665,"src":"34380:314:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9663,"nodeType":"Block","src":"34853:87:29","statements":[{"AST":{"nativeSrc":"34888:46:29","nodeType":"YulBlock","src":"34888:46:29","statements":[{"nativeSrc":"34902:22:29","nodeType":"YulAssignment","src":"34902:22:29","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:29","nodeType":"YulIdentifier","src":"34921:1:29"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:29","nodeType":"YulIdentifier","src":"34914:6:29"},"nativeSrc":"34914:9:29","nodeType":"YulFunctionCall","src":"34914:9:29"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:29","nodeType":"YulIdentifier","src":"34907:6:29"},"nativeSrc":"34907:17:29","nodeType":"YulFunctionCall","src":"34907:17:29"},"variableNames":[{"name":"u","nativeSrc":"34902:1:29","nodeType":"YulIdentifier","src":"34902:1:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9657,"isOffset":false,"isSlot":false,"src":"34921:1:29","valueSize":1},{"declaration":9660,"isOffset":false,"isSlot":false,"src":"34902:1:29","valueSize":1}],"flags":["memory-safe"],"id":9662,"nodeType":"InlineAssembly","src":"34863:71:29"}]},"documentation":{"id":9655,"nodeType":"StructuredDocumentation","src":"34700:90:29","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":9664,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:29","nodeType":"FunctionDefinition","parameters":{"id":9658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9657,"mutability":"mutable","name":"b","nameLocation":"34816:1:29","nodeType":"VariableDeclaration","scope":9664,"src":"34811:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9656,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:29"},"returnParameters":{"id":9661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9660,"mutability":"mutable","name":"u","nameLocation":"34850:1:29","nodeType":"VariableDeclaration","scope":9664,"src":"34842:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9659,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:29"},"scope":9665,"src":"34795:145:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9666,"src":"769:34173:29","usedErrors":[7910,7915,7922,7927],"usedEvents":[]}],"src":"192:34751:29"},"id":29},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[9665],"SignedMath":[9809]},"id":9810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9667,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":9669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9810,"sourceUnit":9666,"src":"135:40:30","symbolAliases":[{"foreign":{"id":9668,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"143:8:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":9670,"nodeType":"StructuredDocumentation","src":"177:80:30","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9809,"linearizedBaseContracts":[9809],"name":"SignedMath","nameLocation":"266:10:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":9699,"nodeType":"Block","src":"746:215:30","statements":[{"id":9698,"nodeType":"UncheckedBlock","src":"756:199:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9682,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9677,"src":"894:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9683,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9675,"src":"900:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9684,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9677,"src":"904:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":9691,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9673,"src":"932:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9689,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"916:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9665_$","typeString":"type(library SafeCast)"}},"id":9690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"916:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":9692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9687,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:30","typeDescriptions":{}}},"id":9693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9681,"id":9697,"nodeType":"Return","src":"887:57:30"}]}]},"documentation":{"id":9671,"nodeType":"StructuredDocumentation","src":"283:374:30","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":9700,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:30","nodeType":"FunctionDefinition","parameters":{"id":9678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9673,"mutability":"mutable","name":"condition","nameLocation":"684:9:30","nodeType":"VariableDeclaration","scope":9700,"src":"679:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9672,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9675,"mutability":"mutable","name":"a","nameLocation":"702:1:30","nodeType":"VariableDeclaration","scope":9700,"src":"695:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9674,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9677,"mutability":"mutable","name":"b","nameLocation":"712:1:30","nodeType":"VariableDeclaration","scope":9700,"src":"705:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9676,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:30"},"returnParameters":{"id":9681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9700,"src":"738:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9679,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:30"},"scope":9809,"src":"662:299:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9718,"nodeType":"Block","src":"1102:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9703,"src":"1127:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9705,"src":"1131:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9703,"src":"1134:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9715,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9705,"src":"1137:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9710,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9700,"src":"1119:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9709,"id":9717,"nodeType":"Return","src":"1112:27:30"}]},"documentation":{"id":9701,"nodeType":"StructuredDocumentation","src":"967:66:30","text":" @dev Returns the largest of two signed numbers."},"id":9719,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:30","nodeType":"FunctionDefinition","parameters":{"id":9706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9703,"mutability":"mutable","name":"a","nameLocation":"1058:1:30","nodeType":"VariableDeclaration","scope":9719,"src":"1051:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9702,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9705,"mutability":"mutable","name":"b","nameLocation":"1068:1:30","nodeType":"VariableDeclaration","scope":9719,"src":"1061:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9704,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:30"},"returnParameters":{"id":9709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9719,"src":"1094:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9707,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:30"},"scope":9809,"src":"1038:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9737,"nodeType":"Block","src":"1288:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9722,"src":"1313:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9731,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9724,"src":"1317:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9733,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9722,"src":"1320:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9734,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9724,"src":"1323:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9729,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9700,"src":"1305:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9728,"id":9736,"nodeType":"Return","src":"1298:27:30"}]},"documentation":{"id":9720,"nodeType":"StructuredDocumentation","src":"1152:67:30","text":" @dev Returns the smallest of two signed numbers."},"id":9738,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:30","nodeType":"FunctionDefinition","parameters":{"id":9725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9722,"mutability":"mutable","name":"a","nameLocation":"1244:1:30","nodeType":"VariableDeclaration","scope":9738,"src":"1237:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9721,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9724,"mutability":"mutable","name":"b","nameLocation":"1254:1:30","nodeType":"VariableDeclaration","scope":9738,"src":"1247:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9723,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:30"},"returnParameters":{"id":9728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9738,"src":"1280:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9726,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:30"},"scope":9809,"src":"1224:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9781,"nodeType":"Block","src":"1537:162:30","statements":[{"assignments":[9749],"declarations":[{"constant":false,"id":9749,"mutability":"mutable","name":"x","nameLocation":"1606:1:30","nodeType":"VariableDeclaration","scope":9781,"src":"1599:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9748,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9762,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9750,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9741,"src":"1611:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9751,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9743,"src":"1615:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9741,"src":"1622:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9755,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9743,"src":"1626:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":9758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:30"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9763,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9749,"src":"1651:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9768,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9749,"src":"1671:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:30","typeDescriptions":{}}},"id":9769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9764,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:30","typeDescriptions":{}}},"id":9772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9773,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9741,"src":"1685:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9774,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9743,"src":"1689:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9747,"id":9780,"nodeType":"Return","src":"1644:48:30"}]},"documentation":{"id":9739,"nodeType":"StructuredDocumentation","src":"1338:126:30","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":9782,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:30","nodeType":"FunctionDefinition","parameters":{"id":9744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9741,"mutability":"mutable","name":"a","nameLocation":"1493:1:30","nodeType":"VariableDeclaration","scope":9782,"src":"1486:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9740,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9743,"mutability":"mutable","name":"b","nameLocation":"1503:1:30","nodeType":"VariableDeclaration","scope":9782,"src":"1496:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9742,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:30"},"returnParameters":{"id":9747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9782,"src":"1529:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9745,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:30"},"scope":9809,"src":"1469:230:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9807,"nodeType":"Block","src":"1843:767:30","statements":[{"id":9806,"nodeType":"UncheckedBlock","src":"1853:751:30","statements":[{"assignments":[9791],"declarations":[{"constant":false,"id":9791,"mutability":"mutable","name":"mask","nameLocation":"2424:4:30","nodeType":"VariableDeclaration","scope":9806,"src":"2417:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9790,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9795,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9792,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9785,"src":"2431:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9798,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9785,"src":"2576:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9799,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9791,"src":"2580:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9802,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9791,"src":"2588:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9796,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:30","typeDescriptions":{}}},"id":9804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9789,"id":9805,"nodeType":"Return","src":"2560:33:30"}]}]},"documentation":{"id":9783,"nodeType":"StructuredDocumentation","src":"1705:78:30","text":" @dev Returns the absolute unsigned value of a signed value."},"id":9808,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:30","nodeType":"FunctionDefinition","parameters":{"id":9786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9785,"mutability":"mutable","name":"n","nameLocation":"1808:1:30","nodeType":"VariableDeclaration","scope":9808,"src":"1801:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9784,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:30"},"returnParameters":{"id":9789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9808,"src":"1834:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9787,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:30"},"scope":9809,"src":"1788:822:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9810,"src":"258:2354:30","usedErrors":[],"usedEvents":[]}],"src":"109:2504:30"},"id":30},"contracts/StaticFruitDeliciousAnimated.sol":{"ast":{"absolutePath":"contracts/StaticFruitDeliciousAnimated.sol","exportedSymbols":{"Address":[3309],"Base64":[4382],"ERC2981":[3049],"ERC721":[2513],"ERC721Burnable":[2677],"Ownable":[147],"ReentrancyGuard":[4587],"StaticFruitDeliciousAnimated":[10810],"Strings":[6243]},"id":10811,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9811,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:31"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":9813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10811,"sourceUnit":2514,"src":"266:71:31","symbolAliases":[{"foreign":{"id":9812,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"274:6:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","id":9815,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10811,"sourceUnit":2678,"src":"339:98:31","symbolAliases":[{"foreign":{"id":9814,"name":"ERC721Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"347:14:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9817,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10811,"sourceUnit":148,"src":"439:67:31","symbolAliases":[{"foreign":{"id":9816,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"447:7:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","file":"@openzeppelin/contracts/token/common/ERC2981.sol","id":9819,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10811,"sourceUnit":3050,"src":"508:73:31","symbolAliases":[{"foreign":{"id":9818,"name":"ERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"516:7:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":9821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10811,"sourceUnit":6244,"src":"583:66:31","symbolAliases":[{"foreign":{"id":9820,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"591:7:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","file":"@openzeppelin/contracts/utils/Base64.sol","id":9823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10811,"sourceUnit":4383,"src":"651:64:31","symbolAliases":[{"foreign":{"id":9822,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"659:6:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":9825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10811,"sourceUnit":4588,"src":"717:82:31","symbolAliases":[{"foreign":{"id":9824,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"725:15:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":9827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10811,"sourceUnit":3310,"src":"801:66:31","symbolAliases":[{"foreign":{"id":9826,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"809:7:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9828,"name":"ERC721","nameLocations":["912:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"912:6:31"},"id":9829,"nodeType":"InheritanceSpecifier","src":"912:6:31"},{"baseName":{"id":9830,"name":"ERC2981","nameLocations":["920:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":3049,"src":"920:7:31"},"id":9831,"nodeType":"InheritanceSpecifier","src":"920:7:31"},{"baseName":{"id":9832,"name":"ERC721Burnable","nameLocations":["929:14:31"],"nodeType":"IdentifierPath","referencedDeclaration":2677,"src":"929:14:31"},"id":9833,"nodeType":"InheritanceSpecifier","src":"929:14:31"},{"baseName":{"id":9834,"name":"Ownable","nameLocations":["945:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"945:7:31"},"id":9835,"nodeType":"InheritanceSpecifier","src":"945:7:31"},{"baseName":{"id":9836,"name":"ReentrancyGuard","nameLocations":["954:15:31"],"nodeType":"IdentifierPath","referencedDeclaration":4587,"src":"954:15:31"},"id":9837,"nodeType":"InheritanceSpecifier","src":"954:15:31"}],"canonicalName":"StaticFruitDeliciousAnimated","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10810,"linearizedBaseContracts":[10810,4587,147,2677,3049,2513,257,2705,2630,6267,167,6279,4444],"name":"StaticFruitDeliciousAnimated","nameLocation":"880:28:31","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9840,"libraryName":{"id":9838,"name":"Strings","nameLocations":["983:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":6243,"src":"983:7:31"},"nodeType":"UsingForDirective","src":"977:26:31","typeName":{"id":9839,"name":"uint256","nodeType":"ElementaryTypeName","src":"995:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":9843,"libraryName":{"id":9841,"name":"Strings","nameLocations":["1015:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":6243,"src":"1015:7:31"},"nodeType":"UsingForDirective","src":"1009:24:31","typeName":{"id":9842,"name":"uint8","nodeType":"ElementaryTypeName","src":"1027:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}},{"global":false,"id":9846,"libraryName":{"id":9844,"name":"Address","nameLocations":["1045:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":3309,"src":"1045:7:31"},"nodeType":"UsingForDirective","src":"1039:34:31","typeName":{"id":9845,"name":"address","nodeType":"ElementaryTypeName","src":"1057:15:31","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}},{"constant":false,"functionSelector":"61b8ce8c","id":9848,"mutability":"mutable","name":"nextId","nameLocation":"1096:6:31","nodeType":"VariableDeclaration","scope":10810,"src":"1081:21:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1081:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d5abeb01","id":9850,"mutability":"immutable","name":"maxSupply","nameLocation":"1134:9:31","nodeType":"VariableDeclaration","scope":10810,"src":"1109:34:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6817c76c","id":9852,"mutability":"mutable","name":"mintPrice","nameLocation":"1165:9:31","nodeType":"VariableDeclaration","scope":10810,"src":"1150:24:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1150:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"63bd1d4a","id":9854,"mutability":"mutable","name":"payout","nameLocation":"1214:6:31","nodeType":"VariableDeclaration","scope":10810,"src":"1199:21:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9853,"name":"address","nodeType":"ElementaryTypeName","src":"1199:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2d9fff01","id":9857,"mutability":"mutable","name":"brand","nameLocation":"1243:5:31","nodeType":"VariableDeclaration","scope":10810,"src":"1229:35:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9855,"name":"string","nodeType":"ElementaryTypeName","src":"1229:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5374617469634672756974","id":9856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1251:13:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7b9a1d37e6140d7a2caf27993a1621e8b98e447eb5b17795e3fc610b837b6d9","typeString":"literal_string \"StaticFruit\""},"value":"StaticFruit"},"visibility":"public"},{"constant":false,"functionSelector":"7de1e536","id":9860,"mutability":"mutable","name":"collection","nameLocation":"1285:10:31","nodeType":"VariableDeclaration","scope":10810,"src":"1271:38:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9858,"name":"string","nodeType":"ElementaryTypeName","src":"1271:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"44656c6963696f7573","id":9859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1298:11:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbc5c3b7b2039f12fa754f35f62c619590b7f16b8df39e2fab748fe729378f2b","typeString":"literal_string \"Delicious\""},"value":"Delicious"},"visibility":"public"},{"constant":false,"functionSelector":"24bbd049","id":9863,"mutability":"mutable","name":"mintOpen","nameLocation":"1330:8:31","nodeType":"VariableDeclaration","scope":10810,"src":"1318:27:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9861,"name":"bool","nodeType":"ElementaryTypeName","src":"1318:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":9862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1341:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"body":{"id":9898,"nodeType":"Block","src":"1550:147:31","statements":[{"expression":{"arguments":[{"id":9882,"name":"_payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9871,"src":"1580:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9883,"name":"royaltyBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9865,"src":"1589:10:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":9881,"name":"_setDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"1561:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$","typeString":"function (address,uint96)"}},"id":9884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1561:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9885,"nodeType":"ExpressionStatement","src":"1561:39:31"},{"expression":{"id":9888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9886,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9850,"src":"1611:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9887,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"1623:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1611:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9889,"nodeType":"ExpressionStatement","src":"1611:22:31"},{"expression":{"id":9892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9890,"name":"mintPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9852,"src":"1644:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9891,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9869,"src":"1656:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1644:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9893,"nodeType":"ExpressionStatement","src":"1644:18:31"},{"expression":{"id":9896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9894,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"1673:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9895,"name":"_payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9871,"src":"1682:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1673:16:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9897,"nodeType":"ExpressionStatement","src":"1673:16:31"}]},"id":9899,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"53746174696346727569742044656c6963696f75732028416e696d6174656429","id":9874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:34:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_b9f1302d6f0d898ea299cc43bfe4c664533dba6939606d17d1285121377576bd","typeString":"literal_string \"StaticFruit Delicious (Animated)\""},"value":"StaticFruit Delicious (Animated)"},{"hexValue":"4652555458","id":9875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1524:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e3c74198b7185d15c080dd1cb0762de88f5bf85f5286cf76b0177cf8e36d3c7","typeString":"literal_string \"FRUTX\""},"value":"FRUTX"}],"id":9876,"kind":"baseConstructorSpecifier","modifierName":{"id":9873,"name":"ERC721","nameLocations":["1481:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"1481:6:31"},"nodeType":"ModifierInvocation","src":"1481:51:31"},{"arguments":[{"id":9878,"name":"_payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9871,"src":"1541:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9879,"kind":"baseConstructorSpecifier","modifierName":{"id":9877,"name":"Ownable","nameLocations":["1533:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1533:7:31"},"nodeType":"ModifierInvocation","src":"1533:16:31"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9865,"mutability":"mutable","name":"royaltyBps","nameLocation":"1383:10:31","nodeType":"VariableDeclaration","scope":9899,"src":"1376:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9864,"name":"uint96","nodeType":"ElementaryTypeName","src":"1376:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9867,"mutability":"mutable","name":"_maxSupply","nameLocation":"1412:10:31","nodeType":"VariableDeclaration","scope":9899,"src":"1404:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1404:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9869,"mutability":"mutable","name":"_price","nameLocation":"1441:6:31","nodeType":"VariableDeclaration","scope":9899,"src":"1433:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9871,"mutability":"mutable","name":"_payout","nameLocation":"1466:7:31","nodeType":"VariableDeclaration","scope":9899,"src":"1458:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9870,"name":"address","nodeType":"ElementaryTypeName","src":"1458:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1365:115:31"},"returnParameters":{"id":9880,"nodeType":"ParameterList","parameters":[],"src":"1550:0:31"},"scope":10810,"src":"1354:343:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"anonymous":false,"eventSelector":"8ba9af8fef251a59a57bb383a518ff12b3c2770c23cf0ab9a59a9e2390e08f43","id":9903,"name":"MintToggled","nameLocation":"1738:11:31","nodeType":"EventDefinition","parameters":{"id":9902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9901,"indexed":false,"mutability":"mutable","name":"open","nameLocation":"1755:4:31","nodeType":"VariableDeclaration","scope":9903,"src":"1750:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9900,"name":"bool","nodeType":"ElementaryTypeName","src":"1750:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1749:11:31"},"src":"1732:29:31"},{"anonymous":false,"eventSelector":"525b762709cc2a983aec5ccdfd807a061f993c91090b5bcd7da92ca254976aaa","id":9907,"name":"MintPriceUpdated","nameLocation":"1773:16:31","nodeType":"EventDefinition","parameters":{"id":9906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9905,"indexed":false,"mutability":"mutable","name":"newPrice","nameLocation":"1798:8:31","nodeType":"VariableDeclaration","scope":9907,"src":"1790:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1790:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1789:18:31"},"src":"1767:41:31"},{"anonymous":false,"eventSelector":"fcbb1571f6f637b3645e200ff18fbcb7fc2f8db33547e2f582146a51246e1043","id":9911,"name":"PayoutAddressUpdated","nameLocation":"1820:20:31","nodeType":"EventDefinition","parameters":{"id":9910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9909,"indexed":false,"mutability":"mutable","name":"newPayout","nameLocation":"1849:9:31","nodeType":"VariableDeclaration","scope":9911,"src":"1841:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9908,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1840:19:31"},"src":"1814:46:31"},{"anonymous":false,"eventSelector":"2c7ea2c532cc0dad6d6baad5a149d62033f0f3fa2e619de5a0296268f78611c3","id":9917,"name":"BrandingUpdated","nameLocation":"1872:15:31","nodeType":"EventDefinition","parameters":{"id":9916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9913,"indexed":false,"mutability":"mutable","name":"newBrand","nameLocation":"1895:8:31","nodeType":"VariableDeclaration","scope":9917,"src":"1888:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9912,"name":"string","nodeType":"ElementaryTypeName","src":"1888:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9915,"indexed":false,"mutability":"mutable","name":"newCollection","nameLocation":"1912:13:31","nodeType":"VariableDeclaration","scope":9917,"src":"1905:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9914,"name":"string","nodeType":"ElementaryTypeName","src":"1905:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1887:39:31"},"src":"1866:61:31"},{"anonymous":false,"eventSelector":"7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65","id":9923,"name":"Withdrawal","nameLocation":"1939:10:31","nodeType":"EventDefinition","parameters":{"id":9922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9919,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1966:2:31","nodeType":"VariableDeclaration","scope":9923,"src":"1950:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9918,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9921,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1978:6:31","nodeType":"VariableDeclaration","scope":9923,"src":"1970:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9920,"name":"uint256","nodeType":"ElementaryTypeName","src":"1970:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1949:36:31"},"src":"1933:53:31"},{"body":{"id":9938,"nodeType":"Block","src":"2070:67:31","statements":[{"expression":{"id":9932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9930,"name":"mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9863,"src":"2081:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9931,"name":"open","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9925,"src":"2092:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2081:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9933,"nodeType":"ExpressionStatement","src":"2081:15:31"},{"eventCall":{"arguments":[{"id":9935,"name":"open","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9925,"src":"2124:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9934,"name":"MintToggled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9903,"src":"2112:11:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":9936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2112:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9937,"nodeType":"EmitStatement","src":"2107:22:31"}]},"functionSelector":"8a4dcd85","id":9939,"implemented":true,"kind":"function","modifiers":[{"id":9928,"kind":"modifierInvocation","modifierName":{"id":9927,"name":"onlyOwner","nameLocations":["2060:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2060:9:31"},"nodeType":"ModifierInvocation","src":"2060:9:31"}],"name":"toggleMint","nameLocation":"2029:10:31","nodeType":"FunctionDefinition","parameters":{"id":9926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9925,"mutability":"mutable","name":"open","nameLocation":"2045:4:31","nodeType":"VariableDeclaration","scope":9939,"src":"2040:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9924,"name":"bool","nodeType":"ElementaryTypeName","src":"2040:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2039:11:31"},"returnParameters":{"id":9929,"nodeType":"ParameterList","parameters":[],"src":"2070:0:31"},"scope":10810,"src":"2020:117:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9954,"nodeType":"Block","src":"2201:67:31","statements":[{"expression":{"id":9948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9946,"name":"mintPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9852,"src":"2212:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9947,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9941,"src":"2224:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2212:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9949,"nodeType":"ExpressionStatement","src":"2212:13:31"},{"eventCall":{"arguments":[{"id":9951,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9941,"src":"2258:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9950,"name":"MintPriceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9907,"src":"2241:16:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":9952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9953,"nodeType":"EmitStatement","src":"2236:24:31"}]},"functionSelector":"f4a0a528","id":9955,"implemented":true,"kind":"function","modifiers":[{"id":9944,"kind":"modifierInvocation","modifierName":{"id":9943,"name":"onlyOwner","nameLocations":["2191:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2191:9:31"},"nodeType":"ModifierInvocation","src":"2191:9:31"}],"name":"setMintPrice","nameLocation":"2158:12:31","nodeType":"FunctionDefinition","parameters":{"id":9942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9941,"mutability":"mutable","name":"p","nameLocation":"2179:1:31","nodeType":"VariableDeclaration","scope":9955,"src":"2171:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2170:11:31"},"returnParameters":{"id":9945,"nodeType":"ParameterList","parameters":[],"src":"2201:0:31"},"scope":10810,"src":"2149:119:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9970,"nodeType":"Block","src":"2329:68:31","statements":[{"expression":{"id":9964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9962,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"2340:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9963,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9957,"src":"2349:1:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2340:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9965,"nodeType":"ExpressionStatement","src":"2340:10:31"},{"eventCall":{"arguments":[{"id":9967,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9957,"src":"2387:1:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9966,"name":"PayoutAddressUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9911,"src":"2366:20:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2366:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9969,"nodeType":"EmitStatement","src":"2361:28:31"}]},"functionSelector":"a3ff39b2","id":9971,"implemented":true,"kind":"function","modifiers":[{"id":9960,"kind":"modifierInvocation","modifierName":{"id":9959,"name":"onlyOwner","nameLocations":["2319:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2319:9:31"},"nodeType":"ModifierInvocation","src":"2319:9:31"}],"name":"setPayout","nameLocation":"2289:9:31","nodeType":"FunctionDefinition","parameters":{"id":9958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9957,"mutability":"mutable","name":"p","nameLocation":"2307:1:31","nodeType":"VariableDeclaration","scope":9971,"src":"2299:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9956,"name":"address","nodeType":"ElementaryTypeName","src":"2299:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2298:11:31"},"returnParameters":{"id":9961,"nodeType":"ParameterList","parameters":[],"src":"2329:0:31"},"scope":10810,"src":"2280:117:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9993,"nodeType":"Block","src":"2502:120:31","statements":[{"expression":{"id":9982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9980,"name":"brand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9857,"src":"2513:5:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9981,"name":"_brand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"2521:6:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"2513:14:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9983,"nodeType":"ExpressionStatement","src":"2513:14:31"},{"expression":{"id":9986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9984,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9860,"src":"2538:10:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9985,"name":"_collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"2551:11:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"2538:24:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9987,"nodeType":"ExpressionStatement","src":"2538:24:31"},{"eventCall":{"arguments":[{"id":9989,"name":"_brand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"2594:6:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":9990,"name":"_collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"2602:11:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":9988,"name":"BrandingUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9917,"src":"2578:15:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":9991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2578:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9992,"nodeType":"EmitStatement","src":"2573:41:31"}]},"functionSelector":"c1d2b11d","id":9994,"implemented":true,"kind":"function","modifiers":[{"id":9978,"kind":"modifierInvocation","modifierName":{"id":9977,"name":"onlyOwner","nameLocations":["2492:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2492:9:31"},"nodeType":"ModifierInvocation","src":"2492:9:31"}],"name":"setBranding","nameLocation":"2418:11:31","nodeType":"FunctionDefinition","parameters":{"id":9976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9973,"mutability":"mutable","name":"_brand","nameLocation":"2446:6:31","nodeType":"VariableDeclaration","scope":9994,"src":"2430:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9972,"name":"string","nodeType":"ElementaryTypeName","src":"2430:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9975,"mutability":"mutable","name":"_collection","nameLocation":"2470:11:31","nodeType":"VariableDeclaration","scope":9994,"src":"2454:27:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9974,"name":"string","nodeType":"ElementaryTypeName","src":"2454:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2429:53:31"},"returnParameters":{"id":9979,"nodeType":"ParameterList","parameters":[],"src":"2502:0:31"},"scope":10810,"src":"2409:213:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10078,"nodeType":"Block","src":"2712:510:31","statements":[{"expression":{"arguments":[{"id":10002,"name":"mintOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9863,"src":"2731:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e7420636c6f736564","id":10003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2741:13:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8919a73d8e5f758eb97b33d94491449e37d350692419a78dce5921b2cf5dcdf","typeString":"literal_string \"Mint closed\""},"value":"Mint closed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8919a73d8e5f758eb97b33d94491449e37d350692419a78dce5921b2cf5dcdf","typeString":"literal_string \"Mint closed\""}],"id":10001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2723:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10005,"nodeType":"ExpressionStatement","src":"2723:32:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10007,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9996,"src":"2774:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2774:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10010,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9996,"src":"2785:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"35","id":10011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2792:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2785:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2774:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"71747920312e2e35","id":10014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2795:10:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c90faa1f70b8f72c93d701336babffa522c2fad4c4da28e0a42eb54e6e7f2c76","typeString":"literal_string \"qty 1..5\""},"value":"qty 1..5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c90faa1f70b8f72c93d701336babffa522c2fad4c4da28e0a42eb54e6e7f2c76","typeString":"literal_string \"qty 1..5\""}],"id":10006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2766:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10016,"nodeType":"ExpressionStatement","src":"2766:40:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10018,"name":"nextId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9848,"src":"2825:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10019,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9996,"src":"2834:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2825:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10021,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9850,"src":"2841:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2825:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736f6c64206f7574","id":10023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2852:10:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_58636662b1fc14e257f44145653c04caa94522b84e511b2cf0d7859a8247c1d9","typeString":"literal_string \"sold out\""},"value":"sold out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_58636662b1fc14e257f44145653c04caa94522b84e511b2cf0d7859a8247c1d9","typeString":"literal_string \"sold out\""}],"id":10017,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2817:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:46:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10025,"nodeType":"ExpressionStatement","src":"2817:46:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10027,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2882:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2886:5:31","memberName":"value","nodeType":"MemberAccess","src":"2882:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10029,"name":"mintPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9852,"src":"2895:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10030,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9996,"src":"2907:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2895:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2882:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e7420455448","id":10033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2912:18:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_a07542aa4da89b2bd2d564d8e740f31e45f7ab8b09d2fbf43bf45e297d7c8b9f","typeString":"literal_string \"insufficient ETH\""},"value":"insufficient ETH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a07542aa4da89b2bd2d564d8e740f31e45f7ab8b09d2fbf43bf45e297d7c8b9f","typeString":"literal_string \"insufficient ETH\""}],"id":10026,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:57:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10035,"nodeType":"ExpressionStatement","src":"2874:57:31"},{"id":10056,"nodeType":"UncheckedBlock","src":"2942:157:31","statements":[{"body":{"id":10054,"nodeType":"Block","src":"2997:91:31","statements":[{"expression":{"arguments":[{"expression":{"id":10046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3026:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3030:6:31","memberName":"sender","nodeType":"MemberAccess","src":"3026:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10048,"name":"nextId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9848,"src":"3038:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10045,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2191,2221],"referencedDeclaration":2191,"src":"3016:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3016:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10050,"nodeType":"ExpressionStatement","src":"3016:29:31"},{"expression":{"id":10052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3064:8:31","subExpression":{"id":10051,"name":"nextId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9848,"src":"3066:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10053,"nodeType":"ExpressionStatement","src":"3064:8:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"2983:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10040,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9996,"src":"2987:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2983:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10055,"initializationExpression":{"assignments":[10037],"declarations":[{"constant":false,"id":10037,"mutability":"mutable","name":"i","nameLocation":"2980:1:31","nodeType":"VariableDeclaration","scope":10055,"src":"2972:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2972:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10038,"nodeType":"VariableDeclarationStatement","src":"2972:9:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2992:3:31","subExpression":{"id":10042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"2994:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10044,"nodeType":"ExpressionStatement","src":"2992:3:31"},"nodeType":"ForStatement","src":"2967:121:31"}]},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":10059,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3121:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_StaticFruitDeliciousAnimated_$10810","typeString":"contract StaticFruitDeliciousAnimated"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StaticFruitDeliciousAnimated_$10810","typeString":"contract StaticFruitDeliciousAnimated"}],"id":10058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3113:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10057,"name":"address","nodeType":"ElementaryTypeName","src":"3113:7:31","typeDescriptions":{}}},"id":10060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3113:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3127:7:31","memberName":"balance","nodeType":"MemberAccess","src":"3113:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3137:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3113:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10077,"nodeType":"IfStatement","src":"3109:106:31","trueBody":{"id":10076,"nodeType":"Block","src":"3140:75:31","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":10071,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_StaticFruitDeliciousAnimated_$10810","typeString":"contract StaticFruitDeliciousAnimated"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StaticFruitDeliciousAnimated_$10810","typeString":"contract StaticFruitDeliciousAnimated"}],"id":10070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10069,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:31","typeDescriptions":{}}},"id":10072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:31","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10066,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"3163:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3155:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":10064,"name":"address","nodeType":"ElementaryTypeName","src":"3155:8:31","stateMutability":"payable","typeDescriptions":{}}},"id":10067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3155:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":10068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3171:9:31","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":3107,"src":"3155:25:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":10074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3155:48:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10075,"nodeType":"ExpressionStatement","src":"3155:48:31"}]}}]},"functionSelector":"a0712d68","id":10079,"implemented":true,"kind":"function","modifiers":[{"id":9999,"kind":"modifierInvocation","modifierName":{"id":9998,"name":"nonReentrant","nameLocations":["2699:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":4551,"src":"2699:12:31"},"nodeType":"ModifierInvocation","src":"2699:12:31"}],"name":"mint","nameLocation":"2664:4:31","nodeType":"FunctionDefinition","parameters":{"id":9997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9996,"mutability":"mutable","name":"qty","nameLocation":"2677:3:31","nodeType":"VariableDeclaration","scope":10079,"src":"2669:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9995,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2668:13:31"},"returnParameters":{"id":10000,"nodeType":"ParameterList","parameters":[],"src":"2712:0:31"},"scope":10810,"src":"2655:567:31","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":10099,"nodeType":"Block","src":"3321:92:31","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":10091,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3374:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_StaticFruitDeliciousAnimated_$10810","typeString":"contract StaticFruitDeliciousAnimated"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StaticFruitDeliciousAnimated_$10810","typeString":"contract StaticFruitDeliciousAnimated"}],"id":10090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3366:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10089,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:31","typeDescriptions":{}}},"id":10092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3366:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10093,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10081,"src":"3381:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10094,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3390:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3396:7:31","memberName":"chainid","nodeType":"MemberAccess","src":"3390:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10087,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3349:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3353:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"3349:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3349:55:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10086,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3339:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3339:66:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":10085,"id":10098,"nodeType":"Return","src":"3332:73:31"}]},"id":10100,"implemented":true,"kind":"function","modifiers":[],"name":"_seed","nameLocation":"3266:5:31","nodeType":"FunctionDefinition","parameters":{"id":10082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10081,"mutability":"mutable","name":"tokenId","nameLocation":"3280:7:31","nodeType":"VariableDeclaration","scope":10100,"src":"3272:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10080,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3271:17:31"},"returnParameters":{"id":10085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10100,"src":"3312:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3312:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3311:9:31"},"scope":10810,"src":"3257:156:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10143,"nodeType":"Block","src":"3545:185:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10109,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10102,"src":"3573:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10108,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"3564:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":10110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3593:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3585:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10111,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:31","typeDescriptions":{}}},"id":10114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3564:31:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e41","id":10116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3597:4:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c81895a0e097dc7002fdb2ad0f186a1a53ed665dcef04c900d252cddee18e713","typeString":"literal_string \"NA\""},"value":"NA"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c81895a0e097dc7002fdb2ad0f186a1a53ed665dcef04c900d252cddee18e713","typeString":"literal_string \"NA\""}],"id":10107,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3556:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3556:46:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10118,"nodeType":"ExpressionStatement","src":"3556:46:31"},{"assignments":[10120],"declarations":[{"constant":false,"id":10120,"mutability":"mutable","name":"score","nameLocation":"3619:5:31","nodeType":"VariableDeclaration","scope":10143,"src":"3613:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10119,"name":"uint8","nodeType":"ElementaryTypeName","src":"3613:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":10132,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10126,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10102,"src":"3647:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10125,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10100,"src":"3641:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":10127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3641:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3633:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10123,"name":"uint256","nodeType":"ElementaryTypeName","src":"3633:7:31","typeDescriptions":{}}},"id":10128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3633:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"313031","id":10129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3659:3:31","typeDescriptions":{"typeIdentifier":"t_rational_101_by_1","typeString":"int_const 101"},"value":"101"},"src":"3633:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3627:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":10121,"name":"uint8","nodeType":"ElementaryTypeName","src":"3627:5:31","typeDescriptions":{}}},"id":10131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3627:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"3613:50:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10133,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10120,"src":"3678:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"38","id":10134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3686:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"3678:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10140,"nodeType":"IfStatement","src":"3674:25:31","trueBody":{"expression":{"id":10138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10136,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10120,"src":"3689:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":10137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3698:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"3689:10:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10139,"nodeType":"ExpressionStatement","src":"3689:10:31"}},{"expression":{"id":10141,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10120,"src":"3717:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":10106,"id":10142,"nodeType":"Return","src":"3710:12:31"}]},"functionSelector":"c60d7e46","id":10144,"implemented":true,"kind":"function","modifiers":[],"name":"deliciousnessOf","nameLocation":"3484:15:31","nodeType":"FunctionDefinition","parameters":{"id":10103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10102,"mutability":"mutable","name":"tokenId","nameLocation":"3508:7:31","nodeType":"VariableDeclaration","scope":10144,"src":"3500:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10101,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3499:17:31"},"returnParameters":{"id":10106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10144,"src":"3538:5:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10104,"name":"uint8","nodeType":"ElementaryTypeName","src":"3538:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3537:7:31"},"scope":10810,"src":"3475:255:31","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10177,"nodeType":"Block","src":"3800:187:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10151,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10146,"src":"3815:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3930","id":10152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3820:2:31","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"src":"3815:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10156,"nodeType":"IfStatement","src":"3811:31:31","trueBody":{"expression":{"hexValue":"4c6567656e64617279","id":10154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3831:11:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310","typeString":"literal_string \"Legendary\""},"value":"Legendary"},"functionReturnParameters":10150,"id":10155,"nodeType":"Return","src":"3824:18:31"}},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10157,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10146,"src":"3857:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3730","id":10158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3862:2:31","typeDescriptions":{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},"value":"70"},"src":"3857:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10162,"nodeType":"IfStatement","src":"3853:27:31","trueBody":{"expression":{"hexValue":"5072696d65","id":10160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3873:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffc66c8548bc388f0156d76251a192b57d2601764d8478982e579b825596b8bc","typeString":"literal_string \"Prime\""},"value":"Prime"},"functionReturnParameters":10150,"id":10161,"nodeType":"Return","src":"3866:14:31"}},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10163,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10146,"src":"3895:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3530","id":10164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3900:2:31","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"src":"3895:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10168,"nodeType":"IfStatement","src":"3891:27:31","trueBody":{"expression":{"hexValue":"4a75696379","id":10166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3911:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_1664b525956d22f8f0ad35bd22f34261df9b15fc7ba28020f9866ac08cbbc90f","typeString":"literal_string \"Juicy\""},"value":"Juicy"},"functionReturnParameters":10150,"id":10167,"nodeType":"Return","src":"3904:14:31"}},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10169,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10146,"src":"3933:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3330","id":10170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3938:2:31","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"3933:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10174,"nodeType":"IfStatement","src":"3929:27:31","trueBody":{"expression":{"hexValue":"54616e6779","id":10172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3949:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_1242766c8824991355aaadec4d656d943025e70fe896230af412f93b3f92ba08","typeString":"literal_string \"Tangy\""},"value":"Tangy"},"functionReturnParameters":10150,"id":10173,"nodeType":"Return","src":"3942:14:31"}},{"expression":{"hexValue":"526177","id":10175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3974:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_7363a24996de434fc886f1474dd74d955980fa72b926b9c955f94f6698ebf686","typeString":"literal_string \"Raw\""},"value":"Raw"},"functionReturnParameters":10150,"id":10176,"nodeType":"Return","src":"3967:12:31"}]},"id":10178,"implemented":true,"kind":"function","modifiers":[],"name":"_tier","nameLocation":"3747:5:31","nodeType":"FunctionDefinition","parameters":{"id":10147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10146,"mutability":"mutable","name":"d","nameLocation":"3759:1:31","nodeType":"VariableDeclaration","scope":10178,"src":"3753:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10145,"name":"uint8","nodeType":"ElementaryTypeName","src":"3753:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3752:9:31"},"returnParameters":{"id":10150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10178,"src":"3785:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10148,"name":"string","nodeType":"ElementaryTypeName","src":"3785:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3784:15:31"},"scope":10810,"src":"3738:249:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10226,"nodeType":"Block","src":"4085:213:31","statements":[{"assignments":[10192],"declarations":[{"constant":false,"id":10192,"mutability":"mutable","name":"fruits","nameLocation":"4113:6:31","nodeType":"VariableDeclaration","scope":10226,"src":"4096:23:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$8_memory_ptr","typeString":"string[8]"},"typeName":{"baseType":{"id":10190,"name":"string","nodeType":"ElementaryTypeName","src":"4096:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10191,"length":{"hexValue":"38","id":10189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4103:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"ArrayTypeName","src":"4096:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$8_storage_ptr","typeString":"string[8]"}},"visibility":"internal"}],"id":10202,"initialValue":{"components":[{"hexValue":"4d616e676f","id":10193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4123:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_88282b4fd4e6ed87796aa0681e58b44f8378d9f0d3d7ac2afc2aebdb8537eb02","typeString":"literal_string \"Mango\""},"value":"Mango"},{"hexValue":"4265727279","id":10194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4131:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_62550a1843d60d6b60c1193e15e403e3ebf4f6834e6dddb24f466f8d9eb32da3","typeString":"literal_string \"Berry\""},"value":"Berry"},{"hexValue":"447261676f6e6672756974","id":10195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4139:13:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c242f8cda6f5a3cd1ac28cb402672da980afd95e830b4fb2673bcc067669380b","typeString":"literal_string \"Dragonfruit\""},"value":"Dragonfruit"},{"hexValue":"4772617065","id":10196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4153:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_07b0e6fcb34444e13407cc090def376ad67951a9b69d432f5d917adcfcc9526f","typeString":"literal_string \"Grape\""},"value":"Grape"},{"hexValue":"5065616368","id":10197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4161:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_bce6960d861aa3f792ba9bb4886fdb44519497ba97fa2c8b57db90e2db509a96","typeString":"literal_string \"Peach\""},"value":"Peach"},{"hexValue":"4c696d65","id":10198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:6:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_8de8b7aaadad2ef3db534e72732e4c57f0b0099c3e9d6f7186469b2073886392","typeString":"literal_string \"Lime\""},"value":"Lime"},{"hexValue":"506c756d","id":10199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4176:6:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_b618f3ca6d13ef894046da8679ee303335c2bcc00fb5b8ea579573d87e371496","typeString":"literal_string \"Plum\""},"value":"Plum"},{"hexValue":"4775617661","id":10200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4183:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_365b4cc72f5ad15db61120bcbfe103ba1ef1f8e1841c5f5257b5d0a11c5ce90a","typeString":"literal_string \"Guava\""},"value":"Guava"}],"id":10201,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4122:69:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$8_memory_ptr","typeString":"string memory[8] memory"}},"nodeType":"VariableDeclarationStatement","src":"4096:95:31"},{"expression":{"id":10218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10203,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10185,"src":"4202:3:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10209,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10180,"src":"4228:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10208,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10100,"src":"4222:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":10210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4222:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":10211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4240:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4222:20:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10206,"name":"uint256","nodeType":"ElementaryTypeName","src":"4214:7:31","typeDescriptions":{}}},"id":10213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":10214,"name":"fruits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10192,"src":"4246:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$8_memory_ptr","typeString":"string memory[8] memory"}},"id":10215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4253:6:31","memberName":"length","nodeType":"MemberAccess","src":"4246:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4214:45:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4208:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":10204,"name":"uint8","nodeType":"ElementaryTypeName","src":"4208:5:31","typeDescriptions":{}}},"id":10217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4202:58:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10219,"nodeType":"ExpressionStatement","src":"4202:58:31"},{"expression":{"id":10224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10220,"name":"fruit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10183,"src":"4271:5:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":10221,"name":"fruits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10192,"src":"4279:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$8_memory_ptr","typeString":"string memory[8] memory"}},"id":10223,"indexExpression":{"id":10222,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10185,"src":"4286:3:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4279:11:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4271:19:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":10225,"nodeType":"ExpressionStatement","src":"4271:19:31"}]},"id":10227,"implemented":true,"kind":"function","modifiers":[],"name":"_fruitOf","nameLocation":"4004:8:31","nodeType":"FunctionDefinition","parameters":{"id":10181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10180,"mutability":"mutable","name":"tokenId","nameLocation":"4021:7:31","nodeType":"VariableDeclaration","scope":10227,"src":"4013:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10179,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4012:17:31"},"returnParameters":{"id":10186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10183,"mutability":"mutable","name":"fruit","nameLocation":"4067:5:31","nodeType":"VariableDeclaration","scope":10227,"src":"4053:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10182,"name":"string","nodeType":"ElementaryTypeName","src":"4053:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10185,"mutability":"mutable","name":"idx","nameLocation":"4080:3:31","nodeType":"VariableDeclaration","scope":10227,"src":"4074:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10184,"name":"uint8","nodeType":"ElementaryTypeName","src":"4074:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4052:32:31"},"scope":10810,"src":"3995:303:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10311,"nodeType":"Block","src":"4411:384:31","statements":[{"assignments":[10243],"declarations":[{"constant":false,"id":10243,"mutability":"mutable","name":"bgs","nameLocation":"4439:3:31","nodeType":"VariableDeclaration","scope":10311,"src":"4422:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$8_memory_ptr","typeString":"string[8]"},"typeName":{"baseType":{"id":10241,"name":"string","nodeType":"ElementaryTypeName","src":"4422:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10242,"length":{"hexValue":"38","id":10240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4429:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"ArrayTypeName","src":"4422:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$8_storage_ptr","typeString":"string[8]"}},"visibility":"internal"}],"id":10253,"initialValue":{"components":[{"hexValue":"23306431313137","id":10244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4446:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_feacec1ea45f9f768b4403a1d2e2da2182530296faec1d38bbde4729ae5b5036","typeString":"literal_string \"#0d1117\""},"value":"#0d1117"},{"hexValue":"23313231323132","id":10245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4456:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e8b9ce5279e0d27327d5e59632da04bb57c61c59b4db9f9b48171856bea5ab0","typeString":"literal_string \"#121212\""},"value":"#121212"},{"hexValue":"23306230663134","id":10246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4466:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e1fa2c98d79cba65dfc3f5e6c6cdc60a469a5b144c67081ca8d5528d501b3f5","typeString":"literal_string \"#0b0f14\""},"value":"#0b0f14"},{"hexValue":"23316131303230","id":10247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4476:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_5bf0f8e0907e127228fcee319121b8816cbff70a1c421974d00b77f82a36c4cd","typeString":"literal_string \"#1a1020\""},"value":"#1a1020"},{"hexValue":"23306631333230","id":10248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4486:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_abe21195812a2a5e39ed14f312da81ffc616a81ab6218a9a17d2c484e28c9be2","typeString":"literal_string \"#0f1320\""},"value":"#0f1320"},{"hexValue":"23313031333134","id":10249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4496:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c4c56e030a3fa19b7a3606d9e8c34d11634a3d744ceb3f01ae39bdeb8a1f8b09","typeString":"literal_string \"#101314\""},"value":"#101314"},{"hexValue":"23306531313137","id":10250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4506:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_473c8155f4696d3afb8bae2be3bf353f8bbeb7e4b17bd7707362c25ada898d67","typeString":"literal_string \"#0e1117\""},"value":"#0e1117"},{"hexValue":"23313431303136","id":10251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4516:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_807182642d304fbe39c8b2222fa2acd51c5b3b22c84cb9f874048c46a72265e1","typeString":"literal_string \"#141016\""},"value":"#141016"}],"id":10252,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4445:81:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$8_memory_ptr","typeString":"string memory[8] memory"}},"nodeType":"VariableDeclarationStatement","src":"4422:104:31"},{"assignments":[10259],"declarations":[{"constant":false,"id":10259,"mutability":"mutable","name":"fgs","nameLocation":"4554:3:31","nodeType":"VariableDeclaration","scope":10311,"src":"4537:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$8_memory_ptr","typeString":"string[8]"},"typeName":{"baseType":{"id":10257,"name":"string","nodeType":"ElementaryTypeName","src":"4537:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10258,"length":{"hexValue":"38","id":10256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4544:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"ArrayTypeName","src":"4537:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$8_storage_ptr","typeString":"string[8]"}},"visibility":"internal"}],"id":10269,"initialValue":{"components":[{"hexValue":"23464637453442","id":10260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4561:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_dde78600af2e21beb4795f9a3337a569dff6da2e04d573a22fb6fb420a0748c7","typeString":"literal_string \"#FF7E4B\""},"value":"#FF7E4B"},{"hexValue":"23413136424646","id":10261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4571:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_a74e86a00b19e2e7d7260ad3119ac9edb72bceb7a1b13b5e24e936906b7fe4ad","typeString":"literal_string \"#A16BFF\""},"value":"#A16BFF"},{"hexValue":"23464633464134","id":10262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4581:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_a81f2a0d59e9840aaf81d71a6ed4675ad70956c842e1a8c7e7c2ef8f1e7be94b","typeString":"literal_string \"#FF3FA4\""},"value":"#FF3FA4"},{"hexValue":"23384235434636","id":10263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4591:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a3ef4dfed8c87c233d11bd25d405e4e09400aee4ba004f15c96decf6f3d51c1","typeString":"literal_string \"#8B5CF6\""},"value":"#8B5CF6"},{"hexValue":"23464642383642","id":10264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4601:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9655f2f841ebd86c3af41150b9d93ed5717b4147b0b67186f280ac57e5d49f2","typeString":"literal_string \"#FFB86B\""},"value":"#FFB86B"},{"hexValue":"23374346354339","id":10265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4611:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ceb61a2a74379e34df7d95b5799f0c25afe779e9c4bd267b6895e7d982c391da","typeString":"literal_string \"#7CF5C9\""},"value":"#7CF5C9"},{"hexValue":"23394235394236","id":10266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4621:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_2bcc5f21734071833a69b37484e5310e6e9dfed361449067c40b5b5d75a8b654","typeString":"literal_string \"#9B59B6\""},"value":"#9B59B6"},{"hexValue":"23374644424646","id":10267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4631:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e190dca237d45522f73908d103c8b44024437128d422609d1dca5667f23e488","typeString":"literal_string \"#7FDBFF\""},"value":"#7FDBFF"}],"id":10268,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4560:81:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$8_memory_ptr","typeString":"string memory[8] memory"}},"nodeType":"VariableDeclarationStatement","src":"4537:104:31"},{"expression":{"id":10274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10270,"name":"bg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10234,"src":"4652:2:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":10271,"name":"bgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10243,"src":"4657:3:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$8_memory_ptr","typeString":"string memory[8] memory"}},"id":10273,"indexExpression":{"id":10272,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10229,"src":"4661:3:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4657:8:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4652:13:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":10275,"nodeType":"ExpressionStatement","src":"4652:13:31"},{"assignments":[10277],"declarations":[{"constant":false,"id":10277,"mutability":"mutable","name":"j","nameLocation":"4682:1:31","nodeType":"VariableDeclaration","scope":10311,"src":"4676:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10276,"name":"uint8","nodeType":"ElementaryTypeName","src":"4676:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":10304,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10278,"name":"delicious","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10231,"src":"4686:9:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3636","id":10279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4698:2:31","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"},"src":"4686:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10287,"name":"delicious","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10231,"src":"4719:9:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3333","id":10288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4731:2:31","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"src":"4719:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10296,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10229,"src":"4753:3:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"33","id":10297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4759:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"4753:7:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":10299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4752:9:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"38","id":10300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4764:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4752:13:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4719:46:31","trueExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10290,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10229,"src":"4737:3:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":10291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4743:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4737:7:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":10293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4736:9:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"38","id":10294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4748:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4736:13:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4686:79:31","trueExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10281,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10229,"src":"4704:3:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":10282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4710:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4704:7:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":10284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4703:9:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"38","id":10285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4703:13:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4676:89:31"},{"expression":{"id":10309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10305,"name":"fg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10236,"src":"4776:2:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":10306,"name":"fgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10259,"src":"4781:3:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$8_memory_ptr","typeString":"string memory[8] memory"}},"id":10308,"indexExpression":{"id":10307,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10277,"src":"4785:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4781:6:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4776:11:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":10310,"nodeType":"ExpressionStatement","src":"4776:11:31"}]},"id":10312,"implemented":true,"kind":"function","modifiers":[],"name":"_palette","nameLocation":"4315:8:31","nodeType":"FunctionDefinition","parameters":{"id":10232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10229,"mutability":"mutable","name":"idx","nameLocation":"4330:3:31","nodeType":"VariableDeclaration","scope":10312,"src":"4324:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10228,"name":"uint8","nodeType":"ElementaryTypeName","src":"4324:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":10231,"mutability":"mutable","name":"delicious","nameLocation":"4341:9:31","nodeType":"VariableDeclaration","scope":10312,"src":"4335:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10230,"name":"uint8","nodeType":"ElementaryTypeName","src":"4335:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4323:28:31"},"returnParameters":{"id":10237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10234,"mutability":"mutable","name":"bg","nameLocation":"4389:2:31","nodeType":"VariableDeclaration","scope":10312,"src":"4375:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10233,"name":"string","nodeType":"ElementaryTypeName","src":"4375:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10236,"mutability":"mutable","name":"fg","nameLocation":"4407:2:31","nodeType":"VariableDeclaration","scope":10312,"src":"4393:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10235,"name":"string","nodeType":"ElementaryTypeName","src":"4393:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4374:36:31"},"scope":10810,"src":"4306:489:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10378,"nodeType":"Block","src":"4943:1005:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10322,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10314,"src":"5042:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5036:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10320,"name":"bytes","nodeType":"ElementaryTypeName","src":"5036:5:31","typeDescriptions":{}}},"id":10323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5036:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10319,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5026:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5026:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"526177","id":10326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5062:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_7363a24996de434fc886f1474dd74d955980fa72b926b9c955f94f6698ebf686","typeString":"literal_string \"Raw\""},"value":"Raw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7363a24996de434fc886f1474dd74d955980fa72b926b9c955f94f6698ebf686","typeString":"literal_string \"Raw\""}],"id":10325,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5052:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5052:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5026:42:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10335,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10314,"src":"5185:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5179:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10333,"name":"bytes","nodeType":"ElementaryTypeName","src":"5179:5:31","typeDescriptions":{}}},"id":10336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5179:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10332,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5169:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5169:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"54616e6779","id":10339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5205:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_1242766c8824991355aaadec4d656d943025e70fe896230af412f93b3f92ba08","typeString":"literal_string \"Tangy\""},"value":"Tangy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1242766c8824991355aaadec4d656d943025e70fe896230af412f93b3f92ba08","typeString":"literal_string \"Tangy\""}],"id":10338,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5195:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5169:44:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10348,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10314,"src":"5338:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5332:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10346,"name":"bytes","nodeType":"ElementaryTypeName","src":"5332:5:31","typeDescriptions":{}}},"id":10349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5332:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10345,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5322:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"4a75696379","id":10352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5358:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_1664b525956d22f8f0ad35bd22f34261df9b15fc7ba28020f9866ac08cbbc90f","typeString":"literal_string \"Juicy\""},"value":"Juicy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1664b525956d22f8f0ad35bd22f34261df9b15fc7ba28020f9866ac08cbbc90f","typeString":"literal_string \"Juicy\""}],"id":10351,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5348:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5348:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5322:44:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10361,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10314,"src":"5554:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5548:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10359,"name":"bytes","nodeType":"ElementaryTypeName","src":"5548:5:31","typeDescriptions":{}}},"id":10362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5548:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10358,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5538:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5538:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"5072696d65","id":10365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5574:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffc66c8548bc388f0156d76251a192b57d2601764d8478982e579b825596b8bc","typeString":"literal_string \"Prime\""},"value":"Prime"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ffc66c8548bc388f0156d76251a192b57d2601764d8478982e579b825596b8bc","typeString":"literal_string \"Prime\""}],"id":10364,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5564:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5564:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5538:44:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10373,"nodeType":"Block","src":"5748:193:31","statements":[{"expression":{"hexValue":"4d3530302c323430204c3536302c343230204c3732302c333830204c3630302c353030204c3732302c363230204c3536302c353830204c3530302c373630204c3434302c353830204c3238302c363230204c3430302c353030204c3238302c333830204c3434302c343230205a","id":10371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5818:111:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_e79b10353456267043536647454e6d35a24dbe6cef1fb6f9ffe48a919fb69515","typeString":"literal_string \"M500,240 L560,420 L720,380 L600,500 L720,620 L560,580 L500,760 L440,580 L280,620 L400,500 L280,380 L440,420 Z\""},"value":"M500,240 L560,420 L720,380 L600,500 L720,620 L560,580 L500,760 L440,580 L280,620 L400,500 L280,380 L440,420 Z"},"functionReturnParameters":10318,"id":10372,"nodeType":"Return","src":"5811:118:31"}]},"id":10374,"nodeType":"IfStatement","src":"5534:407:31","trueBody":{"id":10370,"nodeType":"Block","src":"5584:158:31","statements":[{"expression":{"hexValue":"4d3530302c323430204c3534302c343230204c3732302c343230204c3538302c353230204c3632302c373030204c3530302c363030204c3338302c373030204c3432302c353230204c3238302c343230204c3436302c343230205a","id":10368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5637:93:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_62c234f9a8fb8e80181b3e3c534b7023eb4dcaeaaa0deb488ebd6d458fe316bc","typeString":"literal_string \"M500,240 L540,420 L720,420 L580,520 L620,700 L500,600 L380,700 L420,520 L280,420 L460,420 Z\""},"value":"M500,240 L540,420 L720,420 L580,520 L620,700 L500,600 L380,700 L420,520 L280,420 L460,420 Z"},"functionReturnParameters":10318,"id":10369,"nodeType":"Return","src":"5630:100:31"}]}},"id":10375,"nodeType":"IfStatement","src":"5318:623:31","trueBody":{"id":10357,"nodeType":"Block","src":"5368:160:31","statements":[{"expression":{"hexValue":"4d3530302c32363020433336302c333030203332302c353630203436302c37323020433538302c383230203732302c373030203730302c35323020433638302c333630203634302c333030203530302c323630205a","id":10355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5429:87:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_42f6df99f2a47ae0158de2b842aa1abffc0ef8c90812b7a4a92bfe4c23d62b44","typeString":"literal_string \"M500,260 C360,300 320,560 460,720 C580,820 720,700 700,520 C680,360 640,300 500,260 Z\""},"value":"M500,260 C360,300 320,560 460,720 C580,820 720,700 700,520 C680,360 640,300 500,260 Z"},"functionReturnParameters":10318,"id":10356,"nodeType":"Return","src":"5422:94:31"}]}},"id":10376,"nodeType":"IfStatement","src":"5165:776:31","trueBody":{"id":10344,"nodeType":"Block","src":"5215:97:31","statements":[{"expression":{"hexValue":"4d3530302c323430204c3330302c353230204c3530302c383030204c3730302c353230205a","id":10342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5261:39:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_96c5664d96e4b3fa24bfc029650fd8e14e23ab81b6ddaa40b85c9d1e1b2109b8","typeString":"literal_string \"M500,240 L300,520 L500,800 L700,520 Z\""},"value":"M500,240 L300,520 L500,800 L700,520 Z"},"functionReturnParameters":10318,"id":10343,"nodeType":"Return","src":"5254:46:31"}]}},"id":10377,"nodeType":"IfStatement","src":"5022:919:31","trueBody":{"id":10331,"nodeType":"Block","src":"5070:89:31","statements":[{"expression":{"hexValue":"4d3530302c323430204c3332302c373230204c3638302c373230205a","id":10329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5117:30:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_571f048af921ccd230036432768db0dad5784db226ac494efb719516ec9ff649","typeString":"literal_string \"M500,240 L320,720 L680,720 Z\""},"value":"M500,240 L320,720 L680,720 Z"},"functionReturnParameters":10318,"id":10330,"nodeType":"Return","src":"5110:37:31"}]}}]},"id":10379,"implemented":true,"kind":"function","modifiers":[],"name":"_shapePath","nameLocation":"4872:10:31","nodeType":"FunctionDefinition","parameters":{"id":10315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10314,"mutability":"mutable","name":"tier","nameLocation":"4897:4:31","nodeType":"VariableDeclaration","scope":10379,"src":"4883:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10313,"name":"string","nodeType":"ElementaryTypeName","src":"4883:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4882:20:31"},"returnParameters":{"id":10318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10317,"mutability":"mutable","name":"d","nameLocation":"4940:1:31","nodeType":"VariableDeclaration","scope":10379,"src":"4926:15:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10316,"name":"string","nodeType":"ElementaryTypeName","src":"4926:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4925:17:31"},"scope":10810,"src":"4863:1085:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10386,"nodeType":"Block","src":"6072:79:31","statements":[{"expression":{"hexValue":"4d302c2d3230204c362c2d36204c32302c30204c362c36204c302c3230204c2d362c36204c2d32302c30204c2d362c2d36205a","id":10384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6090:53:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cdbaa27b6eaa2d9b561982320d80fe4c89e3dc9a5062cbb0f20abc1efd34f83","typeString":"literal_string \"M0,-20 L6,-6 L20,0 L6,6 L0,20 L-6,6 L-20,0 L-6,-6 Z\""},"value":"M0,-20 L6,-6 L20,0 L6,6 L0,20 L-6,6 L-20,0 L-6,-6 Z"},"functionReturnParameters":10383,"id":10385,"nodeType":"Return","src":"6083:60:31"}]},"id":10387,"implemented":true,"kind":"function","modifiers":[],"name":"_sparklePath","nameLocation":"6019:12:31","nodeType":"FunctionDefinition","parameters":{"id":10380,"nodeType":"ParameterList","parameters":[],"src":"6031:2:31"},"returnParameters":{"id":10383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10387,"src":"6057:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10381,"name":"string","nodeType":"ElementaryTypeName","src":"6057:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6056:15:31"},"scope":10810,"src":"6010:141:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1752],"body":{"id":10524,"nodeType":"Block","src":"6269:1263:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10397,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10389,"src":"6297:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10396,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"6288:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":10398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6288:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6317:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6309:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10399,"name":"address","nodeType":"ElementaryTypeName","src":"6309:7:31","typeDescriptions":{}}},"id":10402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6309:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6288:31:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e41","id":10404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6321:4:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c81895a0e097dc7002fdb2ad0f186a1a53ed665dcef04c900d252cddee18e713","typeString":"literal_string \"NA\""},"value":"NA"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c81895a0e097dc7002fdb2ad0f186a1a53ed665dcef04c900d252cddee18e713","typeString":"literal_string \"NA\""}],"id":10395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6280:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6280:46:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10406,"nodeType":"ExpressionStatement","src":"6280:46:31"},{"assignments":[10408,10410],"declarations":[{"constant":false,"id":10408,"mutability":"mutable","name":"fruit","nameLocation":"6354:5:31","nodeType":"VariableDeclaration","scope":10524,"src":"6340:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10407,"name":"string","nodeType":"ElementaryTypeName","src":"6340:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10410,"mutability":"mutable","name":"idx","nameLocation":"6367:3:31","nodeType":"VariableDeclaration","scope":10524,"src":"6361:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10409,"name":"uint8","nodeType":"ElementaryTypeName","src":"6361:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":10414,"initialValue":{"arguments":[{"id":10412,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10389,"src":"6383:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10411,"name":"_fruitOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"6374:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint8_$","typeString":"function (uint256) view returns (string memory,uint8)"}},"id":10413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint8_$","typeString":"tuple(string memory,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"6339:52:31"},{"assignments":[10416],"declarations":[{"constant":false,"id":10416,"mutability":"mutable","name":"d","nameLocation":"6408:1:31","nodeType":"VariableDeclaration","scope":10524,"src":"6402:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10415,"name":"uint8","nodeType":"ElementaryTypeName","src":"6402:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":10420,"initialValue":{"arguments":[{"id":10418,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10389,"src":"6428:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10417,"name":"deliciousnessOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"6412:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint8_$","typeString":"function (uint256) view returns (uint8)"}},"id":10419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6412:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6402:34:31"},{"assignments":[10422,10424],"declarations":[{"constant":false,"id":10422,"mutability":"mutable","name":"bg","nameLocation":"6462:2:31","nodeType":"VariableDeclaration","scope":10524,"src":"6448:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10421,"name":"string","nodeType":"ElementaryTypeName","src":"6448:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10424,"mutability":"mutable","name":"fg","nameLocation":"6480:2:31","nodeType":"VariableDeclaration","scope":10524,"src":"6466:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10423,"name":"string","nodeType":"ElementaryTypeName","src":"6466:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":10429,"initialValue":{"arguments":[{"id":10426,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10410,"src":"6495:3:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":10427,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10416,"src":"6500:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10425,"name":"_palette","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10312,"src":"6486:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$","typeString":"function (uint8,uint8) pure returns (string memory,string memory)"}},"id":10428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6486:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$","typeString":"tuple(string memory,string memory)"}},"nodeType":"VariableDeclarationStatement","src":"6447:55:31"},{"assignments":[10431],"declarations":[{"constant":false,"id":10431,"mutability":"mutable","name":"tier","nameLocation":"6527:4:31","nodeType":"VariableDeclaration","scope":10524,"src":"6513:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10430,"name":"string","nodeType":"ElementaryTypeName","src":"6513:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":10435,"initialValue":{"arguments":[{"id":10433,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10416,"src":"6540:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10432,"name":"_tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10178,"src":"6534:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$returns$_t_string_memory_ptr_$","typeString":"function (uint8) pure returns (string memory)"}},"id":10434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:8:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6513:29:31"},{"assignments":[10437],"declarations":[{"constant":false,"id":10437,"mutability":"mutable","name":"name_","nameLocation":"6569:5:31","nodeType":"VariableDeclaration","scope":10524,"src":"6555:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10436,"name":"string","nodeType":"ElementaryTypeName","src":"6555:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":10449,"initialValue":{"arguments":[{"id":10441,"name":"brand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9857,"src":"6591:5:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"20","id":10442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6598:3:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a","typeString":"literal_string \" \""},"value":" "},{"id":10443,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9860,"src":"6603:10:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"2023","id":10444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6615:4:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12","typeString":"literal_string \" #\""},"value":" #"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10445,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10389,"src":"6621:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6629:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"6621:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":10447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6621:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a","typeString":"literal_string \" \""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_21af77cd140717e5867fa5acefcf2fc51f566448915c6d7fd3ac9763b6517a12","typeString":"literal_string \" #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":10439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6577:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":10438,"name":"string","nodeType":"ElementaryTypeName","src":"6577:6:31","typeDescriptions":{}}},"id":10440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6584:6:31","memberName":"concat","nodeType":"MemberAccess","src":"6577:13:31","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":10448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6577:63:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6555:85:31"},{"assignments":[10451],"declarations":[{"constant":false,"id":10451,"mutability":"mutable","name":"desc","nameLocation":"6665:4:31","nodeType":"VariableDeclaration","scope":10524,"src":"6651:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10450,"name":"string","nodeType":"ElementaryTypeName","src":"6651:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":10469,"initialValue":{"arguments":[{"hexValue":"4120","id":10455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6701:4:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c032d01068f796d04e8034b6a70a25cd1aac6af3008af2a85c52e437a8504fe","typeString":"literal_string \"A \""},"value":"A "},{"id":10456,"name":"brand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9857,"src":"6707:5:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"20","id":10457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6714:3:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a","typeString":"literal_string \" \""},"value":" "},{"id":10458,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9860,"src":"6719:10:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"2070696563652e20466c61766f723a20","id":10459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6744:18:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_15ca266c02470938e70dc9832e28bc2c529fe542b195846decfda663254ca5bb","typeString":"literal_string \" piece. Flavor: \""},"value":" piece. Flavor: "},{"id":10460,"name":"fruit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10408,"src":"6764:5:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e20546965723a20","id":10461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6784:10:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_8be2a159a1860c6d1b1ec178da819e1551a217f8e01aaa9be7691b8b9728647a","typeString":"literal_string \". Tier: \""},"value":". Tier: "},{"id":10462,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10431,"src":"6796:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e2044656c6963696f75736e6573733a20","id":10463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6815:19:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1b86262753182e97a41545070500fc2e67ed823e27c098c792fe5ff6e6a4898","typeString":"literal_string \". Deliciousness: \""},"value":". Deliciousness: "},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10464,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10416,"src":"6836:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6838:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"6836:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":10466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6836:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2f3130302e20416e696d61746564206f6e2d636861696e205356472e","id":10467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6850:30:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f9b59bb1dc7dcdc0f37b10e97fc109020714181f83a4a5d95a81b60ff84e6a5","typeString":"literal_string \"/100. Animated on-chain SVG.\""},"value":"/100. Animated on-chain SVG."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9c032d01068f796d04e8034b6a70a25cd1aac6af3008af2a85c52e437a8504fe","typeString":"literal_string \"A \""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a","typeString":"literal_string \" \""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_15ca266c02470938e70dc9832e28bc2c529fe542b195846decfda663254ca5bb","typeString":"literal_string \" piece. Flavor: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_8be2a159a1860c6d1b1ec178da819e1551a217f8e01aaa9be7691b8b9728647a","typeString":"literal_string \". Tier: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c1b86262753182e97a41545070500fc2e67ed823e27c098c792fe5ff6e6a4898","typeString":"literal_string \". Deliciousness: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_9f9b59bb1dc7dcdc0f37b10e97fc109020714181f83a4a5d95a81b60ff84e6a5","typeString":"literal_string \"/100. Animated on-chain SVG.\""}],"expression":{"id":10453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6673:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":10452,"name":"string","nodeType":"ElementaryTypeName","src":"6673:6:31","typeDescriptions":{}}},"id":10454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6680:6:31","memberName":"concat","nodeType":"MemberAccess","src":"6673:13:31","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":10468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6673:218:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6651:240:31"},{"assignments":[10471],"declarations":[{"constant":false,"id":10471,"mutability":"mutable","name":"svg","nameLocation":"6918:3:31","nodeType":"VariableDeclaration","scope":10524,"src":"6904:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10470,"name":"string","nodeType":"ElementaryTypeName","src":"6904:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":10480,"initialValue":{"arguments":[{"id":10473,"name":"fruit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10408,"src":"6929:5:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10474,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10431,"src":"6936:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10475,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10416,"src":"6942:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":10476,"name":"bg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10422,"src":"6945:2:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10477,"name":"fg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10424,"src":"6949:2:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10478,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10389,"src":"6953:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10472,"name":"_svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10742,"src":"6924:4:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (string memory,string memory,uint8,string memory,string memory,uint256) view returns (string memory)"}},"id":10479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6904:57:31"},{"assignments":[10482],"declarations":[{"constant":false,"id":10482,"mutability":"mutable","name":"json","nameLocation":"6985:4:31","nodeType":"VariableDeclaration","scope":10524,"src":"6972:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10481,"name":"bytes","nodeType":"ElementaryTypeName","src":"6972:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":10511,"initialValue":{"arguments":[{"hexValue":"7b226e616d65223a22","id":10485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7023:11:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","typeString":"literal_string \"{\"name\":\"\""},"value":"{\"name\":\""},{"id":10486,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10437,"src":"7036:5:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c226465736372697074696f6e223a22","id":10487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7056:19:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d","typeString":"literal_string \"\",\"description\":\"\""},"value":"\",\"description\":\""},{"id":10488,"name":"desc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10451,"src":"7077:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c22696d616765223a22646174613a696d6167652f7376672b786d6c3b6261736536342c","id":10489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7096:39:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_00fad623d7e3690fa36d6f86b2cd33b5bce9b3fa2b9c26a640615cba5c2237ea","typeString":"literal_string \"\",\"image\":\"data:image/svg+xml;base64,\""},"value":"\",\"image\":\"data:image/svg+xml;base64,"},{"arguments":[{"arguments":[{"id":10494,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10471,"src":"7157:3:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7151:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10492,"name":"bytes","nodeType":"ElementaryTypeName","src":"7151:5:31","typeDescriptions":{}}},"id":10495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10490,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"7137:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$4382_$","typeString":"type(library Base64)"}},"id":10491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7144:6:31","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":4312,"src":"7137:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":10496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c2261747472696275746573223a5b","id":10497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7177:18:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_7487153cb87e4220785cc56f62b4fe19c8b708f8f57ad3b428abc264b5019669","typeString":"literal_string \"\",\"attributes\":[\""},"value":"\",\"attributes\":["},{"hexValue":"7b2274726169745f74797065223a22466c61766f72222c2276616c7565223a22","id":10498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7212:34:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_38e7a9b491a0f54b86c7c4b2932c3a48fcb8a0006e3619eec2ca96aebd01fbf0","typeString":"literal_string \"{\"trait_type\":\"Flavor\",\"value\":\"\""},"value":"{\"trait_type\":\"Flavor\",\"value\":\""},{"id":10499,"name":"fruit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10408,"src":"7248:5:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d2c","id":10500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7255:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},"value":"\"},"},{"hexValue":"7b2274726169745f74797065223a2254696572222c2276616c7565223a22","id":10501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7277:32:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b807746fc30191ac293100056e599f1e6a99f221dacbb781b1da01ef3e13474","typeString":"literal_string \"{\"trait_type\":\"Tier\",\"value\":\"\""},"value":"{\"trait_type\":\"Tier\",\"value\":\""},{"id":10502,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10431,"src":"7311:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d2c","id":10503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7317:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},"value":"\"},"},{"hexValue":"7b2274726169745f74797065223a2244656c6963696f75736e657373222c2276616c7565223a","id":10504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7339:40:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_f06e2c14a3b181b816196ba3e7054e2519890fd5e6863c5f780c0da62a7db01e","typeString":"literal_string \"{\"trait_type\":\"Deliciousness\",\"value\":\""},"value":"{\"trait_type\":\"Deliciousness\",\"value\":"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10505,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10416,"src":"7381:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7383:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"7381:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":10507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7381:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"7d","id":10508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7395:3:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},"value":"}"},{"hexValue":"5d7d","id":10509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7413:4:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab149d31dbf8c3ed1cc7ba15c88205185e426c492b6b350058945b7266ec7e76","typeString":"literal_string \"]}\""},"value":"]}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","typeString":"literal_string \"{\"name\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d","typeString":"literal_string \"\",\"description\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_00fad623d7e3690fa36d6f86b2cd33b5bce9b3fa2b9c26a640615cba5c2237ea","typeString":"literal_string \"\",\"image\":\"data:image/svg+xml;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_7487153cb87e4220785cc56f62b4fe19c8b708f8f57ad3b428abc264b5019669","typeString":"literal_string \"\",\"attributes\":[\""},{"typeIdentifier":"t_stringliteral_38e7a9b491a0f54b86c7c4b2932c3a48fcb8a0006e3619eec2ca96aebd01fbf0","typeString":"literal_string \"{\"trait_type\":\"Flavor\",\"value\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},{"typeIdentifier":"t_stringliteral_4b807746fc30191ac293100056e599f1e6a99f221dacbb781b1da01ef3e13474","typeString":"literal_string \"{\"trait_type\":\"Tier\",\"value\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},{"typeIdentifier":"t_stringliteral_f06e2c14a3b181b816196ba3e7054e2519890fd5e6863c5f780c0da62a7db01e","typeString":"literal_string \"{\"trait_type\":\"Deliciousness\",\"value\":\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},{"typeIdentifier":"t_stringliteral_ab149d31dbf8c3ed1cc7ba15c88205185e426c492b6b350058945b7266ec7e76","typeString":"literal_string \"]}\""}],"expression":{"id":10483,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6992:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6996:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"6992:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6992:436:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6972:456:31"},{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":10516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7470:31:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"arguments":[{"id":10519,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10482,"src":"7517:4:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10517,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"7503:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$4382_$","typeString":"type(library Base64)"}},"id":10518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7510:6:31","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":4312,"src":"7503:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":10520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7503:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":10514,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7453:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7457:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"7453:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7453:70:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7446:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":10512,"name":"string","nodeType":"ElementaryTypeName","src":"7446:6:31","typeDescriptions":{}}},"id":10522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7446:78:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":10394,"id":10523,"nodeType":"Return","src":"7439:85:31"}]},"functionSelector":"c87b56dd","id":10525,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"6198:8:31","nodeType":"FunctionDefinition","overrides":{"id":10391,"nodeType":"OverrideSpecifier","overrides":[],"src":"6236:8:31"},"parameters":{"id":10390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10389,"mutability":"mutable","name":"tokenId","nameLocation":"6215:7:31","nodeType":"VariableDeclaration","scope":10525,"src":"6207:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10388,"name":"uint256","nodeType":"ElementaryTypeName","src":"6207:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6206:17:31"},"returnParameters":{"id":10394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10525,"src":"6254:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10392,"name":"string","nodeType":"ElementaryTypeName","src":"6254:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6253:15:31"},"scope":10810,"src":"6189:1343:31","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10741,"nodeType":"Block","src":"7756:4473:31","statements":[{"assignments":[10543],"declarations":[{"constant":false,"id":10543,"mutability":"mutable","name":"pulseDur","nameLocation":"7897:8:31","nodeType":"VariableDeclaration","scope":10741,"src":"7889:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10542,"name":"uint256","nodeType":"ElementaryTypeName","src":"7889:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10553,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":10544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7908:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10547,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10531,"src":"7921:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7913:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10545,"name":"uint256","nodeType":"ElementaryTypeName","src":"7913:7:31","typeDescriptions":{}}},"id":10548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7913:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3230","id":10549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7926:2:31","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"7913:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7912:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7908:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7889:40:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10554,"name":"pulseDur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10543,"src":"7956:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"33","id":10555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7967:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"7956:12:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10561,"nodeType":"IfStatement","src":"7952:30:31","trueBody":{"expression":{"id":10559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10557,"name":"pulseDur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10543,"src":"7970:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"33","id":10558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7981:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"7970:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10560,"nodeType":"ExpressionStatement","src":"7970:12:31"}},{"assignments":[10563],"declarations":[{"constant":false,"id":10563,"mutability":"mutable","name":"spinDur","nameLocation":"8001:7:31","nodeType":"VariableDeclaration","scope":10741,"src":"7993:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10562,"name":"uint256","nodeType":"ElementaryTypeName","src":"7993:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10573,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3134","id":10564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:2:31","typeDescriptions":{"typeIdentifier":"t_rational_14_by_1","typeString":"int_const 14"},"value":"14"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10567,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10531,"src":"8026:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8018:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10565,"name":"uint256","nodeType":"ElementaryTypeName","src":"8018:7:31","typeDescriptions":{}}},"id":10568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8018:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3132","id":10569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8031:2:31","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"8018:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8017:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8012:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7993:41:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10574,"name":"spinDur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10563,"src":"8061:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"36","id":10575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8071:1:31","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"8061:11:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10581,"nodeType":"IfStatement","src":"8057:28:31","trueBody":{"expression":{"id":10579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10577,"name":"spinDur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10563,"src":"8074:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"36","id":10578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8084:1:31","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"8074:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10580,"nodeType":"ExpressionStatement","src":"8074:11:31"}},{"assignments":[10583],"declarations":[{"constant":false,"id":10583,"mutability":"mutable","name":"shimmerDur","nameLocation":"8104:10:31","nodeType":"VariableDeclaration","scope":10741,"src":"8096:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10582,"name":"uint256","nodeType":"ElementaryTypeName","src":"8096:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10593,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3132","id":10584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8117:2:31","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10587,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10531,"src":"8131:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8123:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10585,"name":"uint256","nodeType":"ElementaryTypeName","src":"8123:7:31","typeDescriptions":{}}},"id":10588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8123:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3135","id":10589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8136:2:31","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"8123:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8122:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8117:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8096:43:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10594,"name":"shimmerDur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10583,"src":"8163:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"35","id":10595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8176:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"8163:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10601,"nodeType":"IfStatement","src":"8159:34:31","trueBody":{"expression":{"id":10599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10597,"name":"shimmerDur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10583,"src":"8179:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"35","id":10598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8192:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"8179:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10600,"nodeType":"ExpressionStatement","src":"8179:14:31"}},{"assignments":[10603],"declarations":[{"constant":false,"id":10603,"mutability":"mutable","name":"meterW","nameLocation":"8220:6:31","nodeType":"VariableDeclaration","scope":10741,"src":"8206:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10602,"name":"string","nodeType":"ElementaryTypeName","src":"8206:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":10607,"initialValue":{"arguments":[{"id":10605,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10531,"src":"8239:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10604,"name":"_barWidth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10766,"src":"8229:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$returns$_t_string_memory_ptr_$","typeString":"function (uint8) pure returns (string memory)"}},"id":10606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8229:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8206:35:31"},{"assignments":[10609],"declarations":[{"constant":false,"id":10609,"mutability":"mutable","name":"path","nameLocation":"8266:4:31","nodeType":"VariableDeclaration","scope":10741,"src":"8252:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10608,"name":"string","nodeType":"ElementaryTypeName","src":"8252:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":10613,"initialValue":{"arguments":[{"id":10611,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10529,"src":"8286:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10610,"name":"_shapePath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10379,"src":"8275:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":10612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8275:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8252:39:31"},{"assignments":[10615],"declarations":[{"constant":false,"id":10615,"mutability":"mutable","name":"showSparkle","nameLocation":"8375:11:31","nodeType":"VariableDeclaration","scope":10741,"src":"8370:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10614,"name":"bool","nodeType":"ElementaryTypeName","src":"8370:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10638,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10619,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10529,"src":"8406:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8400:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10617,"name":"bytes","nodeType":"ElementaryTypeName","src":"8400:5:31","typeDescriptions":{}}},"id":10620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8400:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10616,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8390:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8390:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"5072696d65","id":10623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8426:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffc66c8548bc388f0156d76251a192b57d2601764d8478982e579b825596b8bc","typeString":"literal_string \"Prime\""},"value":"Prime"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ffc66c8548bc388f0156d76251a192b57d2601764d8478982e579b825596b8bc","typeString":"literal_string \"Prime\""}],"id":10622,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8416:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8416:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8390:44:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10629,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10529,"src":"8480:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8474:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10627,"name":"bytes","nodeType":"ElementaryTypeName","src":"8474:5:31","typeDescriptions":{}}},"id":10630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8474:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10626,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8464:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8464:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"4c6567656e64617279","id":10633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8500:11:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310","typeString":"literal_string \"Legendary\""},"value":"Legendary"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310","typeString":"literal_string \"Legendary\""}],"id":10632,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8490:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8490:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8464:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8390:122:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":10637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8389:124:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8370:143:31"},{"expression":{"arguments":[{"arguments":[{"hexValue":"3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667222077696474683d223130303022206865696768743d2231303030223e","id":10643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8589:69:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_53ad136763d38165d04c93d89d4fb7878a7097cb20ccc7d3241e887c95a45bd0","typeString":"literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1000\" height=\"1000\">\""},"value":"<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1000\" height=\"1000\">"},{"hexValue":"3c646566733e","id":10644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8677:8:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9d6f35adafbd6db05cf66701a579ef4e1499ac0364b80726ad93d0f9855ba3a","typeString":"literal_string \"<defs>\""},"value":"<defs>"},{"hexValue":"3c7374796c653e40666f6e742d666163657b666f6e742d66616d696c793a496e7465723b7372633a6c6f63616c28496e746572293b7d202e747b666f6e742d66616d696c793a496e7465722c73797374656d2d75692c73616e732d73657269663b66696c6c3a236666667d3c2f7374796c653e","id":10645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8706:117:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1dad36cbf4bea32ba09c93741ab380fc8fefe9e1c6a91373bde7d4a4338e3ef","typeString":"literal_string \"<style>@font-face{font-family:Inter;src:local(Inter);} .t{font-family:Inter,system-ui,sans-serif;fill:#fff}</style>\""},"value":"<style>@font-face{font-family:Inter;src:local(Inter);} .t{font-family:Inter,system-ui,sans-serif;fill:#fff}</style>"},{"hexValue":"3c72616469616c4772616469656e742069643d2267223e","id":10646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8911:25:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb5cea042cdb61319f5b080b42102bdd76df69297ecf3d021399eb37b3007381","typeString":"literal_string \"<radialGradient id=\"g\">\""},"value":"<radialGradient id=\"g\">"},{"hexValue":"3c73746f70206f66667365743d223025222073746f702d636f6c6f723d22","id":10647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8959:32:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_28815b2871f28e2728d57f9056ecbfaf80b207d380aae0691e249747e6be2a78","typeString":"literal_string \"<stop offset=\"0%\" stop-color=\"\""},"value":"<stop offset=\"0%\" stop-color=\""},{"id":10648,"name":"fg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10535,"src":"8993:2:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222073746f702d6f7061636974793d22302e3935223e","id":10649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8997:24:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_a354751b1feb4dba3b0df883dcf656c6f3694fca2907054b9e9302314db8da6b","typeString":"literal_string \"\" stop-opacity=\"0.95\">\""},"value":"\" stop-opacity=\"0.95\">"},{"hexValue":"3c616e696d617465206174747269627574654e616d653d226f6666736574222076616c7565733d2230253b3230253b302522206475723d22","id":10650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9046:58:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_d68ca17a601a5f1fdaa126f2aeee2e31800ce432a7e4ba7f79ad712d266b4689","typeString":"literal_string \"<animate attributeName=\"offset\" values=\"0%;20%;0%\" dur=\"\""},"value":"<animate attributeName=\"offset\" values=\"0%;20%;0%\" dur=\""},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10651,"name":"pulseDur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10543,"src":"9106:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9115:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"9106:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":10653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9106:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"732220726570656174436f756e743d22696e646566696e697465222f3e","id":10654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9127:31:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_236e5ec8ca942fbf0cadeb4246fd309dfc33d6949bd8dbe749ee486f85837702","typeString":"literal_string \"s\" repeatCount=\"indefinite\"/>\""},"value":"s\" repeatCount=\"indefinite\"/>"},{"hexValue":"3c2f73746f703e","id":10655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9181:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_6124818ac7d60b3b1c934a30446b8f00f46724be06ba8319dd313c4179dc0d18","typeString":"literal_string \"</stop>\""},"value":"</stop>"},{"hexValue":"3c73746f70206f66667365743d2231303025222073746f702d636f6c6f723d22","id":10656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9213:34:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_d90a125ebb6190b9da4d9487c1525d98c28dd7bef5545cc506eb50adcd548598","typeString":"literal_string \"<stop offset=\"100%\" stop-color=\"\""},"value":"<stop offset=\"100%\" stop-color=\""},{"id":10657,"name":"fg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10535,"src":"9249:2:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222073746f702d6f7061636974793d22302e3132222f3e","id":10658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9253:25:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_312a29827037710cd31baddbefdc411da52b76584d0c50e955a8312d1e8737da","typeString":"literal_string \"\" stop-opacity=\"0.12\"/>\""},"value":"\" stop-opacity=\"0.12\"/>"},{"hexValue":"3c2f72616469616c4772616469656e743e","id":10659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9299:19:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_f20fe31ec849eacc551677761d5f4b17b99f608b6d28b26da2b1b008f2b2b3c2","typeString":"literal_string \"</radialGradient>\""},"value":"</radialGradient>"},{"hexValue":"3c6c696e6561724772616469656e742069643d227368696d6d6572222078313d223025222079313d223025222078323d2231303025222079323d223025223e","id":10660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9398:65:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbeeff0d1b5e57fe75c7e47f0e5a0ba9602b14e5f782591ab0b8e53ed8dd5ef1","typeString":"literal_string \"<linearGradient id=\"shimmer\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\""},"value":"<linearGradient id=\"shimmer\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">"},{"hexValue":"3c73746f70206f66667365743d223025222073746f702d636f6c6f723d22236666666666663230222f3e","id":10661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9486:44:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a232615ffb3e5bbca1577485f8f866aa14f39ecdbd48013e9ba694f1aa9889a","typeString":"literal_string \"<stop offset=\"0%\" stop-color=\"#ffffff20\"/>\""},"value":"<stop offset=\"0%\" stop-color=\"#ffffff20\"/>"},{"hexValue":"3c73746f70206f66667365743d22353025222073746f702d636f6c6f723d22236666666666663630223e","id":10662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9553:44:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1cae7e4a61d1492af87cccefe7a3919d6dfbdac4c48a60c7266a8c9d85419b3","typeString":"literal_string \"<stop offset=\"50%\" stop-color=\"#ffffff60\">\""},"value":"<stop offset=\"50%\" stop-color=\"#ffffff60\">"},{"hexValue":"3c616e696d617465206174747269627574654e616d653d226f6666736574222076616c7565733d2230253b3130302522206475723d22","id":10663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9622:56:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5d5fcf7a041d3e18b7e6bfad4b8a166f0006c0b40c2f2137410625dc81fa65b","typeString":"literal_string \"<animate attributeName=\"offset\" values=\"0%;100%\" dur=\"\""},"value":"<animate attributeName=\"offset\" values=\"0%;100%\" dur=\""},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10664,"name":"shimmerDur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10583,"src":"9680:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9691:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"9680:19:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":10666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9680:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"732220726570656174436f756e743d22696e646566696e697465222f3e","id":10667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9703:31:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_236e5ec8ca942fbf0cadeb4246fd309dfc33d6949bd8dbe749ee486f85837702","typeString":"literal_string \"s\" repeatCount=\"indefinite\"/>\""},"value":"s\" repeatCount=\"indefinite\"/>"},{"hexValue":"3c2f73746f703e","id":10668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9757:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_6124818ac7d60b3b1c934a30446b8f00f46724be06ba8319dd313c4179dc0d18","typeString":"literal_string \"</stop>\""},"value":"</stop>"},{"hexValue":"3c73746f70206f66667365743d2231303025222073746f702d636f6c6f723d22236666666666663230222f3e","id":10669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9789:46:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c0a68fac02d8ca83fb2d0e7577638f9504edc31792ae728bc7756bcafe028884","typeString":"literal_string \"<stop offset=\"100%\" stop-color=\"#ffffff20\"/>\""},"value":"<stop offset=\"100%\" stop-color=\"#ffffff20\"/>"},{"hexValue":"3c2f6c696e6561724772616469656e743e","id":10670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9856:19:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_653201dcb91cb57ac7a643c526a178580318c83b3a526adb18a6193794cca242","typeString":"literal_string \"</linearGradient>\""},"value":"</linearGradient>"},{"hexValue":"3c2f646566733e","id":10671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9894:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_bed599d0025e0618137b41a2a30b05693d5ffd7547da6408dc30d1faba1b52ab","typeString":"literal_string \"</defs>\""},"value":"</defs>"},{"hexValue":"3c726563742077696474683d223130302522206865696768743d2231303025222072783d223438222066696c6c3d22","id":10672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9953:49:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_0171e13967bcc629eb121a99fa7f825a1c99581261fee766975f876ee03d26d5","typeString":"literal_string \"<rect width=\"100%\" height=\"100%\" rx=\"48\" fill=\"\""},"value":"<rect width=\"100%\" height=\"100%\" rx=\"48\" fill=\""},{"id":10673,"name":"bg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10533,"src":"10004:2:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222f3e","id":10674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10008:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_b26240e716d0906f15dfc172fadbe2347b20c889873f9bdb04fd7ee803f7f175","typeString":"literal_string \"\"/>\""},"value":"\"/>"},{"hexValue":"3c67207472616e73666f726d3d227472616e736c617465283530302c35323029223e","id":10675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10089:36:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_50c5f1ee0971af27109ce826e26d41d0a74845dd7ad08abe116d1667eb5d66a7","typeString":"literal_string \"<g transform=\"translate(500,520)\">\""},"value":"<g transform=\"translate(500,520)\">"},{"hexValue":"3c673e","id":10676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10146:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_1849a7c2a9bb29033194806b2a6e1912c3c048e34f248e846cf29b6a1ae24683","typeString":"literal_string \"<g>\""},"value":"<g>"},{"hexValue":"3c636972636c6520723d22333630222066696c6c3d2275726c28236729223e","id":10677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10174:33:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_7248da85b26735049c296b1a952eb7c03d5718ce048607a01b8bba95efbf338e","typeString":"literal_string \"<circle r=\"360\" fill=\"url(#g)\">\""},"value":"<circle r=\"360\" fill=\"url(#g)\">"},{"hexValue":"3c616e696d6174655472616e73666f726d206174747269627574654e616d653d227472616e73666f726d2220747970653d227363616c65222076616c7565733d22313b312e30353b3122206475723d22","id":10678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10232:82:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_573a16c59f8001a23c47f87dac2771a03424ed17fff02e2a2a07f2d922d350ad","typeString":"literal_string \"<animateTransform attributeName=\"transform\" type=\"scale\" values=\"1;1.05;1\" dur=\"\""},"value":"<animateTransform attributeName=\"transform\" type=\"scale\" values=\"1;1.05;1\" dur=\""},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10679,"name":"pulseDur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10543,"src":"10316:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10325:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"10316:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":10681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10316:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"732220726570656174436f756e743d22696e646566696e697465222f3e","id":10682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10337:31:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_236e5ec8ca942fbf0cadeb4246fd309dfc33d6949bd8dbe749ee486f85837702","typeString":"literal_string \"s\" repeatCount=\"indefinite\"/>\""},"value":"s\" repeatCount=\"indefinite\"/>"},{"hexValue":"3c2f636972636c653e","id":10683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10391:11:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_1739c7447433067521cb826c40cb859c6509460d5a1ac7d1319a29065d8ea358","typeString":"literal_string \"</circle>\""},"value":"</circle>"},{"hexValue":"3c2f673e","id":10684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10423:6:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},"value":"</g>"},{"hexValue":"3c7061746820643d22","id":10685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10502:11:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_8435fbe25d8e10dc1b7fa802b6ce492013481bf38ccb57fac98cd4034d9fca4a","typeString":"literal_string \"<path d=\"\""},"value":"<path d=\""},{"id":10686,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10609,"src":"10515:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22207472616e73666f726d3d227472616e736c617465282d3530302c2d35323029222066696c6c3d22","id":10687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10521:43:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_64efa2136c42d0d0d1e59790167d0666cae24e15bfe8524bc72b1acdefcc1970","typeString":"literal_string \"\" transform=\"translate(-500,-520)\" fill=\"\""},"value":"\" transform=\"translate(-500,-520)\" fill=\""},{"id":10688,"name":"fg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10535,"src":"10566:2:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22206f7061636974793d22302e3138222f3e","id":10689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10570:20:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_37c5afb06c3ea191c9ac95da24bf36211c99e2ef73de36f4f99c9d03b76a7ce7","typeString":"literal_string \"\" opacity=\"0.18\"/>\""},"value":"\" opacity=\"0.18\"/>"},{"condition":{"id":10690,"name":"showSparkle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10615,"src":"10661:11:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":10709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11218:2:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":10710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10661:559:31","trueExpression":{"arguments":[{"arguments":[{"hexValue":"3c67207472616e73666f726d3d227472616e736c61746528302c2d32303029223e","id":10695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10774:35:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbe3934fd1489a2a87b7d3219d01961ae5c32085e5e969e216e33367f306c9d9","typeString":"literal_string \"<g transform=\"translate(0,-200)\">\""},"value":"<g transform=\"translate(0,-200)\">"},{"hexValue":"3c7061746820643d22","id":10696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10840:11:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_8435fbe25d8e10dc1b7fa802b6ce492013481bf38ccb57fac98cd4034d9fca4a","typeString":"literal_string \"<path d=\"\""},"value":"<path d=\""},{"arguments":[],"expression":{"argumentTypes":[],"id":10697,"name":"_sparklePath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10387,"src":"10853:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":10698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10853:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222066696c6c3d22236666666666666430223e","id":10699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10869:21:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_16c2bbd3c8a8cf3bf3d785de6f7a7da71831f373a3bdd38c1ab4b11b2725ceec","typeString":"literal_string \"\" fill=\"#ffffffd0\">\""},"value":"\" fill=\"#ffffffd0\">"},{"hexValue":"3c616e696d6174655472616e73666f726d206174747269627574654e616d653d227472616e73666f726d2220747970653d22726f74617465222066726f6d3d2230203020302220746f3d223336302030203022206475723d22","id":10700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10923:91:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc1a5c74b4f4c30598646aa32664d6c1f053053bd7725fb6f2b49b8e9785dae6","typeString":"literal_string \"<animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 0 0\" to=\"360 0 0\" dur=\"\""},"value":"<animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 0 0\" to=\"360 0 0\" dur=\""},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10701,"name":"spinDur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10563,"src":"11016:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11024:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"11016:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":10703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11016:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"732220726570656174436f756e743d22696e646566696e697465222f3e","id":10704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11036:31:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_236e5ec8ca942fbf0cadeb4246fd309dfc33d6949bd8dbe749ee486f85837702","typeString":"literal_string \"s\" repeatCount=\"indefinite\"/>\""},"value":"s\" repeatCount=\"indefinite\"/>"},{"hexValue":"3c2f706174683e","id":10705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11098:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f2f4ae4372d467c5fa0d0feb5669466a00f90c39ab15ebe20f5c11c47d6f027","typeString":"literal_string \"</path>\""},"value":"</path>"},{"hexValue":"3c2f673e","id":10706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11136:6:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},"value":"</g>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fbe3934fd1489a2a87b7d3219d01961ae5c32085e5e969e216e33367f306c9d9","typeString":"literal_string \"<g transform=\"translate(0,-200)\">\""},{"typeIdentifier":"t_stringliteral_8435fbe25d8e10dc1b7fa802b6ce492013481bf38ccb57fac98cd4034d9fca4a","typeString":"literal_string \"<path d=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_16c2bbd3c8a8cf3bf3d785de6f7a7da71831f373a3bdd38c1ab4b11b2725ceec","typeString":"literal_string \"\" fill=\"#ffffffd0\">\""},{"typeIdentifier":"t_stringliteral_bc1a5c74b4f4c30598646aa32664d6c1f053053bd7725fb6f2b49b8e9785dae6","typeString":"literal_string \"<animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 0 0\" to=\"360 0 0\" dur=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_236e5ec8ca942fbf0cadeb4246fd309dfc33d6949bd8dbe749ee486f85837702","typeString":"literal_string \"s\" repeatCount=\"indefinite\"/>\""},{"typeIdentifier":"t_stringliteral_7f2f4ae4372d467c5fa0d0feb5669466a00f90c39ab15ebe20f5c11c47d6f027","typeString":"literal_string \"</path>\""},{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""}],"expression":{"id":10693,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10729:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10733:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"10729:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10729:440:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10696:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":10691,"name":"string","nodeType":"ElementaryTypeName","src":"10696:6:31","typeDescriptions":{}}},"id":10708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10696:498:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f673e","id":10711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11241:6:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},"value":"</g>"},{"hexValue":"3c7465787420783d2238302220793d223230302220636c6173733d22742220666f6e742d73697a653d22363422206f7061636974793d22302e39223e","id":10712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11309:62:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba0e614bd56c35a33ad520bba33e0fec436a2edaee4c98213ef20363fab6f637","typeString":"literal_string \"<text x=\"80\" y=\"200\" class=\"t\" font-size=\"64\" opacity=\"0.9\">\""},"value":"<text x=\"80\" y=\"200\" class=\"t\" font-size=\"64\" opacity=\"0.9\">"},{"id":10713,"name":"fruit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10527,"src":"11373:5:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"202d20","id":10714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11380:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e7b109ea8329776b4d3d2e2c2bf39b3f7e02ce64c66994d3a0db4ff2e229f54","typeString":"literal_string \" - \""},"value":" - "},{"id":10715,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10529,"src":"11387:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f746578743e","id":10716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11393:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""},"value":"</text>"},{"hexValue":"3c7465787420783d2238302220793d223238302220636c6173733d22742220666f6e742d73697a653d22333622206f7061636974793d22302e36223e23","id":10717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11421:63:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_544ae899725d9b2b41b8640d2c267ac39d208b10475e6b45ea6063ca10b74ffe","typeString":"literal_string \"<text x=\"80\" y=\"280\" class=\"t\" font-size=\"36\" opacity=\"0.6\">#\""},"value":"<text x=\"80\" y=\"280\" class=\"t\" font-size=\"36\" opacity=\"0.6\">#"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10718,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10537,"src":"11486:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11494:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"11486:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":10720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11486:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f746578743e","id":10721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11506:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""},"value":"</text>"},{"hexValue":"3c7465787420783d2238302220793d223730302220636c6173733d22742220666f6e742d73697a653d22323822206f7061636974793d22302e3835223e44656c6963696f75736e65737320","id":10722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11568:77:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c709648c2b4c311456414575b09cb0f222b5ce3207286519d632e900ef3870fd","typeString":"literal_string \"<text x=\"80\" y=\"700\" class=\"t\" font-size=\"28\" opacity=\"0.85\">Deliciousness \""},"value":"<text x=\"80\" y=\"700\" class=\"t\" font-size=\"28\" opacity=\"0.85\">Deliciousness "},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10723,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10531,"src":"11647:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11649:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"11647:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":10725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11647:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2f3130303c2f746578743e","id":10726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11661:13:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c75b57bbd31959cdcb9ef2b4796ac3413fef8d7913a4a3ae9e7bd8acd3a0bee","typeString":"literal_string \"/100</text>\""},"value":"/100</text>"},{"hexValue":"3c7265637420783d2238302220793d22373230222077696474683d2238343022206865696768743d223336222072783d223138222066696c6c3d22236666666666663230222f3e","id":10727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11749:73:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_39af6056632d6b1388032a96e05b1d4447b11549f79decfd45f19a57d93fdcd1","typeString":"literal_string \"<rect x=\"80\" y=\"720\" width=\"840\" height=\"36\" rx=\"18\" fill=\"#ffffff20\"/>\""},"value":"<rect x=\"80\" y=\"720\" width=\"840\" height=\"36\" rx=\"18\" fill=\"#ffffff20\"/>"},{"hexValue":"3c7265637420783d2238302220793d22373230222077696474683d22","id":10728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11841:30:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c6efe767b1cecc9566522ed7a62c4289b64d1af271f53a8e2cc5a591c742195","typeString":"literal_string \"<rect x=\"80\" y=\"720\" width=\"\""},"value":"<rect x=\"80\" y=\"720\" width=\""},{"id":10729,"name":"meterW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"11873:6:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22206865696768743d223336222072783d223138222066696c6c3d2275726c28237368696d6d657229222f3e","id":10730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11881:46:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_6114501471224d03b0ab704c71c3473de5a2a0da5c31686d60028436210c4a1b","typeString":"literal_string \"\" height=\"36\" rx=\"18\" fill=\"url(#shimmer)\"/>\""},"value":"\" height=\"36\" rx=\"18\" fill=\"url(#shimmer)\"/>"},{"hexValue":"3c7265637420783d2238302220793d22383230222072783d223134222077696474683d2238343022206865696768743d223536222066696c6c3d22236666666666663130222f3e","id":10731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11974:73:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_adbff4e41b6ba56ca69ecf1acdbcdbefadf645d1902bf7c049dc967bea086bae","typeString":"literal_string \"<rect x=\"80\" y=\"820\" rx=\"14\" width=\"840\" height=\"56\" fill=\"#ffffff10\"/>\""},"value":"<rect x=\"80\" y=\"820\" rx=\"14\" width=\"840\" height=\"56\" fill=\"#ffffff10\"/>"},{"hexValue":"3c7465787420783d223130302220793d223836302220636c6173733d22742220666f6e742d73697a653d22323822206f7061636974793d22302e39223e","id":10732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12066:63:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_eda945d711922b32ca7364c157c869d8d7ad162d88c4bae279625776ccdbfb55","typeString":"literal_string \"<text x=\"100\" y=\"860\" class=\"t\" font-size=\"28\" opacity=\"0.9\">\""},"value":"<text x=\"100\" y=\"860\" class=\"t\" font-size=\"28\" opacity=\"0.9\">"},{"id":10733,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9860,"src":"12131:10:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"202d20","id":10734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12143:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e7b109ea8329776b4d3d2e2c2bf39b3f7e02ce64c66994d3a0db4ff2e229f54","typeString":"literal_string \" - \""},"value":" - "},{"id":10735,"name":"fruit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10527,"src":"12150:5:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f746578743e","id":10736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12157:9:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""},"value":"</text>"},{"hexValue":"3c2f7376673e","id":10737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12187:8:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed942a74eccce931b7661b37252dffca8561e3a8bdec86f6da31d97d858c9292","typeString":"literal_string \"</svg>\""},"value":"</svg>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_53ad136763d38165d04c93d89d4fb7878a7097cb20ccc7d3241e887c95a45bd0","typeString":"literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1000\" height=\"1000\">\""},{"typeIdentifier":"t_stringliteral_c9d6f35adafbd6db05cf66701a579ef4e1499ac0364b80726ad93d0f9855ba3a","typeString":"literal_string \"<defs>\""},{"typeIdentifier":"t_stringliteral_b1dad36cbf4bea32ba09c93741ab380fc8fefe9e1c6a91373bde7d4a4338e3ef","typeString":"literal_string \"<style>@font-face{font-family:Inter;src:local(Inter);} .t{font-family:Inter,system-ui,sans-serif;fill:#fff}</style>\""},{"typeIdentifier":"t_stringliteral_fb5cea042cdb61319f5b080b42102bdd76df69297ecf3d021399eb37b3007381","typeString":"literal_string \"<radialGradient id=\"g\">\""},{"typeIdentifier":"t_stringliteral_28815b2871f28e2728d57f9056ecbfaf80b207d380aae0691e249747e6be2a78","typeString":"literal_string \"<stop offset=\"0%\" stop-color=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a354751b1feb4dba3b0df883dcf656c6f3694fca2907054b9e9302314db8da6b","typeString":"literal_string \"\" stop-opacity=\"0.95\">\""},{"typeIdentifier":"t_stringliteral_d68ca17a601a5f1fdaa126f2aeee2e31800ce432a7e4ba7f79ad712d266b4689","typeString":"literal_string \"<animate attributeName=\"offset\" values=\"0%;20%;0%\" dur=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_236e5ec8ca942fbf0cadeb4246fd309dfc33d6949bd8dbe749ee486f85837702","typeString":"literal_string \"s\" repeatCount=\"indefinite\"/>\""},{"typeIdentifier":"t_stringliteral_6124818ac7d60b3b1c934a30446b8f00f46724be06ba8319dd313c4179dc0d18","typeString":"literal_string \"</stop>\""},{"typeIdentifier":"t_stringliteral_d90a125ebb6190b9da4d9487c1525d98c28dd7bef5545cc506eb50adcd548598","typeString":"literal_string \"<stop offset=\"100%\" stop-color=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_312a29827037710cd31baddbefdc411da52b76584d0c50e955a8312d1e8737da","typeString":"literal_string \"\" stop-opacity=\"0.12\"/>\""},{"typeIdentifier":"t_stringliteral_f20fe31ec849eacc551677761d5f4b17b99f608b6d28b26da2b1b008f2b2b3c2","typeString":"literal_string \"</radialGradient>\""},{"typeIdentifier":"t_stringliteral_fbeeff0d1b5e57fe75c7e47f0e5a0ba9602b14e5f782591ab0b8e53ed8dd5ef1","typeString":"literal_string \"<linearGradient id=\"shimmer\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\""},{"typeIdentifier":"t_stringliteral_3a232615ffb3e5bbca1577485f8f866aa14f39ecdbd48013e9ba694f1aa9889a","typeString":"literal_string \"<stop offset=\"0%\" stop-color=\"#ffffff20\"/>\""},{"typeIdentifier":"t_stringliteral_b1cae7e4a61d1492af87cccefe7a3919d6dfbdac4c48a60c7266a8c9d85419b3","typeString":"literal_string \"<stop offset=\"50%\" stop-color=\"#ffffff60\">\""},{"typeIdentifier":"t_stringliteral_b5d5fcf7a041d3e18b7e6bfad4b8a166f0006c0b40c2f2137410625dc81fa65b","typeString":"literal_string \"<animate attributeName=\"offset\" values=\"0%;100%\" dur=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_236e5ec8ca942fbf0cadeb4246fd309dfc33d6949bd8dbe749ee486f85837702","typeString":"literal_string \"s\" repeatCount=\"indefinite\"/>\""},{"typeIdentifier":"t_stringliteral_6124818ac7d60b3b1c934a30446b8f00f46724be06ba8319dd313c4179dc0d18","typeString":"literal_string \"</stop>\""},{"typeIdentifier":"t_stringliteral_c0a68fac02d8ca83fb2d0e7577638f9504edc31792ae728bc7756bcafe028884","typeString":"literal_string \"<stop offset=\"100%\" stop-color=\"#ffffff20\"/>\""},{"typeIdentifier":"t_stringliteral_653201dcb91cb57ac7a643c526a178580318c83b3a526adb18a6193794cca242","typeString":"literal_string \"</linearGradient>\""},{"typeIdentifier":"t_stringliteral_bed599d0025e0618137b41a2a30b05693d5ffd7547da6408dc30d1faba1b52ab","typeString":"literal_string \"</defs>\""},{"typeIdentifier":"t_stringliteral_0171e13967bcc629eb121a99fa7f825a1c99581261fee766975f876ee03d26d5","typeString":"literal_string \"<rect width=\"100%\" height=\"100%\" rx=\"48\" fill=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_b26240e716d0906f15dfc172fadbe2347b20c889873f9bdb04fd7ee803f7f175","typeString":"literal_string \"\"/>\""},{"typeIdentifier":"t_stringliteral_50c5f1ee0971af27109ce826e26d41d0a74845dd7ad08abe116d1667eb5d66a7","typeString":"literal_string \"<g transform=\"translate(500,520)\">\""},{"typeIdentifier":"t_stringliteral_1849a7c2a9bb29033194806b2a6e1912c3c048e34f248e846cf29b6a1ae24683","typeString":"literal_string \"<g>\""},{"typeIdentifier":"t_stringliteral_7248da85b26735049c296b1a952eb7c03d5718ce048607a01b8bba95efbf338e","typeString":"literal_string \"<circle r=\"360\" fill=\"url(#g)\">\""},{"typeIdentifier":"t_stringliteral_573a16c59f8001a23c47f87dac2771a03424ed17fff02e2a2a07f2d922d350ad","typeString":"literal_string \"<animateTransform attributeName=\"transform\" type=\"scale\" values=\"1;1.05;1\" dur=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_236e5ec8ca942fbf0cadeb4246fd309dfc33d6949bd8dbe749ee486f85837702","typeString":"literal_string \"s\" repeatCount=\"indefinite\"/>\""},{"typeIdentifier":"t_stringliteral_1739c7447433067521cb826c40cb859c6509460d5a1ac7d1319a29065d8ea358","typeString":"literal_string \"</circle>\""},{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},{"typeIdentifier":"t_stringliteral_8435fbe25d8e10dc1b7fa802b6ce492013481bf38ccb57fac98cd4034d9fca4a","typeString":"literal_string \"<path d=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_64efa2136c42d0d0d1e59790167d0666cae24e15bfe8524bc72b1acdefcc1970","typeString":"literal_string \"\" transform=\"translate(-500,-520)\" fill=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_37c5afb06c3ea191c9ac95da24bf36211c99e2ef73de36f4f99c9d03b76a7ce7","typeString":"literal_string \"\" opacity=\"0.18\"/>\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},{"typeIdentifier":"t_stringliteral_ba0e614bd56c35a33ad520bba33e0fec436a2edaee4c98213ef20363fab6f637","typeString":"literal_string \"<text x=\"80\" y=\"200\" class=\"t\" font-size=\"64\" opacity=\"0.9\">\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_9e7b109ea8329776b4d3d2e2c2bf39b3f7e02ce64c66994d3a0db4ff2e229f54","typeString":"literal_string \" - \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""},{"typeIdentifier":"t_stringliteral_544ae899725d9b2b41b8640d2c267ac39d208b10475e6b45ea6063ca10b74ffe","typeString":"literal_string \"<text x=\"80\" y=\"280\" class=\"t\" font-size=\"36\" opacity=\"0.6\">#\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""},{"typeIdentifier":"t_stringliteral_c709648c2b4c311456414575b09cb0f222b5ce3207286519d632e900ef3870fd","typeString":"literal_string \"<text x=\"80\" y=\"700\" class=\"t\" font-size=\"28\" opacity=\"0.85\">Deliciousness \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_2c75b57bbd31959cdcb9ef2b4796ac3413fef8d7913a4a3ae9e7bd8acd3a0bee","typeString":"literal_string \"/100</text>\""},{"typeIdentifier":"t_stringliteral_39af6056632d6b1388032a96e05b1d4447b11549f79decfd45f19a57d93fdcd1","typeString":"literal_string \"<rect x=\"80\" y=\"720\" width=\"840\" height=\"36\" rx=\"18\" fill=\"#ffffff20\"/>\""},{"typeIdentifier":"t_stringliteral_6c6efe767b1cecc9566522ed7a62c4289b64d1af271f53a8e2cc5a591c742195","typeString":"literal_string \"<rect x=\"80\" y=\"720\" width=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6114501471224d03b0ab704c71c3473de5a2a0da5c31686d60028436210c4a1b","typeString":"literal_string \"\" height=\"36\" rx=\"18\" fill=\"url(#shimmer)\"/>\""},{"typeIdentifier":"t_stringliteral_adbff4e41b6ba56ca69ecf1acdbcdbefadf645d1902bf7c049dc967bea086bae","typeString":"literal_string \"<rect x=\"80\" y=\"820\" rx=\"14\" width=\"840\" height=\"56\" fill=\"#ffffff10\"/>\""},{"typeIdentifier":"t_stringliteral_eda945d711922b32ca7364c157c869d8d7ad162d88c4bae279625776ccdbfb55","typeString":"literal_string \"<text x=\"100\" y=\"860\" class=\"t\" font-size=\"28\" opacity=\"0.9\">\""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_9e7b109ea8329776b4d3d2e2c2bf39b3f7e02ce64c66994d3a0db4ff2e229f54","typeString":"literal_string \" - \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""},{"typeIdentifier":"t_stringliteral_ed942a74eccce931b7661b37252dffca8561e3a8bdec86f6da31d97d858c9292","typeString":"literal_string \"</svg>\""}],"expression":{"id":10641,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8554:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8558:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"8554:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8554:3656:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8533:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":10639,"name":"string","nodeType":"ElementaryTypeName","src":"8533:6:31","typeDescriptions":{}}},"id":10739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8533:3688:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":10541,"id":10740,"nodeType":"Return","src":"8526:3695:31"}]},"id":10742,"implemented":true,"kind":"function","modifiers":[],"name":"_svg","nameLocation":"7549:4:31","nodeType":"FunctionDefinition","parameters":{"id":10538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10527,"mutability":"mutable","name":"fruit","nameLocation":"7578:5:31","nodeType":"VariableDeclaration","scope":10742,"src":"7564:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10526,"name":"string","nodeType":"ElementaryTypeName","src":"7564:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10529,"mutability":"mutable","name":"tier","nameLocation":"7608:4:31","nodeType":"VariableDeclaration","scope":10742,"src":"7594:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10528,"name":"string","nodeType":"ElementaryTypeName","src":"7594:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10531,"mutability":"mutable","name":"d","nameLocation":"7629:1:31","nodeType":"VariableDeclaration","scope":10742,"src":"7623:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10530,"name":"uint8","nodeType":"ElementaryTypeName","src":"7623:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":10533,"mutability":"mutable","name":"bg","nameLocation":"7655:2:31","nodeType":"VariableDeclaration","scope":10742,"src":"7641:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10532,"name":"string","nodeType":"ElementaryTypeName","src":"7641:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10535,"mutability":"mutable","name":"fg","nameLocation":"7682:2:31","nodeType":"VariableDeclaration","scope":10742,"src":"7668:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10534,"name":"string","nodeType":"ElementaryTypeName","src":"7668:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10537,"mutability":"mutable","name":"tokenId","nameLocation":"7703:7:31","nodeType":"VariableDeclaration","scope":10742,"src":"7695:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10536,"name":"uint256","nodeType":"ElementaryTypeName","src":"7695:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7553:164:31"},"returnParameters":{"id":10541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10742,"src":"7741:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10539,"name":"string","nodeType":"ElementaryTypeName","src":"7741:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7740:15:31"},"scope":10810,"src":"7540:4689:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10765,"nodeType":"Block","src":"12303:85:31","statements":[{"assignments":[10750],"declarations":[{"constant":false,"id":10750,"mutability":"mutable","name":"w","nameLocation":"12322:1:31","nodeType":"VariableDeclaration","scope":10765,"src":"12314:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10749,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10760,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10753,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10744,"src":"12335:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12327:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10751,"name":"uint256","nodeType":"ElementaryTypeName","src":"12327:7:31","typeDescriptions":{}}},"id":10754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12327:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"383430","id":10755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12340:3:31","typeDescriptions":{"typeIdentifier":"t_rational_840_by_1","typeString":"int_const 840"},"value":"840"},"src":"12327:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12326:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":10758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12347:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"12326:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12314:36:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10761,"name":"w","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10750,"src":"12368:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12370:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"12368:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":10763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":10748,"id":10764,"nodeType":"Return","src":"12361:19:31"}]},"id":10766,"implemented":true,"kind":"function","modifiers":[],"name":"_barWidth","nameLocation":"12246:9:31","nodeType":"FunctionDefinition","parameters":{"id":10745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10744,"mutability":"mutable","name":"d","nameLocation":"12262:1:31","nodeType":"VariableDeclaration","scope":10766,"src":"12256:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10743,"name":"uint8","nodeType":"ElementaryTypeName","src":"12256:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12255:9:31"},"returnParameters":{"id":10748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10766,"src":"12288:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10746,"name":"string","nodeType":"ElementaryTypeName","src":"12288:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12287:15:31"},"scope":10810,"src":"12237:151:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1657,2859],"body":{"id":10781,"nodeType":"Block","src":"12525:54:31","statements":[{"expression":{"arguments":[{"id":10778,"name":"iid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10768,"src":"12567:3:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":10776,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12543:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_StaticFruitDeliciousAnimated_$10810_$","typeString":"type(contract super StaticFruitDeliciousAnimated)"}},"id":10777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12549:17:31","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2859,"src":"12543:23:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":10779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12543:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10775,"id":10780,"nodeType":"Return","src":"12536:35:31"}]},"functionSelector":"01ffc9a7","id":10782,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"12442:17:31","nodeType":"FunctionDefinition","overrides":{"id":10772,"nodeType":"OverrideSpecifier","overrides":[{"id":10770,"name":"ERC721","nameLocations":["12493:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"12493:6:31"},{"id":10771,"name":"ERC2981","nameLocations":["12501:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":3049,"src":"12501:7:31"}],"src":"12484:25:31"},"parameters":{"id":10769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10768,"mutability":"mutable","name":"iid","nameLocation":"12467:3:31","nodeType":"VariableDeclaration","scope":10782,"src":"12460:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10767,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12460:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12459:12:31"},"returnParameters":{"id":10775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10782,"src":"12519:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10773,"name":"bool","nodeType":"ElementaryTypeName","src":"12519:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12518:6:31"},"scope":10810,"src":"12433:146:31","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10808,"nodeType":"Block","src":"12653:143:31","statements":[{"assignments":[10788],"declarations":[{"constant":false,"id":10788,"mutability":"mutable","name":"amount","nameLocation":"12672:6:31","nodeType":"VariableDeclaration","scope":10808,"src":"12664:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10787,"name":"uint256","nodeType":"ElementaryTypeName","src":"12664:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10794,"initialValue":{"expression":{"arguments":[{"id":10791,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12689:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_StaticFruitDeliciousAnimated_$10810","typeString":"contract StaticFruitDeliciousAnimated"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StaticFruitDeliciousAnimated_$10810","typeString":"contract StaticFruitDeliciousAnimated"}],"id":10790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12681:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10789,"name":"address","nodeType":"ElementaryTypeName","src":"12681:7:31","typeDescriptions":{}}},"id":10792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12681:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12695:7:31","memberName":"balance","nodeType":"MemberAccess","src":"12681:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12664:38:31"},{"eventCall":{"arguments":[{"id":10796,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"12729:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10797,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10788,"src":"12737:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10795,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9923,"src":"12718:10:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12718:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10799,"nodeType":"EmitStatement","src":"12713:31:31"},{"expression":{"arguments":[{"id":10805,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10788,"src":"12781:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10802,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"12763:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12755:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":10800,"name":"address","nodeType":"ElementaryTypeName","src":"12755:8:31","stateMutability":"payable","typeDescriptions":{}}},"id":10803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12755:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":10804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12771:9:31","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":3107,"src":"12755:25:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":10806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12755:33:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10807,"nodeType":"ExpressionStatement","src":"12755:33:31"}]},"functionSelector":"3ccfd60b","id":10809,"implemented":true,"kind":"function","modifiers":[{"id":10785,"kind":"modifierInvocation","modifierName":{"id":10784,"name":"onlyOwner","nameLocations":["12643:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"12643:9:31"},"nodeType":"ModifierInvocation","src":"12643:9:31"}],"name":"withdraw","nameLocation":"12623:8:31","nodeType":"FunctionDefinition","parameters":{"id":10783,"nodeType":"ParameterList","parameters":[],"src":"12631:2:31"},"returnParameters":{"id":10786,"nodeType":"ParameterList","parameters":[],"src":"12653:0:31"},"scope":10810,"src":"12614:182:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10811,"src":"871:11928:31","usedErrors":[13,18,215,220,229,234,239,246,251,256,2814,2819,2828,2835,4454,4457,4532],"usedEvents":[24,2529,2538,2547,9903,9907,9911,9917,9923]}],"src":"33:12766:31"},"id":31},"contracts/StaticSeeds.sol":{"ast":{"absolutePath":"contracts/StaticSeeds.sol","exportedSymbols":{"Address":[3309],"Arrays":[4287],"Context":[4444],"ERC1155":[1221],"ERC1155Utils":[1556],"ERC165":[6267],"Errors":[4466],"IERC1155":[1344],"IERC1155Errors":[304],"IERC1155MetadataURI":[1402],"IERC165":[6279],"Math":[7900],"Ownable":[147],"ReentrancyGuard":[4587],"SafeCast":[9665],"SignedMath":[9809],"StaticSeeds":[11164],"Strings":[6243]},"id":11165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10812,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:32"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":10813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11165,"sourceUnit":1222,"src":"61:59:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":10814,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11165,"sourceUnit":148,"src":"122:52:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":10815,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11165,"sourceUnit":4588,"src":"176:59:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":10816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11165,"sourceUnit":6244,"src":"237:51:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":10817,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11165,"sourceUnit":3310,"src":"290:51:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10819,"name":"ERC1155","nameLocations":["476:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"476:7:32"},"id":10820,"nodeType":"InheritanceSpecifier","src":"476:7:32"},{"baseName":{"id":10821,"name":"Ownable","nameLocations":["485:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"485:7:32"},"id":10822,"nodeType":"InheritanceSpecifier","src":"485:7:32"},{"baseName":{"id":10823,"name":"ReentrancyGuard","nameLocations":["494:15:32"],"nodeType":"IdentifierPath","referencedDeclaration":4587,"src":"494:15:32"},"id":10824,"nodeType":"InheritanceSpecifier","src":"494:15:32"}],"canonicalName":"StaticSeeds","contractDependencies":[],"contractKind":"contract","documentation":{"id":10818,"nodeType":"StructuredDocumentation","src":"345:105:32","text":" @title StaticSeeds\n @dev ERC1155 token for StaticFruit seeds with horoscope-based minting"},"fullyImplemented":true,"id":11164,"linearizedBaseContracts":[11164,4587,147,1221,304,1402,1344,6267,6279,4444],"name":"StaticSeeds","nameLocation":"461:11:32","nodeType":"ContractDefinition","nodes":[{"global":false,"id":10827,"libraryName":{"id":10825,"name":"Strings","nameLocations":["523:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":6243,"src":"523:7:32"},"nodeType":"UsingForDirective","src":"517:26:32","typeName":{"id":10826,"name":"uint256","nodeType":"ElementaryTypeName","src":"535:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":10830,"libraryName":{"id":10828,"name":"Address","nameLocations":["555:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":3309,"src":"555:7:32"},"nodeType":"UsingForDirective","src":"549:34:32","typeName":{"id":10829,"name":"address","nodeType":"ElementaryTypeName","src":"567:15:32","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}},{"constant":false,"functionSelector":"56f0866c","id":10834,"mutability":"mutable","name":"signToTokenId","nameLocation":"674:13:32","nodeType":"VariableDeclaration","scope":11164,"src":"640:47:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":10833,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10831,"name":"string","nodeType":"ElementaryTypeName","src":"648:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"640:26:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10832,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"f4a79b24","id":10838,"mutability":"mutable","name":"tokenIdToSign","nameLocation":"728:13:32","nodeType":"VariableDeclaration","scope":11164,"src":"694:47:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":10837,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10835,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"694:26:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10836,"name":"string","nodeType":"ElementaryTypeName","src":"713:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":true,"functionSelector":"2462a252","id":10841,"mutability":"constant","name":"MAX_SUPPLY_PER_SIGN","nameLocation":"804:19:32","nodeType":"VariableDeclaration","scope":11164,"src":"780:51:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10839,"name":"uint256","nodeType":"ElementaryTypeName","src":"780:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":10840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"826:5:32","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":true,"functionSelector":"c002d23d","id":10844,"mutability":"constant","name":"MINT_PRICE","nameLocation":"862:10:32","nodeType":"VariableDeclaration","scope":11164,"src":"838:47:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10842,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3031","id":10843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"875:10:32","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},"visibility":"public"},{"constant":false,"functionSelector":"bd85b039","id":10848,"mutability":"mutable","name":"totalSupply","nameLocation":"946:11:32","nodeType":"VariableDeclaration","scope":11164,"src":"911:46:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":10847,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10845,"name":"uint256","nodeType":"ElementaryTypeName","src":"919:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"911:27:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10846,"name":"uint256","nodeType":"ElementaryTypeName","src":"930:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"cd49618c","id":10854,"mutability":"mutable","name":"userMints","nameLocation":"1019:9:32","nodeType":"VariableDeclaration","scope":11164,"src":"964:64:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":10853,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10849,"name":"address","nodeType":"ElementaryTypeName","src":"972:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"964:47:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10852,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10850,"name":"uint256","nodeType":"ElementaryTypeName","src":"991:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"983:27:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"38f7c5c3827fcb56dabd1150e538e385707d18e91dd676ff68cf63cfa07d0af7","id":10864,"name":"SeedMinted","nameLocation":"1058:10:32","nodeType":"EventDefinition","parameters":{"id":10863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10856,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1085:4:32","nodeType":"VariableDeclaration","scope":10864,"src":"1069:20:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10855,"name":"address","nodeType":"ElementaryTypeName","src":"1069:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10858,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1107:7:32","nodeType":"VariableDeclaration","scope":10864,"src":"1091:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1091:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10860,"indexed":false,"mutability":"mutable","name":"sign","nameLocation":"1123:4:32","nodeType":"VariableDeclaration","scope":10864,"src":"1116:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10859,"name":"string","nodeType":"ElementaryTypeName","src":"1116:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10862,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1137:6:32","nodeType":"VariableDeclaration","scope":10864,"src":"1129:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1129:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1068:76:32"},"src":"1052:93:32"},{"anonymous":false,"eventSelector":"8eb20336e0911a379870111ec015103173254d8f89a70b406fe0d198f8729470","id":10872,"name":"HoroscopeClaimed","nameLocation":"1157:16:32","nodeType":"EventDefinition","parameters":{"id":10871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10866,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1190:4:32","nodeType":"VariableDeclaration","scope":10872,"src":"1174:20:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10865,"name":"address","nodeType":"ElementaryTypeName","src":"1174:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10868,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:32","nodeType":"VariableDeclaration","scope":10872,"src":"1196:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10870,"indexed":false,"mutability":"mutable","name":"theme","nameLocation":"1228:5:32","nodeType":"VariableDeclaration","scope":10872,"src":"1221:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10869,"name":"string","nodeType":"ElementaryTypeName","src":"1221:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1173:61:32"},"src":"1151:84:32"},{"anonymous":false,"eventSelector":"7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65","id":10878,"name":"Withdrawal","nameLocation":"1247:10:32","nodeType":"EventDefinition","parameters":{"id":10877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10874,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1274:2:32","nodeType":"VariableDeclaration","scope":10878,"src":"1258:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10873,"name":"address","nodeType":"ElementaryTypeName","src":"1258:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10876,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1286:6:32","nodeType":"VariableDeclaration","scope":10878,"src":"1278:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1278:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1257:36:32"},"src":"1241:53:32"},{"body":{"id":10892,"nodeType":"Block","src":"1439:79:32","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10889,"name":"_initializeZodiacSigns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10952,"src":"1486:22:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10891,"nodeType":"ExpressionStatement","src":"1486:24:32"}]},"id":10893,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"68747470733a2f2f73746174696366727569742e78797a2f6170692f6d657461646174612f7b69647d2e6a736f6e","id":10883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1353:48:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e0494b24097881f27584c943422ec3a8023b0c0c3048c1d211d9b9f29959afc","typeString":"literal_string \"https://staticfruit.xyz/api/metadata/{id}.json\""},"value":"https://staticfruit.xyz/api/metadata/{id}.json"}],"id":10884,"kind":"baseConstructorSpecifier","modifierName":{"id":10882,"name":"ERC1155","nameLocations":["1345:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"1345:7:32"},"nodeType":"ModifierInvocation","src":"1345:57:32"},{"arguments":[{"id":10886,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10880,"src":"1420:12:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10887,"kind":"baseConstructorSpecifier","modifierName":{"id":10885,"name":"Ownable","nameLocations":["1412:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1412:7:32"},"nodeType":"ModifierInvocation","src":"1412:21:32"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10880,"mutability":"mutable","name":"initialOwner","nameLocation":"1322:12:32","nodeType":"VariableDeclaration","scope":10893,"src":"1314:20:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10879,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:22:32"},"returnParameters":{"id":10888,"nodeType":"ParameterList","parameters":[],"src":"1439:0:32"},"scope":11164,"src":"1302:216:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10951,"nodeType":"Block","src":"1569:421:32","statements":[{"assignments":[10901],"declarations":[{"constant":false,"id":10901,"mutability":"mutable","name":"signs","nameLocation":"1598:5:32","nodeType":"VariableDeclaration","scope":10951,"src":"1580:23:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$12_memory_ptr","typeString":"string[12]"},"typeName":{"baseType":{"id":10899,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10900,"length":{"hexValue":"3132","id":10898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1587:2:32","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"nodeType":"ArrayTypeName","src":"1580:10:32","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$12_storage_ptr","typeString":"string[12]"}},"visibility":"internal"}],"id":10915,"initialValue":{"components":[{"hexValue":"6172696573","id":10902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1621:7:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_c11bc150908b73bc2c969a40278eb1ac162667468510f360d23deaabfc0a325b","typeString":"literal_string \"aries\""},"value":"aries"},{"hexValue":"746175727573","id":10903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1630:8:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_428ee2a4f64101261699c15117cf2df40624241ebfce7ee554b3e76d272aa6a3","typeString":"literal_string \"taurus\""},"value":"taurus"},{"hexValue":"67656d696e69","id":10904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1640:8:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_704db32081100dd74545f1a7597df9f7a92c207e699d6d04c58f7346952184e1","typeString":"literal_string \"gemini\""},"value":"gemini"},{"hexValue":"63616e636572","id":10905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1650:8:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_57ed3b90ecc136bf33f155be982abbc807f25debeaf86726e531d42e78c47632","typeString":"literal_string \"cancer\""},"value":"cancer"},{"hexValue":"6c656f","id":10906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1673:5:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_222fdc98473ee4284424807feba6bbd79f05076242db60189ebc0e28e3a1cce4","typeString":"literal_string \"leo\""},"value":"leo"},{"hexValue":"766972676f","id":10907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1680:7:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_e70ada1ef6f00a0763bf442213b595f2fb7328e93e90614eda93e9e3615e39ab","typeString":"literal_string \"virgo\""},"value":"virgo"},{"hexValue":"6c69627261","id":10908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1689:7:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a00ac44cc692bd1103a004da9e14a67034412afe105f9648985ca0a10d28a6b","typeString":"literal_string \"libra\""},"value":"libra"},{"hexValue":"73636f7270696f","id":10909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1698:9:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_a4f5e8673e248c04f1560d9ab526d3e64c1995eebc14150c5d9062c29ce2cf57","typeString":"literal_string \"scorpio\""},"value":"scorpio"},{"hexValue":"7361676974746172697573","id":10910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1722:13:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_0183ee85e5378f100297a90423409f59b22074322af8088328d43dc8b76d360d","typeString":"literal_string \"sagittarius\""},"value":"sagittarius"},{"hexValue":"6361707269636f726e","id":10911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1737:11:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_7cc45dd1f55c8928c89074dea6841a6abfa919d4e7750379ca3051945becb3d7","typeString":"literal_string \"capricorn\""},"value":"capricorn"},{"hexValue":"6171756172697573","id":10912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1750:10:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a11b1203af990409769f5534c346c81cbdee8c81cfb2dd1aea62d43a3f5f379","typeString":"literal_string \"aquarius\""},"value":"aquarius"},{"hexValue":"706973636573","id":10913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1762:8:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_1061540f5d07ccf547793916e75938b5639cf9504aac285b774483b96ad273e2","typeString":"literal_string \"pisces\""},"value":"pisces"}],"id":10914,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1606:175:32","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$12_memory_ptr","typeString":"string memory[12] memory"}},"nodeType":"VariableDeclarationStatement","src":"1580:201:32"},{"body":{"id":10949,"nodeType":"Block","src":"1837:146:32","statements":[{"assignments":[10928],"declarations":[{"constant":false,"id":10928,"mutability":"mutable","name":"tokenId","nameLocation":"1860:7:32","nodeType":"VariableDeclaration","scope":10949,"src":"1852:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10927,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10932,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10929,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10917,"src":"1870:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":10930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1870:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1852:23:32"},{"expression":{"id":10939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10933,"name":"signToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10834,"src":"1890:13:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":10937,"indexExpression":{"baseExpression":{"id":10934,"name":"signs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10901,"src":"1904:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$12_memory_ptr","typeString":"string memory[12] memory"}},"id":10936,"indexExpression":{"id":10935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10917,"src":"1910:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1904:8:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1890:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10938,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10928,"src":"1916:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1890:33:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10940,"nodeType":"ExpressionStatement","src":"1890:33:32"},{"expression":{"id":10947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10941,"name":"tokenIdToSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10838,"src":"1938:13:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":10943,"indexExpression":{"id":10942,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10928,"src":"1952:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1938:22:32","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":10944,"name":"signs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10901,"src":"1963:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$12_memory_ptr","typeString":"string memory[12] memory"}},"id":10946,"indexExpression":{"id":10945,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10917,"src":"1969:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1963:8:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1938:33:32","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":10948,"nodeType":"ExpressionStatement","src":"1938:33:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10917,"src":"1814:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10921,"name":"signs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10901,"src":"1818:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$12_memory_ptr","typeString":"string memory[12] memory"}},"id":10922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:6:32","memberName":"length","nodeType":"MemberAccess","src":"1818:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1814:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10950,"initializationExpression":{"assignments":[10917],"declarations":[{"constant":false,"id":10917,"mutability":"mutable","name":"i","nameLocation":"1807:1:32","nodeType":"VariableDeclaration","scope":10950,"src":"1799:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10919,"initialValue":{"hexValue":"30","id":10918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1811:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1799:13:32"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1832:3:32","subExpression":{"id":10924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10917,"src":"1832:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10926,"nodeType":"ExpressionStatement","src":"1832:3:32"},"nodeType":"ForStatement","src":"1794:189:32"}]},"id":10952,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeZodiacSigns","nameLocation":"1535:22:32","nodeType":"FunctionDefinition","parameters":{"id":10894,"nodeType":"ParameterList","parameters":[],"src":"1557:2:32"},"returnParameters":{"id":10895,"nodeType":"ParameterList","parameters":[],"src":"1569:0:32"},"scope":11164,"src":"1526:464:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":11041,"nodeType":"Block","src":"2246:582:32","statements":[{"assignments":[10963],"declarations":[{"constant":false,"id":10963,"mutability":"mutable","name":"tokenId","nameLocation":"2265:7:32","nodeType":"VariableDeclaration","scope":11041,"src":"2257:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10962,"name":"uint256","nodeType":"ElementaryTypeName","src":"2257:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10967,"initialValue":{"baseExpression":{"id":10964,"name":"signToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10834,"src":"2275:13:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":10966,"indexExpression":{"id":10965,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10955,"src":"2289:4:32","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2275:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2257:37:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10969,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"2313:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2324:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2313:12:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207a6f64696163207369676e","id":10972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2327:21:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c954b9e5774daaf20c72cc52acf8825957edb64018950f30a09dda740eed33c","typeString":"literal_string \"Invalid zodiac sign\""},"value":"Invalid zodiac sign"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c954b9e5774daaf20c72cc52acf8825957edb64018950f30a09dda740eed33c","typeString":"literal_string \"Invalid zodiac sign\""}],"id":10968,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2305:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2305:44:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10974,"nodeType":"ExpressionStatement","src":"2305:44:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10976,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2368:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2372:5:32","memberName":"value","nodeType":"MemberAccess","src":"2368:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10978,"name":"MINT_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10844,"src":"2381:10:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10979,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10957,"src":"2394:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2381:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2368:32:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":10982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2402:22:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":10975,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2360:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2360:65:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10984,"nodeType":"ExpressionStatement","src":"2360:65:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10986,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10848,"src":"2444:11:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10988,"indexExpression":{"id":10987,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"2456:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2444:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10989,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10957,"src":"2467:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2444:29:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10991,"name":"MAX_SUPPLY_PER_SIGN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10841,"src":"2477:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2444:52:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d617820737570706c79","id":10993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2498:20:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611","typeString":"literal_string \"Exceeds max supply\""},"value":"Exceeds max supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611","typeString":"literal_string \"Exceeds max supply\""}],"id":10985,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2436:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2436:83:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10995,"nodeType":"ExpressionStatement","src":"2436:83:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":10997,"name":"userMints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10854,"src":"2538:9:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":11000,"indexExpression":{"expression":{"id":10998,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2548:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2552:6:32","memberName":"sender","nodeType":"MemberAccess","src":"2548:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2538:21:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11002,"indexExpression":{"id":11001,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"2560:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2538:30:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":11003,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10957,"src":"2571:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2538:39:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130","id":11005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2581:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2538:45:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820313020706572207573657220706572207369676e","id":11007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2585:26:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_793851fd6305eec641e35da5e170c6a1c38e77613c75603ba148bb15bb107eda","typeString":"literal_string \"Max 10 per user per sign\""},"value":"Max 10 per user per sign"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_793851fd6305eec641e35da5e170c6a1c38e77613c75603ba148bb15bb107eda","typeString":"literal_string \"Max 10 per user per sign\""}],"id":10996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2530:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:82:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11009,"nodeType":"ExpressionStatement","src":"2530:82:32"},{"expression":{"id":11014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11010,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10848,"src":"2625:11:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11012,"indexExpression":{"id":11011,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"2637:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2625:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11013,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10957,"src":"2649:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2625:30:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11015,"nodeType":"ExpressionStatement","src":"2625:30:32"},{"expression":{"id":11023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":11016,"name":"userMints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10854,"src":"2666:9:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":11020,"indexExpression":{"expression":{"id":11017,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2676:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2680:6:32","memberName":"sender","nodeType":"MemberAccess","src":"2676:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2666:21:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11021,"indexExpression":{"id":11019,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"2688:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2666:30:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11022,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10957,"src":"2700:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2666:40:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11024,"nodeType":"ExpressionStatement","src":"2666:40:32"},{"expression":{"arguments":[{"expression":{"id":11026,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2725:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2729:6:32","memberName":"sender","nodeType":"MemberAccess","src":"2725:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11028,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"2737:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11029,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10957,"src":"2746:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":11030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2754:2:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":11025,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2719:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":11031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2719:38:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11032,"nodeType":"ExpressionStatement","src":"2719:38:32"},{"eventCall":{"arguments":[{"expression":{"id":11034,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2786:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2790:6:32","memberName":"sender","nodeType":"MemberAccess","src":"2786:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11036,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"2798:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11037,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10955,"src":"2807:4:32","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":11038,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10957,"src":"2813:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11033,"name":"SeedMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10864,"src":"2775:10:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,uint256)"}},"id":11039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:45:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11040,"nodeType":"EmitStatement","src":"2770:50:32"}]},"documentation":{"id":10953,"nodeType":"StructuredDocumentation","src":"1998:124:32","text":" @dev Mint seeds based on horoscope\n @param sign Zodiac sign\n @param amount Amount to mint"},"functionSelector":"93fb6e87","id":11042,"implemented":true,"kind":"function","modifiers":[{"id":10960,"kind":"modifierInvocation","modifierName":{"id":10959,"name":"nonReentrant","nameLocations":["2228:12:32"],"nodeType":"IdentifierPath","referencedDeclaration":4551,"src":"2228:12:32"},"nodeType":"ModifierInvocation","src":"2228:12:32"}],"name":"mintSeed","nameLocation":"2137:8:32","nodeType":"FunctionDefinition","parameters":{"id":10958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10955,"mutability":"mutable","name":"sign","nameLocation":"2162:4:32","nodeType":"VariableDeclaration","scope":11042,"src":"2146:20:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10954,"name":"string","nodeType":"ElementaryTypeName","src":"2146:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10957,"mutability":"mutable","name":"amount","nameLocation":"2176:6:32","nodeType":"VariableDeclaration","scope":11042,"src":"2168:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2145:38:32"},"returnParameters":{"id":10961,"nodeType":"ParameterList","parameters":[],"src":"2246:0:32"},"scope":11164,"src":"2128:700:32","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":11077,"nodeType":"Block","src":"3100:187:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":11054,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3129:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3133:6:32","memberName":"sender","nodeType":"MemberAccess","src":"3129:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11056,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11045,"src":"3141:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11053,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3119:9:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":11057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3119:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3152:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3119:34:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20736565647320746f20636c61696d","id":11060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3155:19:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_782b180a80b1eeb153298c499fb103dab2f5351ec04498cded65ea5fd465ea8a","typeString":"literal_string \"No seeds to claim\""},"value":"No seeds to claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_782b180a80b1eeb153298c499fb103dab2f5351ec04498cded65ea5fd465ea8a","typeString":"literal_string \"No seeds to claim\""}],"id":11052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3111:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3111:64:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11062,"nodeType":"ExpressionStatement","src":"3111:64:32"},{"expression":{"arguments":[{"expression":{"id":11064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3194:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3198:6:32","memberName":"sender","nodeType":"MemberAccess","src":"3194:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11066,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11045,"src":"3206:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":11067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3215:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":11063,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3188:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":11068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3188:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11069,"nodeType":"ExpressionStatement","src":"3188:29:32"},{"eventCall":{"arguments":[{"expression":{"id":11071,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3252:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:6:32","memberName":"sender","nodeType":"MemberAccess","src":"3252:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11073,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11045,"src":"3264:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11074,"name":"theme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11047,"src":"3273:5:32","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":11070,"name":"HoroscopeClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10872,"src":"3235:16:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":11075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3235:44:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11076,"nodeType":"EmitStatement","src":"3230:49:32"}]},"documentation":{"id":11043,"nodeType":"StructuredDocumentation","src":"2836:149:32","text":" @dev Claim horoscope reading (burns seed)\n @param tokenId Token ID to burn\n @param theme Generated horoscope theme"},"functionSelector":"49d7f074","id":11078,"implemented":true,"kind":"function","modifiers":[{"id":11050,"kind":"modifierInvocation","modifierName":{"id":11049,"name":"nonReentrant","nameLocations":["3082:12:32"],"nodeType":"IdentifierPath","referencedDeclaration":4551,"src":"3082:12:32"},"nodeType":"ModifierInvocation","src":"3082:12:32"}],"name":"claimHoroscope","nameLocation":"3000:14:32","nodeType":"FunctionDefinition","parameters":{"id":11048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11045,"mutability":"mutable","name":"tokenId","nameLocation":"3023:7:32","nodeType":"VariableDeclaration","scope":11078,"src":"3015:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11044,"name":"uint256","nodeType":"ElementaryTypeName","src":"3015:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11047,"mutability":"mutable","name":"theme","nameLocation":"3048:5:32","nodeType":"VariableDeclaration","scope":11078,"src":"3032:21:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11046,"name":"string","nodeType":"ElementaryTypeName","src":"3032:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3014:40:32"},"returnParameters":{"id":11051,"nodeType":"ParameterList","parameters":[],"src":"3100:0:32"},"scope":11164,"src":"2991:296:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[407],"body":{"id":11106,"nodeType":"Block","src":"3487:139:32","statements":[{"assignments":[11088],"declarations":[{"constant":false,"id":11088,"mutability":"mutable","name":"baseURI","nameLocation":"3512:7:32","nodeType":"VariableDeclaration","scope":11106,"src":"3498:21:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11087,"name":"string","nodeType":"ElementaryTypeName","src":"3498:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":11093,"initialValue":{"arguments":[{"id":11091,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11081,"src":"3532:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11089,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3522:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_StaticSeeds_$11164_$","typeString":"type(contract super StaticSeeds)"}},"id":11090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3528:3:32","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":407,"src":"3522:9:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":11092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3498:42:32"},{"expression":{"arguments":[{"arguments":[{"id":11098,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11088,"src":"3582:7:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":11101,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11081,"src":"3608:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11099,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"3591:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$6243_$","typeString":"type(library Strings)"}},"id":11100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3599:8:32","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4955,"src":"3591:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":11102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":11096,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3565:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":11097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3569:12:32","memberName":"encodePacked","nodeType":"MemberAccess","src":"3565:16:32","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":11103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:52:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":11095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3558:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":11094,"name":"string","nodeType":"ElementaryTypeName","src":"3558:6:32","typeDescriptions":{}}},"id":11104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3558:60:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":11086,"id":11105,"nodeType":"Return","src":"3551:67:32"}]},"documentation":{"id":11079,"nodeType":"StructuredDocumentation","src":"3295:111:32","text":" @dev Get token URI for metadata\n @param tokenId Token ID\n @return URI string"},"functionSelector":"0e89341c","id":11107,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"3421:3:32","nodeType":"FunctionDefinition","overrides":{"id":11083,"nodeType":"OverrideSpecifier","overrides":[],"src":"3454:8:32"},"parameters":{"id":11082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11081,"mutability":"mutable","name":"tokenId","nameLocation":"3433:7:32","nodeType":"VariableDeclaration","scope":11107,"src":"3425:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11080,"name":"uint256","nodeType":"ElementaryTypeName","src":"3425:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3424:17:32"},"returnParameters":{"id":11086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11107,"src":"3472:13:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11084,"name":"string","nodeType":"ElementaryTypeName","src":"3472:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3471:15:32"},"scope":11164,"src":"3412:214:32","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":11136,"nodeType":"Block","src":"3728:145:32","statements":[{"assignments":[11114],"declarations":[{"constant":false,"id":11114,"mutability":"mutable","name":"amount","nameLocation":"3747:6:32","nodeType":"VariableDeclaration","scope":11136,"src":"3739:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11113,"name":"uint256","nodeType":"ElementaryTypeName","src":"3739:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11120,"initialValue":{"expression":{"arguments":[{"id":11117,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3764:4:32","typeDescriptions":{"typeIdentifier":"t_contract$_StaticSeeds_$11164","typeString":"contract StaticSeeds"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StaticSeeds_$11164","typeString":"contract StaticSeeds"}],"id":11116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3756:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11115,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:32","typeDescriptions":{}}},"id":11118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3756:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3770:7:32","memberName":"balance","nodeType":"MemberAccess","src":"3756:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3739:38:32"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":11122,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3804:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3804:7:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11124,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11114,"src":"3813:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11121,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10878,"src":"3793:10:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:27:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11126,"nodeType":"EmitStatement","src":"3788:32:32"},{"expression":{"arguments":[{"id":11133,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11114,"src":"3858:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":11129,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3839:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:7:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3831:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":11127,"name":"address","nodeType":"ElementaryTypeName","src":"3831:8:32","stateMutability":"payable","typeDescriptions":{}}},"id":11131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3831:16:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":11132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3848:9:32","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":3107,"src":"3831:26:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":11134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3831:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11135,"nodeType":"ExpressionStatement","src":"3831:34:32"}]},"documentation":{"id":11108,"nodeType":"StructuredDocumentation","src":"3634:49:32","text":" @dev Withdraw contract funds"},"functionSelector":"3ccfd60b","id":11137,"implemented":true,"kind":"function","modifiers":[{"id":11111,"kind":"modifierInvocation","modifierName":{"id":11110,"name":"onlyOwner","nameLocations":["3718:9:32"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3718:9:32"},"nodeType":"ModifierInvocation","src":"3718:9:32"}],"name":"withdraw","nameLocation":"3698:8:32","nodeType":"FunctionDefinition","parameters":{"id":11109,"nodeType":"ParameterList","parameters":[],"src":"3706:2:32"},"returnParameters":{"id":11112,"nodeType":"ParameterList","parameters":[],"src":"3728:0:32"},"scope":11164,"src":"3689:184:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11149,"nodeType":"Block","src":"4080:48:32","statements":[{"expression":{"baseExpression":{"id":11145,"name":"tokenIdToSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10838,"src":"4098:13:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":11147,"indexExpression":{"id":11146,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11140,"src":"4112:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4098:22:32","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":11144,"id":11148,"nodeType":"Return","src":"4091:29:32"}]},"documentation":{"id":11138,"nodeType":"StructuredDocumentation","src":"3881:121:32","text":" @dev Get zodiac sign for token ID\n @param tokenId Token ID\n @return Zodiac sign string"},"functionSelector":"ec8451da","id":11150,"implemented":true,"kind":"function","modifiers":[],"name":"getSign","nameLocation":"4017:7:32","nodeType":"FunctionDefinition","parameters":{"id":11141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11140,"mutability":"mutable","name":"tokenId","nameLocation":"4033:7:32","nodeType":"VariableDeclaration","scope":11150,"src":"4025:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11139,"name":"uint256","nodeType":"ElementaryTypeName","src":"4025:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4024:17:32"},"returnParameters":{"id":11144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11150,"src":"4065:13:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11142,"name":"string","nodeType":"ElementaryTypeName","src":"4065:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4064:15:32"},"scope":11164,"src":"4008:120:32","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11162,"nodeType":"Block","src":"4327:45:32","statements":[{"expression":{"baseExpression":{"id":11158,"name":"signToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10834,"src":"4345:13:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":11160,"indexExpression":{"id":11159,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11153,"src":"4359:4:32","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4345:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":11157,"id":11161,"nodeType":"Return","src":"4338:26:32"}]},"documentation":{"id":11151,"nodeType":"StructuredDocumentation","src":"4136:111:32","text":" @dev Get token ID for zodiac sign\n @param sign Zodiac sign\n @return Token ID"},"functionSelector":"1e7663bc","id":11163,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenId","nameLocation":"4262:10:32","nodeType":"FunctionDefinition","parameters":{"id":11154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11153,"mutability":"mutable","name":"sign","nameLocation":"4289:4:32","nodeType":"VariableDeclaration","scope":11163,"src":"4273:20:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11152,"name":"string","nodeType":"ElementaryTypeName","src":"4273:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4272:22:32"},"returnParameters":{"id":11157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11163,"src":"4318:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11155,"name":"uint256","nodeType":"ElementaryTypeName","src":"4318:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4317:9:32"},"scope":11164,"src":"4253:119:32","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":11165,"src":"452:3923:32","usedErrors":[13,18,269,274,279,286,291,296,303,4454,4457,4532],"usedEvents":[24,1241,1256,1265,1272,10864,10872,10878]}],"src":"33:4342:32"},"id":32}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"IERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d145627d37afb6313151c237d1c7f2c9f3da4da6a7175c6524e31baa0a6c303e64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 GASLIMIT PUSH3 0x7D37AF 0xB6 BALANCE BALANCE MLOAD 0xC2 CALLDATACOPY 0xD1 0xC7 CALLCODE 0xC9 RETURN 0xDA 0x4D 0xA6 0xA7 OR TLOAD PUSH6 0x24E31BAA0A6C ADDRESS RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"439:3114:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d145627d37afb6313151c237d1c7f2c9f3da4da6a7175c6524e31baa0a6c303e64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 GASLIMIT PUSH3 0x7D37AF 0xB6 BALANCE BALANCE MLOAD 0xC2 CALLDATACOPY 0xD1 0xC7 CALLCODE 0xC9 RETURN 0xDA 0x4D 0xA6 0xA7 OR TLOAD PUSH6 0x24E31BAA0A6C ADDRESS RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"439:3114:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ERC721Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xdee1ff07172e443c6600581fc4f11e7830a6d33e4e551752935b835d52a09404\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c503b5573ecd8d18157903b6760e02e8f86b47238c997d6dd04b99df74ef532d\",\"dweb:/ipfs/QmSGcRgfe18dtR4t3erYBSq3W6tPGXHPZ3JKkD1yFJsNsm\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220cb1daa04a9b692c898fc5c60c521cd83d05fdb26c7806859389dea5b82af3faf64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SAR 0xAA DIV 0xA9 0xB6 SWAP3 0xC8 SWAP9 0xFC TLOAD PUSH1 0xC5 0x21 0xCD DUP4 0xD0 PUSH0 0xDB 0x26 0xC7 DUP1 PUSH9 0x59389DEA5B82AF3FAF PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"431:1490:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220cb1daa04a9b692c898fc5c60c521cd83d05fdb26c7806859389dea5b82af3faf64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SAR 0xAA DIV 0xA9 0xB6 SWAP3 0xC8 SWAP9 0xFC TLOAD PUSH1 0xC5 0x21 0xCD DUP4 0xD0 PUSH0 0xDB 0x26 0xC7 DUP1 PUSH9 0x59389DEA5B82AF3FAF PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"431:1490:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}]},\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0xa33062c6e0675a74a27b06a4ae4c6ad4d3b7219e27d9c146a4ac57295096d393\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://777543d88013fdd0ee7f47ac619fb13a1993bb667675d8816fde024f73cfbf2d\",\"dweb:/ipfs/QmfDS9uL1XZ2oUe1PH8eRCRyu3Hf98cK8ksGf4Ww7kg5zv\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122019fd7d7599c47bb2dcd3324065e044b08ad7c2c6939dfdde9cf2453538492e8864736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT REVERT PUSH30 0x7599C47BB2DCD3324065E044B08AD7C2C6939DFDDE9CF2453538492E8864 PUSH20 0x6F6C634300081800330000000000000000000000 ","sourceMap":"233:5762:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122019fd7d7599c47bb2dcd3324065e044b08ad7c2c6939dfdde9cf2453538492e8864736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT REVERT PUSH30 0x7599C47BB2DCD3324065E044B08AD7C2C6939DFDDE9CF2453538492E8864 PUSH20 0x6F6C634300081800330000000000000000000000 ","sourceMap":"233:5762:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a429721413474da6c69a008163bf3da2aa27dc5ec07796ce1ccd564ea942d2d964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0x29 PUSH19 0x1413474DA6C69A008163BF3DA2AA27DC5EC077 SWAP7 0xCE SHR 0xCD JUMP 0x4E 0xA9 TIMESTAMP 0xD2 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"459:20446:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a429721413474da6c69a008163bf3da2aa27dc5ec07796ce1ccd564ea942d2d964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0x29 PUSH19 0x1413474DA6C69A008163BF3DA2AA27DC5EC077 SWAP7 0xCE SHR 0xCD JUMP 0x4E 0xA9 TIMESTAMP 0xD2 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"459:20446:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Base64.sol":{"Base64":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b7e2037279364308b138807b4d88ae541a5f5792e76b92cc7c586b74ccbfa99364736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xE2 SUB PUSH19 0x79364308B138807B4D88AE541A5F5792E76B92 0xCC PUSH29 0x586B74CCBFA99364736F6C634300081800330000000000000000000000 ","sourceMap":"202:4980:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b7e2037279364308b138807b4d88ae541a5f5792e76b92cc7c586b74ccbfa99364736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xE2 SUB PUSH19 0x79364308B138807B4D88AE541A5F5792E76B92 0xCC PUSH29 0x586B74CCBFA99364736F6C634300081800330000000000000000000000 ","sourceMap":"202:4980:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xed82055e8e44241f0f55892198960452018fa743e419ba469a2583c43103965a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07187a5099b0d5ddc124f9e6e287063795096c3f46a61563e3b6f6def88958b2\",\"dweb:/ipfs/QmSkxuUbThjVLpQmP4TW1LibWEVpXShsn3mSsXuWZVetL4\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220908a928e3a58325064939cb538dae26915d6afc4674a8b912b42328cfa2ace8464736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 DUP11 SWAP3 DUP15 GASPRICE PC ORIGIN POP PUSH5 0x939CB538DA 0xE2 PUSH10 0x15D6AFC4674A8B912B42 ORIGIN DUP13 STATICCALL 0x2A 0xCE DUP5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"224:218:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220908a928e3a58325064939cb538dae26915d6afc4674a8b912b42328cfa2ace8464736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 DUP11 SWAP3 DUP15 GASPRICE PC ORIGIN POP PUSH5 0x939CB538DA 0xE2 PUSH10 0x15D6AFC4674A8B912B42 ORIGIN DUP13 STATICCALL 0x2A 0xCE DUP5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"224:218:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220164686c36ea5e66dd11cef5e49c9bc4a9e804cfba625743235c0220bbe68c37564736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND CHAINID DUP7 0xC3 PUSH15 0xA5E66DD11CEF5E49C9BC4A9E804CFB 0xA6 0x25 PUSH21 0x3235C0220BBE68C37564736F6C6343000818003300 ","sourceMap":"411:484:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220164686c36ea5e66dd11cef5e49c9bc4a9e804cfba625743235c0220bbe68c37564736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND CHAINID DUP7 0xC3 PUSH15 0xA5E66DD11CEF5E49C9BC4A9E804CFB 0xA6 0x25 PUSH21 0x3235C0220BBE68C37564736F6C6343000818003300 ","sourceMap":"411:484:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122053deb2bc0bddb42856b8e990147b9a2ff5e9844e5d11caf20a78565242a4060464736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xDE 0xB2 0xBC SIGNEXTEND 0xDD 0xB4 0x28 JUMP 0xB8 0xE9 SWAP1 EQ PUSH28 0x9A2FF5E9844E5D11CAF20A78565242A4060464736F6C634300081800 CALLER ","sourceMap":"657:1315:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122053deb2bc0bddb42856b8e990147b9a2ff5e9844e5d11caf20a78565242a4060464736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xDE 0xB2 0xBC SIGNEXTEND 0xDD 0xB4 0x28 JUMP 0xB8 0xE9 SWAP1 EQ PUSH28 0x9A2FF5E9844E5D11CAF20A78565242A4060464736F6C634300081800 CALLER ","sourceMap":"657:1315:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122098bbedd7bd509ff26a2abc523a82e0c13f38c02357506765352d457c03a3c89c64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xBB 0xED 0xD7 0xBD POP SWAP16 CALLCODE PUSH11 0x2ABC523A82E0C13F38C023 JUMPI POP PUSH8 0x65352D457C03A3C8 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1599:3723:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122098bbedd7bd509ff26a2abc523a82e0c13f38c02357506765352d457c03a3c89c64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xBB 0xED 0xD7 0xBD POP SWAP16 CALLCODE PUSH11 0x2ABC523A82E0C13F38C023 JUMPI POP PUSH8 0x65352D457C03A3C8 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1599:3723:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212204cb8e1465036bf0bfe7d5d3ac4ca477b4b2691c2df758b835a1fd9da4389c82164736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xB8 0xE1 CHAINID POP CALLDATASIZE 0xBF SIGNEXTEND INVALID PUSH30 0x5D3AC4CA477B4B2691C2DF758B835A1FD9DA4389C82164736F6C63430008 XOR STOP CALLER ","sourceMap":"1407:2774:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212204cb8e1465036bf0bfe7d5d3ac4ca477b4b2691c2df758b835a1fd9da4389c82164736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xB8 0xE1 CHAINID POP CALLDATASIZE 0xBF SIGNEXTEND INVALID PUSH30 0x5D3AC4CA477B4B2691C2DF758B835A1FD9DA4389C82164736F6C63430008 XOR STOP CALLER ","sourceMap":"1407:2774:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212204c1668066ce49140d7f04e5ae44e45bc63dfaf39d11069a65f1332269217c7a664736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C AND PUSH9 0x66CE49140D7F04E5A 0xE4 0x4E GASLIMIT 0xBC PUSH4 0xDFAF39D1 LT PUSH10 0xA65F1332269217C7A664 PUSH20 0x6F6C634300081800330000000000000000000000 ","sourceMap":"297:18982:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212204c1668066ce49140d7f04e5ae44e45bc63dfaf39d11069a65f1332269217c7a664736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C AND PUSH9 0x66CE49140D7F04E5A 0xE4 0x4E GASLIMIT 0xBC PUSH4 0xDFAF39D1 LT PUSH10 0xA65F1332269217C7A664 PUSH20 0x6F6C634300081800330000000000000000000000 ","sourceMap":"297:18982:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220998992e57b18161556f749ed6b715edd480f98fc5eb61920f580802ab0185eb564736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 DUP10 SWAP3 0xE5 PUSH28 0x18161556F749ED6B715EDD480F98FC5EB61920F580802AB0185EB564 PUSH20 0x6F6C634300081800330000000000000000000000 ","sourceMap":"281:31863:28:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220998992e57b18161556f749ed6b715edd480f98fc5eb61920f580802ab0185eb564736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 DUP10 SWAP3 0xE5 PUSH28 0x18161556F749ED6B715EDD480F98FC5EB61920F580802AB0185EB564 PUSH20 0x6F6C634300081800330000000000000000000000 ","sourceMap":"281:31863:28:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c03a4b3abddbd3e81f1ef18341d1482243775708dfb66881a5b5dedf8daf10e64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SUB LOG4 0xB3 0xAB 0xDD 0xBD RETURNDATACOPY DUP2 CALL 0xEF XOR CALLVALUE SAR EQ DUP3 0x24 CALLDATACOPY PUSH22 0x708DFB66881A5B5DEDF8DAF10E64736F6C6343000818 STOP CALLER ","sourceMap":"769:34173:29:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c03a4b3abddbd3e81f1ef18341d1482243775708dfb66881a5b5dedf8daf10e64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SUB LOG4 0xB3 0xAB 0xDD 0xBD RETURNDATACOPY DUP2 CALL 0xEF XOR CALLVALUE SAR EQ DUP3 0x24 CALLDATACOPY PUSH22 0x708DFB66881A5B5DEDF8DAF10E64736F6C6343000818 STOP CALLER ","sourceMap":"769:34173:29:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220831296d2761d00d9aa991205862d952bd7a4a180a5982baefad22d5c8dc799d664736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 SLT SWAP7 0xD2 PUSH23 0x1D00D9AA991205862D952BD7A4A180A5982BAEFAD22D5C DUP14 0xC7 SWAP10 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"258:2354:30:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220831296d2761d00d9aa991205862d952bd7a4a180a5982baefad22d5c8dc799d664736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 SLT SWAP7 0xD2 PUSH23 0x1D00D9AA991205862D952BD7A4A180A5982BAEFAD22D5C DUP14 0xC7 SWAP10 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"258:2354:30:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/StaticFruitDeliciousAnimated.sol":{"StaticFruitDeliciousAnimated":{"abi":[{"inputs":[{"internalType":"uint96","name":"royaltyBps","type":"uint96"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"address","name":"_payout","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newBrand","type":"string"},{"indexed":false,"internalType":"string","name":"newCollection","type":"string"}],"name":"BrandingUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"MintPriceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"open","type":"bool"}],"name":"MintToggled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newPayout","type":"address"}],"name":"PayoutAddressUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"brand","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"collection","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"deliciousnessOf","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"qty","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"mintOpen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"payout","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_brand","type":"string"},{"internalType":"string","name":"_collection","type":"string"}],"name":"setBranding","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"p","type":"uint256"}],"name":"setMintPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"p","type":"address"}],"name":"setPayout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"iid","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"open","type":"bool"}],"name":"toggleMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":1166,"id":null,"parameterSlots":0,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":1259,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1198,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60a03462000489576200453080380390601f1992601f848185011682019360018060401b03938386108587111762000473578160809285926040988952833981010312620004895781516001600160601b0381168082036200048957602080850151936060888701519601519660018060a01b03998a89168099036200048957620000896200048e565b928484527f53746174696346727569742044656c6963696f75732028416e696d617465642985850152620000bc6200048e565b916005908184526408ca4aaa8b60db1b878501528551858111620004735780600097620000ea8954620004ae565b8a87821162000444575b50508990868311600114620003e0578992620003d4575b50508160011b916000199060031b1c19161786555b835190858211620003c05781906001956200013c8754620004ae565b8a87821162000386575b50508991868411600114620003255750889262000319575b5050600019600383901b1c191690841b1783555b8a1562000301578a809c9d60085460018060a01b03199d8e821617600855167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a382600955620001c6600d54620004ae565b828111620002e1575b507f5374617469634672756974000000000000000000000000000000000000000016600d55600e546200020290620004ae565b90828211620002bf575b50505060126844656c6963696f757360b81b01600e5560ff19600f541617600f55612710808511620002a25750895191828b01918211838310176200028e57509087949392918a52888152015260a01b168417600655608052600b55600c541617600c555161402b90816200050582396080518181816102de01526122ff0152f35b634e487b7160e01b81526041600452602490fd5b846044918c5191636f483d0960e01b835260048301526024820152fd5b620002d892600e87528787209201901c810190620004eb565b3880806200020c565b600d8652868620620002fa918401831c810190620004eb565b38620001cf565b8b51631e4fbdf760e01b815260048101869052602490fd5b0151905038806200015e565b878a528a8a20889590939291168a5b8c8282106200036f575050841162000355575b505050811b01835562000172565b015160001960f88460031b161c1916905538808062000347565b8385015186558a9790950194938401930162000334565b620003ae91898c5288828d20918188018a1c8301938810620003b6575b01881c0190620004eb565b388a62000146565b92508192620003a3565b634e487b7160e01b87526041600452602487fd5b0151905038806200010b565b8980528a8a209285168a5b8c8282106200042d57505090846001959493921062000413575b505050811b01865562000120565b015160001960f88460031b161c1916905538808062000405565b6001859682939686015181550195019301620003eb565b6200046b918b805288828d20918187018a1c8301938710620003b65701881c0190620004eb565b388a620000f4565b634e487b7160e01b600052604160045260246000fd5b600080fd5b60408051919082016001600160401b038111838210176200047357604052565b90600182811c92168015620004e0575b6020831014620004ca57565b634e487b7160e01b600052602260045260246000fd5b91607f1691620004be565b818110620004f7575050565b60008155600101620004eb56fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714612faf5750806306fdde0314612f04578063081812fc14612ec5578063095ea7b314612dc457806323b872dd14612dad57806324bbd04914612d8a5780632a55205a14612d015780632d9fff0114612c535780633ccfd60b14612bfa57806342842e0e14612bcc57806342966c6814612a6857806361b8ce8c14612a4a5780636352211e14612a1b57806363bd1d4a146129f45780636817c76c146129d657806370a0823114612965578063715018a61461290a5780637de1e5361461285c5780638a4dcd85146127fa5780638da5cb5b146127d357806395d89b41146126f0578063a0712d68146122b8578063a22cb465146121fb578063a3ff39b214612193578063b88d4fde146120fc578063c1d2b11d14611dac578063c60d7e4614611d83578063c87b56dd14610301578063d5abeb01146102c6578063e985e9c51461026f578063f2fde38b146101d05763f4a0a5281461017f57600080fd5b346101cb5760203660031901126101cb577f525b762709cc2a983aec5ccdfd807a061f993c91090b5bcd7da92ca254976aaa60206004356101be61362b565b80600b55604051908152a1005b600080fd5b346101cb5760203660031901126101cb576101e96130e1565b6101f161362b565b6001600160a01b0380911690811561023e57600854826001600160a01b0319821617600855167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b346101cb5760403660031901126101cb576102886130e1565b6102906130f7565b906001600160a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b346101cb5760003660031901126101cb5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346101cb5760203660031901126101cb5760043560005260026020526103366001600160a01b03604060002054161515613450565b6040516103428161317c565b60405161034e816131b5565b600581527f4d616e676f00000000000000000000000000000000000000000000000000000060208201528152604051610386816131b5565b600581527f4265727279000000000000000000000000000000000000000000000000000000602082015260208201526040516103c1816131b5565b600b81527f447261676f6e6672756974000000000000000000000000000000000000000000602082015260408201526040516103fc816131b5565b600581527f477261706500000000000000000000000000000000000000000000000000000060208201526060820152604051610437816131b5565b600581527f506561636800000000000000000000000000000000000000000000000000000060208201526080820152604051610472816131b5565b600481527f4c696d6500000000000000000000000000000000000000000000000000000000602082015260a08201526040516104ad816131b5565b600481527f506c756d00000000000000000000000000000000000000000000000000000000602082015260c08201526040516104e8816131b5565b600581527f4775617661000000000000000000000000000000000000000000000000000000602082015260e08201526007906105348261052960043561385e565b60201c16809261388a565b5161054060043561349b565b906040519361054e8561317c565b60405161055a816131b5565b8181527f233064313131370000000000000000000000000000000000000000000000000060208201528552604051610591816131b5565b8181527f2331323132313200000000000000000000000000000000000000000000000000602082015260208601526040516105cb816131b5565b8181527f233062306631340000000000000000000000000000000000000000000000000060208201526040860152604051610605816131b5565b8181527f23316131303230000000000000000000000000000000000000000000000000006020820152606086015260405161063f816131b5565b8181527f233066313332300000000000000000000000000000000000000000000000000060208201526080860152604051610679816131b5565b8181527f2331303133313400000000000000000000000000000000000000000000000000602082015260a08601526040516106b3816131b5565b8181527f2330653131313700000000000000000000000000000000000000000000000000602082015260c08601526040516106ed816131b5565b8181527f2331343130313600000000000000000000000000000000000000000000000000602082015260e08601526108fe846040519661072c8861317c565b604051610738816131b5565b8481527f23464637453442000000000000000000000000000000000000000000000000006020820152885260405161076f816131b5565b8481527f2341313642464600000000000000000000000000000000000000000000000000602082015260208901526040516107a9816131b5565b8481527f2346463346413400000000000000000000000000000000000000000000000000602082015260408901526040516107e3816131b5565b8481527f23384235434636000000000000000000000000000000000000000000000000006020820152606089015260405161081d816131b5565b8481527f234646423836420000000000000000000000000000000000000000000000000060208201526080890152604051610857816131b5565b8481527f2337434635433900000000000000000000000000000000000000000000000000602082015260a0890152604051610891816131b5565b8481527f2339423539423600000000000000000000000000000000000000000000000000602082015260c08901526040516108cb816131b5565b8481527f2337464442464600000000000000000000000000000000000000000000000000602082015260e089015261388a565b5193604260ff85161115611d41576001019460ff8611611d115760ff61092a92600197165b169061388a565b5190610935836138b1565b91610941600435613a29565b94610b096045604051976109d360028a61095d602082016134e5565b9361098d8e7f20000000000000000000000000000000000000000000000000000000000000009687815201613574565b7f202300000000000000000000000000000000000000000000000000000000000081526109c38251809360208785019101613099565b0103601d1981018c52018a613209565b6109df60ff8916613a29565b610a236040519b8c937f41200000000000000000000000000000000000000000000000000000000000006020860152610a1a602286016134e5565b90815201613574565b7f2070696563652e20466c61766f723a200000000000000000000000000000000081528751610a59816010840160208c01613099565b7f2e20546965723a2000000000000000000000000000000000000000000000000060108284010152895191610a98838c60206018868601019101613099565b01017f2e2044656c6963696f75736e6573733a200000000000000000000000000000006018820152610ad4825180936020602985019101613099565b017f2f3130302e20416e696d61746564206f6e2d636861696e205356472e00000000602982015203602581018a520188613209565b601460ff86160460080360088111611d115760038110611d39575b600c60ff871604600e0392600e8411611d115760068410611d30575b600f60ff881604600c0391600c8311611d115760058310611d27575b61034860ff8916808202819004821490151715611d11576064610b849160ff8b160204613a29565b610b8d88613bd9565b885160208a0120967fffc66c8548bc388f0156d76251a192b57d2601764d8478982e579b825596b8bc8814978815611ce7575b50610bdc610bd6610bd086613a29565b97613a29565b94613a29565b9715611cd157610dda60de610cc49260405190610bf8826131d1565b60338252610c5260208301917f4d302c2d3230204c362c2d36204c32302c30204c362c36204c302c3230204c2d83527f362c36204c2d32302c30204c2d362c2d36205a000000000000000000000000006040850152613a29565b906040519586937f3c67207472616e73666f726d3d227472616e736c61746528302c2d323030292260208601527f3e000000000000000000000000000000000000000000000000000000000000006040860152681e3830ba3410321e9160b91b6041860152518092604a860190613099565b82017f222066696c6c3d22236666666666666430223e00000000000000000000000000604a8201527f3c616e696d6174655472616e73666f726d206174747269627574654e616d653d605d8201527f227472616e73666f726d2220747970653d22726f74617465222066726f6d3d22607d8201527f30203020302220746f3d223336302030203022206475723d2200000000000000609d820152610d7282518093602060b685019101613099565b017f732220726570656174436f756e743d22696e646566696e697465222f3e00000060b68201527f3c2f706174683e0000000000000000000000000000000000000000000000000060d3820152631e17b39f60e11b60da8201520360be810184520182613209565b610de5600435613a29565b9585610df360ff8e16613a29565b956040519a8b9a8b94602086017f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f32309052604086017f30302f737667222077696474683d223130303022206865696768743d223130309052606086017f30223e00000000000000000000000000000000000000000000000000000000009052606386017f3c646566733e00000000000000000000000000000000000000000000000000009052606986017f3c7374796c653e40666f6e742d666163657b666f6e742d66616d696c793a496e9052608986017f7465723b7372633a6c6f63616c28496e746572293b7d202e747b666f6e742d66905260a986017f616d696c793a496e7465722c73797374656d2d75692c73616e732d7365726966905260c986017f3b66696c6c3a236666667d3c2f7374796c653e00000000000000000000000000905260dc86017f3c72616469616c4772616469656e742069643d2267223e000000000000000000905260f386017f3c73746f70206f66667365743d223025222073746f702d636f6c6f723d220000905261011190855160208701978184820190610f9c918b613099565b019182017f222073746f702d6f7061636974793d22302e3935223e0000000000000000000090527f3c616e696d617465206174747269627574654e616d653d226f66667365742220908161012784015261014783017f76616c7565733d2230253b3230253b302522206475723d220000000000000000905261015f9281519182858301916020019161102d92613099565b01917f732220726570656174436f756e743d22696e646566696e697465222f3e000000958680928501527f3c2f73746f703e00000000000000000000000000000000000000000000000000928361017c8601527f3c73746f70206f66667365743d2231303025222073746f702d636f6c6f723d2294856101838201526101a39951908b828c83016110bd92613099565b7f222073746f702d6f7061636974793d22302e3132222f3e0000000000000000009101998a01527f3c2f72616469616c4772616469656e743e0000000000000000000000000000006101ba8a01527f3c6c696e6561724772616469656e742069643d227368696d6d6572222078313d6101cb8a01527f223025222079313d223025222078323d2231303025222079323d223025223e006101eb8a01527f3c73746f70206f66667365743d223025222073746f702d636f6c6f723d22236661020a8a01527f66666666663230222f3e0000000000000000000000000000000000000000000061022a8a01527f3c73746f70206f66667365743d22353025222073746f702d636f6c6f723d22236102348a01527f6666666666663630223e000000000000000000000000000000000000000000006102548a015261025e8901527f76616c7565733d2230253b3130302522206475723d220000000000000000000061027e890152805161029498909161123c9083908b840190602001613099565b01968701526102b18601526102b88501527f236666666666663230222f3e00000000000000000000000000000000000000006102d88501527f3c2f6c696e6561724772616469656e743e0000000000000000000000000000006102e48501527f3c2f646566733e000000000000000000000000000000000000000000000000006102f58501527f3c726563742077696474683d223130302522206865696768743d2231303025226102fc8501527f2072783d223438222066696c6c3d22000000000000000000000000000000000061031c850152805161032b94909161132a90839087840190602001613099565b7f222f3e00000000000000000000000000000000000000000000000000000000009101938401527f3c67207472616e73666f726d3d227472616e736c617465283530302c3532302961032e8401527f223e00000000000000000000000000000000000000000000000000000000000061034e8401527f3c673e00000000000000000000000000000000000000000000000000000000006103508401527f3c636972636c6520723d22333630222066696c6c3d2275726c28236729223e006103538401527f3c616e696d6174655472616e73666f726d206174747269627574654e616d653d6103728401527f227472616e73666f726d2220747970653d227363616c65222076616c7565733d6103928401527f22313b312e30353b3122206475723d22000000000000000000000000000000006103b284015280516103c293909161147c90839086840190602001613099565b01918201526103df81017f3c2f636972636c653e00000000000000000000000000000000000000000000009052631e17b39f60e11b93846103e88301526103ec8201681e3830ba3410321e9160b91b90526103f5918151918284830191602001916114e692613099565b019081017f22207472616e73666f726d3d227472616e736c617465282d3530302c2d353230905261041581017f29222066696c6c3d220000000000000000000000000000000000000000000000905261041e9651918288830161154892613099565b019485017f22206f7061636974793d22302e3138222f3e000000000000000000000000000090526104309481519182878301916020019161158892613099565b01938401527f3c7465787420783d2238302220793d223230302220636c6173733d22742220666104348401527f6f6e742d73697a653d22363422206f7061636974793d22302e39223e000000006104548401528651610470936115f18286830160208c01613099565b01917f202d2000000000000000000000000000000000000000000000000000000000008094840152610473928951908481018260208d019161163292613099565b01927f3c2f746578743e000000000000000000000000000000000000000000000000009586809286015261047a85017f3c7465787420783d2238302220793d223238302220636c6173733d2274222066905261049a85017f6f6e742d73697a653d22333622206f7061636974793d22302e36223e2300000090526104b7948151918287830191602001916116c592613099565b01938401527f3c7465787420783d2238302220793d223730302220636c6173733d22742220666104be8401527f6f6e742d73697a653d22323822206f7061636974793d22302e3835223e44656c6104de8401527f6963696f75736e657373200000000000000000000000000000000000000000006104fe840152805161050993909161175990839086840190602001613099565b7f2f3130303c2f746578743e0000000000000000000000000000000000000000009101928301527f3c7265637420783d2238302220793d22373230222077696474683d22383430226105148301527f206865696768743d223336222072783d223138222066696c6c3d2223666666666105348301527f66663230222f3e000000000000000000000000000000000000000000000000006105548301527f3c7265637420783d2238302220793d22373230222077696474683d220000000061055b830152805161057792909161183690839085840190602001613099565b7f22206865696768743d223336222072783d223138222066696c6c3d2275726c289101918201527f237368696d6d657229222f3e00000000000000000000000000000000000000006105978201527f3c7265637420783d2238302220793d22383230222072783d22313422207769646105a38201527f74683d2238343022206865696768743d223536222066696c6c3d2223666666666105c38201527f66663130222f3e000000000000000000000000000000000000000000000000006105e38201527f3c7465787420783d223130302220793d223836302220636c6173733d227422206105ea8201527f666f6e742d73697a653d22323822206f7061636974793d22302e39223e00000061060a8201526119549061062701613574565b90815284519061196b826003830160208901613099565b01906003820152600a81017f3c2f7376673e0000000000000000000000000000000000000000000000000000905203600f19810182526010016119ae9082613209565b6119b6613b7a565b6119bf91613eda565b9260ff166119cc90613a29565b92604051958695602087017f7b226e616d65223a220000000000000000000000000000000000000000000000905280519081602989019160200191611a1092613099565b8601602981017f222c226465736372697074696f6e223a22000000000000000000000000000000905281519182603a83019160200191611a4f92613099565b01603a81017f222c22696d616765223a22646174613a696d6167652f7376672b786d6c3b62619052605a81017f736536342c000000000000000000000000000000000000000000000000000000905281519182605f83019160200191611ab492613099565b01605f81017f222c2261747472696275746573223a5b000000000000000000000000000000009052606f81017f7b2274726169745f74797065223a22466c61766f72222c2276616c7565223a22905281519182608f83019160200191611b1992613099565b01907f227d2c00000000000000000000000000000000000000000000000000000000009182608f820152609281017f7b2274726169745f74797065223a2254696572222c2276616c7565223a22000090528151918260b083019160200191611b8092613099565b019060b082015260b381017f7b2274726169745f74797065223a2244656c6963696f75736e657373222c2276905260d381017f616c7565223a000000000000000000000000000000000000000000000000000090528151918260d983019160200191611beb92613099565b0160d981017f7d00000000000000000000000000000000000000000000000000000000000000905260da81017f5d7d00000000000000000000000000000000000000000000000000000000000090520360bc8101825260dc01611c4e9082613209565b611c56613b7a565b611c5f91613eda565b6040518091602082017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000905280519081603d84019160200191611ca192613099565b810103601d81018252603d01611cb79082613209565b60405180916020825260208201611ccd916130bc565b0390f35b50604051611cde81613199565b60008152610dda565b7f181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a3101497508d610bc0565b634e487b7160e01b600052601160045260246000fd5b60059250610b5c565b60069350610b40565b506003610b24565b602160ff85161115611d68576002019460ff8611611d115760ff61092a9260019716610923565b6003019460ff8611611d115760ff61092a9260019716610923565b346101cb5760203660031901126101cb576020611da160043561349b565b60ff60405191168152f35b346101cb5760403660031901126101cb5767ffffffffffffffff6004358181116101cb57611dde903690600401613247565b6024358381116101cb57611df6903690600401613247565b611dfe61362b565b848311611ff357611e10600d54613142565b94601f9586811161209a575b5083600087821160011461201457600091612009575b508460011b906000198660031b1c191617600d555b8111611ff357611e58600e54613142565b858111611f91575b506000948111600114611ee7579081611ed7927f2c7ea2c532cc0dad6d6baad5a149d62033f0f3fa2e619de5a0296268f78611c396600091611edc575b508160011b906000198360031b1c191617600e555b611ec960405195869560408752604087019161342f565b91848303602086015261342f565b0390a1005b905082013587611e9d565b601f19811694600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd9560005b818110611f795750958291611ed794937f2c7ea2c532cc0dad6d6baad5a149d62033f0f3fa2e619de5a0296268f78611c39810611f5f575b5050600181811b01600e55611eb2565b830135600019600384901b60f8161c191690558680611f4f565b84830135885560019097019660209283019201611f17565b600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd8680840160051c82019260208510611fea575b0160051c01905b818110611fde5750611e60565b60008155600101611fd1565b92508192611fca565b634e487b7160e01b600052604160045260246000fd5b905085013587611e32565b9050601f19851690600d600052857fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb59260005b81811061207f575010612065575b5050600184811b01600d55611e47565b860135600019600387901b60f8161c191690558680612055565b89840135855560019094019360209384019389935001612047565b600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb58780870160051c820192602088106120f3575b0160051c01905b8181106120e75750611e1c565b600081556001016120da565b925081926120d3565b346101cb5760803660031901126101cb576121156130e1565b61211d6130f7565b906044356064359267ffffffffffffffff84116101cb57366023850112156101cb5783600401359261214e8461322b565b9361215c6040519586613209565b80855236602482880101116101cb5760208160009260246121919901838901378601015261218b838383613275565b3361373a565b005b346101cb5760203660031901126101cb577ffcbb1571f6f637b3645e200ff18fbcb7fc2f8db33547e2f582146a51246e104360206001600160a01b036121d76130e1565b6121df61362b565b16806001600160a01b0319600c541617600c55604051908152a1005b346101cb5760403660031901126101cb576122146130e1565b602435908115158092036101cb576001600160a01b031690811561228757336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b602482604051907f5b08ba180000000000000000000000000000000000000000000000000000000082526004820152fd5b60203660031901126101cb576002600954146126c657600260095560ff600f54161561268257600435151580612675575b1561263157600a546004358101809111611d11577f0000000000000000000000000000000000000000000000000000000000000000106125ed57612331600435600b5461341c565b34106125a95760005b600435811061236b5747612350575b6001600955005b6123666001600160a01b03600c5416479061369f565b612349565b600a546040519061237b82613199565b600082523315612591578060005260026020526001600160a01b0360406000205416818115159182612555575b3361253b575b8160005260026020526040600020336001600160a01b031982541617905533907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a461250a57333b612411575b505060019081600a5401600a550161233a565b61244d916020916040519384928392630a85bd0160e11b84523360048501526000602485015260448401526080606484015260848301906130bc565b03816000335af1600091816124c5575b5061248e5761246a61366f565b80519081612489576024604051633250574960e11b8152336004820152fd5b602001fd5b6001600160e01b0319630a85bd0160e11b9116036124ae576001826123fe565b6024604051633250574960e11b8152336004820152fd5b9091506020813d602011612502575b816124e160209383613209565b810103126101cb57516001600160e01b0319811681036101cb57908361245d565b3d91506124d4565b60246040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b3360005260036020526040600020600181540190556123ae565b61257682600052600460205260406000206001600160a01b03198154169055565b806000526003602052604060002060001981540190556123a8565b6024604051633250574960e11b815260006004820152fd5b606460405162461bcd60e51b815260206004820152601060248201527f696e73756666696369656e7420455448000000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600860248201527f736f6c64206f75740000000000000000000000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600860248201527f71747920312e2e350000000000000000000000000000000000000000000000006044820152fd5b50600560043511156122e9565b606460405162461bcd60e51b815260206004820152600b60248201527f4d696e7420636c6f7365640000000000000000000000000000000000000000006044820152fd5b60046040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b346101cb5760003660031901126101cb5760405160006001826001549261271684613142565b92838352602094856001821691826000146127b3575050600114612756575b5061274292500383613209565b611ccd6040519282849384528301906130bc565b84915060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6906000915b85831061279b575050612742935082010185612735565b80548389018501528794508693909201918101612784565b60ff19168582015261274295151560051b85010192508791506127359050565b346101cb5760003660031901126101cb5760206001600160a01b0360085416604051908152f35b346101cb5760203660031901126101cb576004358015158091036101cb5760207f8ba9af8fef251a59a57bb383a518ff12b3c2770c23cf0ab9a59a9e2390e08f439161284461362b565b60ff19600f541660ff821617600f55604051908152a1005b346101cb5760003660031901126101cb57604051600e5460008261287f83613142565b91828252602093600190856001821691826000146127b35750506001146128ad575061274292500383613209565b849150600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd906000915b8583106128f2575050612742935082010185612735565b805483890185015287945086939092019181016128db565b346101cb5760003660031901126101cb5761292361362b565b60006001600160a01b036008546001600160a01b03198116600855167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101cb5760203660031901126101cb576001600160a01b036129866130e1565b1680156129a55760005260036020526020604060002054604051908152f35b60246040517f89c62b6400000000000000000000000000000000000000000000000000000000815260006004820152fd5b346101cb5760003660031901126101cb576020600b54604051908152f35b346101cb5760003660031901126101cb5760206001600160a01b03600c5416604051908152f35b346101cb5760203660031901126101cb576020612a396004356135f0565b6001600160a01b0360405191168152f35b346101cb5760003660031901126101cb576020600a54604051908152f35b346101cb576020806003193601126101cb576004359081600052600281526001600160a01b03908160406000205416913315159081612b24575b505090600260009282612aec575b84845252604082206001600160a01b031981541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4005b612b0d85600052600460205260406000206001600160a01b03198154169055565b828452600381526040842084198154019055612ab0565b81612b74575b5015612b37578380612aa2565b50612b545760249060405190637e27328960e01b82526004820152fd5b60405163177e802f60e01b81523360048201526024810191909152604490fd5b33841491508115612ba8575b8115612b8e575b5084612b2a565b905083600052600482523390604060002054161484612b87565b90508260005260058252604060002033600052825260ff6040600020541690612b80565b346101cb57612191612bdd3661310d565b9060405192612beb84613199565b6000845261218b838383613275565b346101cb5760003660031901126101cb57612c1361362b565b612191476001600160a01b03600c5416807f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b656020604051858152a261369f565b346101cb5760003660031901126101cb57604051600d54600082612c7683613142565b91828252602093600190856001821691826000146127b3575050600114612ca4575061274292500383613209565b849150600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5906000915b858310612ce9575050612742935082010185612735565b80548389018501528794508693909201918101612cd2565b346101cb5760403660031901126101cb5760043560005260076020526040600020546001600160a01b038082169160a01c908215612d75575b50612d586bffffffffffffffffffffffff612710921660243561341c565b604080516001600160a01b03949094168452919004602083015290f35b600654908116925060a01c9050612d58612d3a565b346101cb5760003660031901126101cb57602060ff600f54166040519015158152f35b346101cb57612191612dbe3661310d565b91613275565b346101cb5760403660031901126101cb57612ddd6130e1565b602435612de9816135f0565b33151580612eb2575b80612e84575b612e545781906001600160a01b03809416938491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a460005260046020526040600020906001600160a01b0319825416179055600080f35b60246040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152336004820152fd5b506001600160a01b038116600052600560205260406000203360005260205260ff6040600020541615612df8565b50336001600160a01b0382161415612df2565b346101cb5760203660031901126101cb57600435612ee2816135f0565b50600052600460205260206001600160a01b0360406000205416604051908152f35b346101cb5760003660031901126101cb57604051600080549082612f2783613142565b91828252602093600190856001821691826000146127b3575050600114612f55575061274292500383613209565b6000808052859250907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b858310612f97575050612742935082010185612735565b80548389018501528794508693909201918101612f80565b346101cb5760203660031901126101cb57600435906001600160e01b031982168092036101cb57817f2a55205a000000000000000000000000000000000000000000000000000000006020931490811561300b575b5015158152f35b7f80ac58cd0000000000000000000000000000000000000000000000000000000081149150811561306f575b8115613045575b5083613004565b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150148361303e565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150613037565b60005b8381106130ac5750506000910152565b818101518382015260200161309c565b906020916130d581518092818552858086019101613099565b601f01601f1916010190565b600435906001600160a01b03821682036101cb57565b602435906001600160a01b03821682036101cb57565b60609060031901126101cb576001600160a01b039060043582811681036101cb579160243590811681036101cb579060443590565b90600182811c92168015613172575b602083101461315c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691613151565b610100810190811067ffffffffffffffff821117611ff357604052565b6020810190811067ffffffffffffffff821117611ff357604052565b6040810190811067ffffffffffffffff821117611ff357604052565b6060810190811067ffffffffffffffff821117611ff357604052565b6080810190811067ffffffffffffffff821117611ff357604052565b90601f8019910116810190811067ffffffffffffffff821117611ff357604052565b67ffffffffffffffff8111611ff357601f01601f191660200190565b9181601f840112156101cb5782359167ffffffffffffffff83116101cb57602083818601950101116101cb57565b90916001600160a01b0380931692831561259157600092828452826020956002875260409684888820541696879133151580613383575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928461334b575b858352600381528b83206001815401905586835252898120846001600160a01b031982541617905580a416928383036133115750505050565b6064945051927f64283d7b000000000000000000000000000000000000000000000000000000008452600484015260248301526044820152fd5b61336c87600052600460205260406000206001600160a01b03198154169055565b848352600381528b832080546000190190556132d8565b919394509150806133db575b1561339f578592918791386132ac565b8786886133bc576024915190637e27328960e01b82526004820152fd5b905163177e802f60e01b81523360048201526024810191909152604490fd5b503387148015613400575b8061338f575085825260048152338589842054161461338f565b5086825260058152878220338352815260ff88832054166133e6565b81810292918115918404141715611d1157565b908060209392818452848401376000828201840152601f01601f1916010190565b1561345757565b606460405162461bcd60e51b815260206004820152600260248201527f4e410000000000000000000000000000000000000000000000000000000000006044820152fd5b60656134ca60ff928060005260026020526134c56001600160a01b03604060002054161515613450565b61385e565b0616600881106134d75790565b60080160ff8111611d115790565b600d54600092916134f582613142565b91600190818116908115613561575060011461351057505050565b9091929350600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5906000915b84831061354e575050500190565b8181602092548587015201920191613540565b60ff191683525050811515909102019150565b600e546000929161358482613142565b91600190818116908115613561575060011461359f57505050565b9091929350600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd906000915b8483106135dd575050500190565b81816020925485870152019201916135cf565b8060005260026020526001600160a01b0360406000205416908115613613575090565b60249060405190637e27328960e01b82526004820152fd5b6001600160a01b0360085416330361363f57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b3d1561369a573d906136808261322b565b9161368e6040519384613209565b82523d6000602084013e565b606090565b8147106137025760008080936001600160a01b038294165af16136c061366f565b90156136c95750565b8051156136d857602081519101fd5b60046040517fd6bda275000000000000000000000000000000000000000000000000000000008152fd5b6044824790604051917fcf47918100000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b9293823b61374a575b5050505050565b61378f906001600160a01b038094169560405194859481630a85bd0160e11b9889885216600487015216602485015260448401526080606484015260848301906130bc565b03906020816000938185885af19082908261380e575b50506137dc57826137b461366f565b80519190826137d55760248260405190633250574960e11b82526004820152fd5b6020915001fd5b6001600160e01b031916036137f657503880808080613743565b60249060405190633250574960e11b82526004820152fd5b909192506020813d602011613856575b8161382b60209383613209565b810103126138525751906001600160e01b03198216820361384f57509038806137a5565b80fd5b5080fd5b3d915061381e565b60405160208101913060601b8352603482015246605482015260548152613884816131ed565b51902090565b90600881101561389b5760051b0190565b634e487b7160e01b600052603260045260246000fd5b60ff16605a8110156139bd57604681101561398357603281101561394957601e1115613910576040516138e3816131b5565b600381527f5261770000000000000000000000000000000000000000000000000000000000602082015290565b60405161391c816131b5565b600581527f54616e6779000000000000000000000000000000000000000000000000000000602082015290565b50604051613956816131b5565b600581527f4a75696379000000000000000000000000000000000000000000000000000000602082015290565b50604051613990816131b5565b600581527f5072696d65000000000000000000000000000000000000000000000000000000602082015290565b506040516139ca816131b5565b600981527f4c6567656e646172790000000000000000000000000000000000000000000000602082015290565b90613a018261322b565b613a0e6040519182613209565b8281528092613a1f601f199161322b565b0190602036910137565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015613b6c575b506d04ee2d6d415b85acef810000000080831015613b5d575b50662386f26fc1000080831015613b4e575b506305f5e10080831015613b3f575b5061271080831015613b30575b506064821015613b20575b600a80921015613b16575b600190816021613ac1600187016139f7565b95860101905b613ad3575b5050505090565b600019019083907f30313233343536373839616263646566000000000000000000000000000000008282061a835304918215613b1157919082613ac7565b613acc565b9160010191613aaf565b9190606460029104910191613aa4565b60049193920491019138613a99565b60089193920491019138613a8c565b60109193920491019138613a7d565b60209193920491019138613a6b565b604093508104915038613a52565b60405190613b87826131d1565b604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b80516020918201207f7363a24996de434fc886f1474dd74d955980fa72b926b9c955f94f6698ebf6868103613c4157507f4d3530302c323430204c3332302c373230204c3638302c373230205a0000000060405191613c37836131b5565b601c835282015290565b7f1242766c8824991355aaadec4d656d943025e70fe896230af412f93b3f92ba088103613cc757507f4d3530302c323430204c3330302c353230204c3530302c383030204c3730302c60405191613c97836131d1565b602583528201527f353230205a000000000000000000000000000000000000000000000000000000604082015290565b7f1664b525956d22f8f0ad35bd22f34261df9b15fc7ba28020f9866ac08cbbc90f8103613d7357507f4d3530302c32363020433336302c333030203332302c353630203436302c373260405191613d1d836131ed565b605583528201527f3020433538302c383230203732302c373030203730302c35323020433638302c60408201527f333630203634302c333030203530302c323630205a0000000000000000000000606082015290565b7fffc66c8548bc388f0156d76251a192b57d2601764d8478982e579b825596b8bc03613e1d577f4d3530302c323430204c3534302c343230204c3732302c343230204c3538302c60405191613dc7836131ed565b605b83528201527f353230204c3632302c373030204c3530302c363030204c3338302c373030204c60408201527f3432302c353230204c3238302c343230204c3436302c343230205a0000000000606082015290565b6040519060a082019082821067ffffffffffffffff831117611ff3577f4d3530302c323430204c3536302c343230204c3732302c333830204c3630302c91604052606d83528201527f353030204c3732302c363230204c3536302c353830204c3530302c373630204c60408201527f3434302c353830204c3238302c363230204c3430302c353030204c3238302c3360608201527f3830204c3434302c343230205a00000000000000000000000000000000000000608082015290565b919091805115613fdf5780519260029160028501809511611d115760038095047f3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81168103611d1157613f329060029694961b6139f7565b926020840192829183518401976020890192835194600085525b8a8110613f9257505050506003939495965052510680600114613f7f57600214613f74575090565b603d90600019015390565b50603d9081600019820153600119015390565b836004919b989b019a8b51600190603f9082828260121c16870101518453828282600c1c16870101518385015382828260061c168701015187850153168401015185820153019699613f4c565b509050604051613fee81613199565b600081529056fea26469706673582212200d1a7bd9231abca41ad594b76412577fd87c8de1c6989be7aeb1edd5b9a7812464736f6c63430008180033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH3 0x489 JUMPI PUSH3 0x4530 DUP1 CODESIZE SUB SWAP1 PUSH1 0x1F NOT SWAP3 PUSH1 0x1F DUP5 DUP2 DUP6 ADD AND DUP3 ADD SWAP4 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB SWAP4 DUP4 DUP7 LT DUP6 DUP8 GT OR PUSH3 0x473 JUMPI DUP2 PUSH1 0x80 SWAP3 DUP6 SWAP3 PUSH1 0x40 SWAP9 DUP10 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x489 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH3 0x489 JUMPI PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP4 PUSH1 0x60 DUP9 DUP8 ADD MLOAD SWAP7 ADD MLOAD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 DUP10 AND DUP1 SWAP10 SUB PUSH3 0x489 JUMPI PUSH3 0x89 PUSH3 0x48E JUMP JUMPDEST SWAP3 DUP5 DUP5 MSTORE PUSH32 0x53746174696346727569742044656C6963696F75732028416E696D6174656429 DUP6 DUP6 ADD MSTORE PUSH3 0xBC PUSH3 0x48E JUMP JUMPDEST SWAP2 PUSH1 0x5 SWAP1 DUP2 DUP5 MSTORE PUSH5 0x8CA4AAA8B PUSH1 0xDB SHL DUP8 DUP6 ADD MSTORE DUP6 MLOAD DUP6 DUP2 GT PUSH3 0x473 JUMPI DUP1 PUSH1 0x0 SWAP8 PUSH3 0xEA DUP10 SLOAD PUSH3 0x4AE JUMP JUMPDEST DUP11 DUP8 DUP3 GT PUSH3 0x444 JUMPI JUMPDEST POP POP DUP10 SWAP1 DUP7 DUP4 GT PUSH1 0x1 EQ PUSH3 0x3E0 JUMPI DUP10 SWAP3 PUSH3 0x3D4 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP7 SSTORE JUMPDEST DUP4 MLOAD SWAP1 DUP6 DUP3 GT PUSH3 0x3C0 JUMPI DUP2 SWAP1 PUSH1 0x1 SWAP6 PUSH3 0x13C DUP8 SLOAD PUSH3 0x4AE JUMP JUMPDEST DUP11 DUP8 DUP3 GT PUSH3 0x386 JUMPI JUMPDEST POP POP DUP10 SWAP2 DUP7 DUP5 GT PUSH1 0x1 EQ PUSH3 0x325 JUMPI POP DUP9 SWAP3 PUSH3 0x319 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP4 SSTORE JUMPDEST DUP11 ISZERO PUSH3 0x301 JUMPI DUP11 DUP1 SWAP13 SWAP14 PUSH1 0x8 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP14 DUP15 DUP3 AND OR PUSH1 0x8 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP8 DUP1 LOG3 DUP3 PUSH1 0x9 SSTORE PUSH3 0x1C6 PUSH1 0xD SLOAD PUSH3 0x4AE JUMP JUMPDEST DUP3 DUP2 GT PUSH3 0x2E1 JUMPI JUMPDEST POP PUSH32 0x5374617469634672756974000000000000000000000000000000000000000016 PUSH1 0xD SSTORE PUSH1 0xE SLOAD PUSH3 0x202 SWAP1 PUSH3 0x4AE JUMP JUMPDEST SWAP1 DUP3 DUP3 GT PUSH3 0x2BF JUMPI JUMPDEST POP POP POP PUSH1 0x12 PUSH9 0x44656C6963696F7573 PUSH1 0xB8 SHL ADD PUSH1 0xE SSTORE PUSH1 0xFF NOT PUSH1 0xF SLOAD AND OR PUSH1 0xF SSTORE PUSH2 0x2710 DUP1 DUP6 GT PUSH3 0x2A2 JUMPI POP DUP10 MLOAD SWAP2 DUP3 DUP12 ADD SWAP2 DUP3 GT DUP4 DUP4 LT OR PUSH3 0x28E JUMPI POP SWAP1 DUP8 SWAP5 SWAP4 SWAP3 SWAP2 DUP11 MSTORE DUP9 DUP2 MSTORE ADD MSTORE PUSH1 0xA0 SHL AND DUP5 OR PUSH1 0x6 SSTORE PUSH1 0x80 MSTORE PUSH1 0xB SSTORE PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE MLOAD PUSH2 0x402B SWAP1 DUP2 PUSH3 0x505 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2DE ADD MSTORE PUSH2 0x22FF ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x44 SWAP2 DUP13 MLOAD SWAP2 PUSH4 0x6F483D09 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH3 0x2D8 SWAP3 PUSH1 0xE DUP8 MSTORE DUP8 DUP8 KECCAK256 SWAP3 ADD SWAP1 SHR DUP2 ADD SWAP1 PUSH3 0x4EB JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH3 0x20C JUMP JUMPDEST PUSH1 0xD DUP7 MSTORE DUP7 DUP7 KECCAK256 PUSH3 0x2FA SWAP2 DUP5 ADD DUP4 SHR DUP2 ADD SWAP1 PUSH3 0x4EB JUMP JUMPDEST CODESIZE PUSH3 0x1CF JUMP JUMPDEST DUP12 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x15E JUMP JUMPDEST DUP8 DUP11 MSTORE DUP11 DUP11 KECCAK256 DUP9 SWAP6 SWAP1 SWAP4 SWAP3 SWAP2 AND DUP11 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x36F JUMPI POP POP DUP5 GT PUSH3 0x355 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0x172 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x347 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP11 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x334 JUMP JUMPDEST PUSH3 0x3AE SWAP2 DUP10 DUP13 MSTORE DUP9 DUP3 DUP14 KECCAK256 SWAP2 DUP2 DUP9 ADD DUP11 SHR DUP4 ADD SWAP4 DUP9 LT PUSH3 0x3B6 JUMPI JUMPDEST ADD DUP9 SHR ADD SWAP1 PUSH3 0x4EB JUMP JUMPDEST CODESIZE DUP11 PUSH3 0x146 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x3A3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x10B JUMP JUMPDEST DUP10 DUP1 MSTORE DUP11 DUP11 KECCAK256 SWAP3 DUP6 AND DUP11 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x42D JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0x413 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP7 SSTORE PUSH3 0x120 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x405 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x46B SWAP2 DUP12 DUP1 MSTORE DUP9 DUP3 DUP14 KECCAK256 SWAP2 DUP2 DUP8 ADD DUP11 SHR DUP4 ADD SWAP4 DUP8 LT PUSH3 0x3B6 JUMPI ADD DUP9 SHR ADD SWAP1 PUSH3 0x4EB JUMP JUMPDEST CODESIZE DUP11 PUSH3 0xF4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x473 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x4E0 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x4CA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x4BE JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x4F7 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4EB JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x2FAF JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2F04 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2EC5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2DC4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DAD JUMPI DUP1 PUSH4 0x24BBD049 EQ PUSH2 0x2D8A JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x2D01 JUMPI DUP1 PUSH4 0x2D9FFF01 EQ PUSH2 0x2C53 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2BFA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2BCC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A68 JUMPI DUP1 PUSH4 0x61B8CE8C EQ PUSH2 0x2A4A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2A1B JUMPI DUP1 PUSH4 0x63BD1D4A EQ PUSH2 0x29F4 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x29D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2965 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x290A JUMPI DUP1 PUSH4 0x7DE1E536 EQ PUSH2 0x285C JUMPI DUP1 PUSH4 0x8A4DCD85 EQ PUSH2 0x27FA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26F0 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x22B8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x21FB JUMPI DUP1 PUSH4 0xA3FF39B2 EQ PUSH2 0x2193 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x20FC JUMPI DUP1 PUSH4 0xC1D2B11D EQ PUSH2 0x1DAC JUMPI DUP1 PUSH4 0xC60D7E46 EQ PUSH2 0x1D83 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D0 JUMPI PUSH4 0xF4A0A528 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH32 0x525B762709CC2A983AEC5CCDFD807A061F993C91090B5BCD7DA92CA254976AAA PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x1BE PUSH2 0x362B JUMP JUMPDEST DUP1 PUSH1 0xB SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x1E9 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x362B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x23E JUMPI PUSH1 0x8 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND OR PUSH1 0x8 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x288 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x30F7 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x336 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 DUP2 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x4D616E676F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x386 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x4265727279000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3C1 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0xB DUP2 MSTORE PUSH32 0x447261676F6E6672756974000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3FC DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x4772617065000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x437 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x5065616368000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x472 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x4C696D6500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x4AD DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x506C756D00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x4E8 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x4775617661000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x7 SWAP1 PUSH2 0x534 DUP3 PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x385E JUMP JUMPDEST PUSH1 0x20 SHR AND DUP1 SWAP3 PUSH2 0x388A JUMP JUMPDEST MLOAD PUSH2 0x540 PUSH1 0x4 CALLDATALOAD PUSH2 0x349B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x54E DUP6 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55A DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2330643131313700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP6 MSTORE PUSH1 0x40 MLOAD PUSH2 0x591 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2331323132313200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x5CB DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2330623066313400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x605 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2331613130323000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x63F DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2330663133323000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x679 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2331303133313400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x6B3 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2330653131313700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x6ED DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2331343130313600000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x8FE DUP5 PUSH1 0x40 MLOAD SWAP7 PUSH2 0x72C DUP9 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x738 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2346463745344200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP9 MSTORE PUSH1 0x40 MLOAD PUSH2 0x76F DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2341313642464600000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x7A9 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2346463346413400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x7E3 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2338423543463600000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x81D DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2346464238364200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x857 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2337434635433900000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x891 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2339423539423600000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x8CB DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2337464442464600000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x388A JUMP JUMPDEST MLOAD SWAP4 PUSH1 0x42 PUSH1 0xFF DUP6 AND GT ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x1 ADD SWAP5 PUSH1 0xFF DUP7 GT PUSH2 0x1D11 JUMPI PUSH1 0xFF PUSH2 0x92A SWAP3 PUSH1 0x1 SWAP8 AND JUMPDEST AND SWAP1 PUSH2 0x388A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x935 DUP4 PUSH2 0x38B1 JUMP JUMPDEST SWAP2 PUSH2 0x941 PUSH1 0x4 CALLDATALOAD PUSH2 0x3A29 JUMP JUMPDEST SWAP5 PUSH2 0xB09 PUSH1 0x45 PUSH1 0x40 MLOAD SWAP8 PUSH2 0x9D3 PUSH1 0x2 DUP11 PUSH2 0x95D PUSH1 0x20 DUP3 ADD PUSH2 0x34E5 JUMP JUMPDEST SWAP4 PUSH2 0x98D DUP15 PUSH32 0x2000000000000000000000000000000000000000000000000000000000000000 SWAP7 DUP8 DUP2 MSTORE ADD PUSH2 0x3574 JUMP JUMPDEST PUSH32 0x2023000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x9C3 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x3099 JUMP JUMPDEST ADD SUB PUSH1 0x1D NOT DUP2 ADD DUP13 MSTORE ADD DUP11 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x9DF PUSH1 0xFF DUP10 AND PUSH2 0x3A29 JUMP JUMPDEST PUSH2 0xA23 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP4 PUSH32 0x4120000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xA1A PUSH1 0x22 DUP7 ADD PUSH2 0x34E5 JUMP JUMPDEST SWAP1 DUP2 MSTORE ADD PUSH2 0x3574 JUMP JUMPDEST PUSH32 0x2070696563652E20466C61766F723A2000000000000000000000000000000000 DUP2 MSTORE DUP8 MLOAD PUSH2 0xA59 DUP2 PUSH1 0x10 DUP5 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x3099 JUMP JUMPDEST PUSH32 0x2E20546965723A20000000000000000000000000000000000000000000000000 PUSH1 0x10 DUP3 DUP5 ADD ADD MSTORE DUP10 MLOAD SWAP2 PUSH2 0xA98 DUP4 DUP13 PUSH1 0x20 PUSH1 0x18 DUP7 DUP7 ADD ADD SWAP2 ADD PUSH2 0x3099 JUMP JUMPDEST ADD ADD PUSH32 0x2E2044656C6963696F75736E6573733A20000000000000000000000000000000 PUSH1 0x18 DUP3 ADD MSTORE PUSH2 0xAD4 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 PUSH1 0x29 DUP6 ADD SWAP2 ADD PUSH2 0x3099 JUMP JUMPDEST ADD PUSH32 0x2F3130302E20416E696D61746564206F6E2D636861696E205356472E00000000 PUSH1 0x29 DUP3 ADD MSTORE SUB PUSH1 0x25 DUP2 ADD DUP11 MSTORE ADD DUP9 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x14 PUSH1 0xFF DUP7 AND DIV PUSH1 0x8 SUB PUSH1 0x8 DUP2 GT PUSH2 0x1D11 JUMPI PUSH1 0x3 DUP2 LT PUSH2 0x1D39 JUMPI JUMPDEST PUSH1 0xC PUSH1 0xFF DUP8 AND DIV PUSH1 0xE SUB SWAP3 PUSH1 0xE DUP5 GT PUSH2 0x1D11 JUMPI PUSH1 0x6 DUP5 LT PUSH2 0x1D30 JUMPI JUMPDEST PUSH1 0xF PUSH1 0xFF DUP9 AND DIV PUSH1 0xC SUB SWAP2 PUSH1 0xC DUP4 GT PUSH2 0x1D11 JUMPI PUSH1 0x5 DUP4 LT PUSH2 0x1D27 JUMPI JUMPDEST PUSH2 0x348 PUSH1 0xFF DUP10 AND DUP1 DUP3 MUL DUP2 SWAP1 DIV DUP3 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x64 PUSH2 0xB84 SWAP2 PUSH1 0xFF DUP12 AND MUL DIV PUSH2 0x3A29 JUMP JUMPDEST PUSH2 0xB8D DUP9 PUSH2 0x3BD9 JUMP JUMPDEST DUP9 MLOAD PUSH1 0x20 DUP11 ADD KECCAK256 SWAP7 PUSH32 0xFFC66C8548BC388F0156D76251A192B57D2601764D8478982E579B825596B8BC DUP9 EQ SWAP8 DUP9 ISZERO PUSH2 0x1CE7 JUMPI JUMPDEST POP PUSH2 0xBDC PUSH2 0xBD6 PUSH2 0xBD0 DUP7 PUSH2 0x3A29 JUMP JUMPDEST SWAP8 PUSH2 0x3A29 JUMP JUMPDEST SWAP5 PUSH2 0x3A29 JUMP JUMPDEST SWAP8 ISZERO PUSH2 0x1CD1 JUMPI PUSH2 0xDDA PUSH1 0xDE PUSH2 0xCC4 SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xBF8 DUP3 PUSH2 0x31D1 JUMP JUMPDEST PUSH1 0x33 DUP3 MSTORE PUSH2 0xC52 PUSH1 0x20 DUP4 ADD SWAP2 PUSH32 0x4D302C2D3230204C362C2D36204C32302C30204C362C36204C302C3230204C2D DUP4 MSTORE PUSH32 0x362C36204C2D32302C30204C2D362C2D36205A00000000000000000000000000 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x3A29 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH32 0x3C67207472616E73666F726D3D227472616E736C61746528302C2D3230302922 PUSH1 0x20 DUP7 ADD MSTORE PUSH32 0x3E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP7 ADD MSTORE PUSH9 0x1E3830BA3410321E91 PUSH1 0xB9 SHL PUSH1 0x41 DUP7 ADD MSTORE MLOAD DUP1 SWAP3 PUSH1 0x4A DUP7 ADD SWAP1 PUSH2 0x3099 JUMP JUMPDEST DUP3 ADD PUSH32 0x222066696C6C3D22236666666666666430223E00000000000000000000000000 PUSH1 0x4A DUP3 ADD MSTORE PUSH32 0x3C616E696D6174655472616E73666F726D206174747269627574654E616D653D PUSH1 0x5D DUP3 ADD MSTORE PUSH32 0x227472616E73666F726D2220747970653D22726F74617465222066726F6D3D22 PUSH1 0x7D DUP3 ADD MSTORE PUSH32 0x30203020302220746F3D223336302030203022206475723D2200000000000000 PUSH1 0x9D DUP3 ADD MSTORE PUSH2 0xD72 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 PUSH1 0xB6 DUP6 ADD SWAP2 ADD PUSH2 0x3099 JUMP JUMPDEST ADD PUSH32 0x732220726570656174436F756E743D22696E646566696E697465222F3E000000 PUSH1 0xB6 DUP3 ADD MSTORE PUSH32 0x3C2F706174683E00000000000000000000000000000000000000000000000000 PUSH1 0xD3 DUP3 ADD MSTORE PUSH4 0x1E17B39F PUSH1 0xE1 SHL PUSH1 0xDA DUP3 ADD MSTORE SUB PUSH1 0xBE DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0xDE5 PUSH1 0x4 CALLDATALOAD PUSH2 0x3A29 JUMP JUMPDEST SWAP6 DUP6 PUSH2 0xDF3 PUSH1 0xFF DUP15 AND PUSH2 0x3A29 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 SWAP5 PUSH1 0x20 DUP7 ADD PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 SWAP1 MSTORE PUSH1 0x40 DUP7 ADD PUSH32 0x30302F737667222077696474683D223130303022206865696768743D22313030 SWAP1 MSTORE PUSH1 0x60 DUP7 ADD PUSH32 0x30223E0000000000000000000000000000000000000000000000000000000000 SWAP1 MSTORE PUSH1 0x63 DUP7 ADD PUSH32 0x3C646566733E0000000000000000000000000000000000000000000000000000 SWAP1 MSTORE PUSH1 0x69 DUP7 ADD PUSH32 0x3C7374796C653E40666F6E742D666163657B666F6E742D66616D696C793A496E SWAP1 MSTORE PUSH1 0x89 DUP7 ADD PUSH32 0x7465723B7372633A6C6F63616C28496E746572293B7D202E747B666F6E742D66 SWAP1 MSTORE PUSH1 0xA9 DUP7 ADD PUSH32 0x616D696C793A496E7465722C73797374656D2D75692C73616E732D7365726966 SWAP1 MSTORE PUSH1 0xC9 DUP7 ADD PUSH32 0x3B66696C6C3A236666667D3C2F7374796C653E00000000000000000000000000 SWAP1 MSTORE PUSH1 0xDC DUP7 ADD PUSH32 0x3C72616469616C4772616469656E742069643D2267223E000000000000000000 SWAP1 MSTORE PUSH1 0xF3 DUP7 ADD PUSH32 0x3C73746F70206F66667365743D223025222073746F702D636F6C6F723D220000 SWAP1 MSTORE PUSH2 0x111 SWAP1 DUP6 MLOAD PUSH1 0x20 DUP8 ADD SWAP8 DUP2 DUP5 DUP3 ADD SWAP1 PUSH2 0xF9C SWAP2 DUP12 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP2 DUP3 ADD PUSH32 0x222073746F702D6F7061636974793D22302E3935223E00000000000000000000 SWAP1 MSTORE PUSH32 0x3C616E696D617465206174747269627574654E616D653D226F66667365742220 SWAP1 DUP2 PUSH2 0x127 DUP5 ADD MSTORE PUSH2 0x147 DUP4 ADD PUSH32 0x76616C7565733D2230253B3230253B302522206475723D220000000000000000 SWAP1 MSTORE PUSH2 0x15F SWAP3 DUP2 MLOAD SWAP2 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x102D SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP2 PUSH32 0x732220726570656174436F756E743D22696E646566696E697465222F3E000000 SWAP6 DUP7 DUP1 SWAP3 DUP6 ADD MSTORE PUSH32 0x3C2F73746F703E00000000000000000000000000000000000000000000000000 SWAP3 DUP4 PUSH2 0x17C DUP7 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D2231303025222073746F702D636F6C6F723D22 SWAP5 DUP6 PUSH2 0x183 DUP3 ADD MSTORE PUSH2 0x1A3 SWAP10 MLOAD SWAP1 DUP12 DUP3 DUP13 DUP4 ADD PUSH2 0x10BD SWAP3 PUSH2 0x3099 JUMP JUMPDEST PUSH32 0x222073746F702D6F7061636974793D22302E3132222F3E000000000000000000 SWAP2 ADD SWAP10 DUP11 ADD MSTORE PUSH32 0x3C2F72616469616C4772616469656E743E000000000000000000000000000000 PUSH2 0x1BA DUP11 ADD MSTORE PUSH32 0x3C6C696E6561724772616469656E742069643D227368696D6D6572222078313D PUSH2 0x1CB DUP11 ADD MSTORE PUSH32 0x223025222079313D223025222078323D2231303025222079323D223025223E00 PUSH2 0x1EB DUP11 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D223025222073746F702D636F6C6F723D222366 PUSH2 0x20A DUP11 ADD MSTORE PUSH32 0x66666666663230222F3E00000000000000000000000000000000000000000000 PUSH2 0x22A DUP11 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D22353025222073746F702D636F6C6F723D2223 PUSH2 0x234 DUP11 ADD MSTORE PUSH32 0x6666666666663630223E00000000000000000000000000000000000000000000 PUSH2 0x254 DUP11 ADD MSTORE PUSH2 0x25E DUP10 ADD MSTORE PUSH32 0x76616C7565733D2230253B3130302522206475723D2200000000000000000000 PUSH2 0x27E DUP10 ADD MSTORE DUP1 MLOAD PUSH2 0x294 SWAP9 SWAP1 SWAP2 PUSH2 0x123C SWAP1 DUP4 SWAP1 DUP12 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3099 JUMP JUMPDEST ADD SWAP7 DUP8 ADD MSTORE PUSH2 0x2B1 DUP7 ADD MSTORE PUSH2 0x2B8 DUP6 ADD MSTORE PUSH32 0x236666666666663230222F3E0000000000000000000000000000000000000000 PUSH2 0x2D8 DUP6 ADD MSTORE PUSH32 0x3C2F6C696E6561724772616469656E743E000000000000000000000000000000 PUSH2 0x2E4 DUP6 ADD MSTORE PUSH32 0x3C2F646566733E00000000000000000000000000000000000000000000000000 PUSH2 0x2F5 DUP6 ADD MSTORE PUSH32 0x3C726563742077696474683D223130302522206865696768743D223130302522 PUSH2 0x2FC DUP6 ADD MSTORE PUSH32 0x2072783D223438222066696C6C3D220000000000000000000000000000000000 PUSH2 0x31C DUP6 ADD MSTORE DUP1 MLOAD PUSH2 0x32B SWAP5 SWAP1 SWAP2 PUSH2 0x132A SWAP1 DUP4 SWAP1 DUP8 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3099 JUMP JUMPDEST PUSH32 0x222F3E0000000000000000000000000000000000000000000000000000000000 SWAP2 ADD SWAP4 DUP5 ADD MSTORE PUSH32 0x3C67207472616E73666F726D3D227472616E736C617465283530302C35323029 PUSH2 0x32E DUP5 ADD MSTORE PUSH32 0x223E000000000000000000000000000000000000000000000000000000000000 PUSH2 0x34E DUP5 ADD MSTORE PUSH32 0x3C673E0000000000000000000000000000000000000000000000000000000000 PUSH2 0x350 DUP5 ADD MSTORE PUSH32 0x3C636972636C6520723D22333630222066696C6C3D2275726C28236729223E00 PUSH2 0x353 DUP5 ADD MSTORE PUSH32 0x3C616E696D6174655472616E73666F726D206174747269627574654E616D653D PUSH2 0x372 DUP5 ADD MSTORE PUSH32 0x227472616E73666F726D2220747970653D227363616C65222076616C7565733D PUSH2 0x392 DUP5 ADD MSTORE PUSH32 0x22313B312E30353B3122206475723D2200000000000000000000000000000000 PUSH2 0x3B2 DUP5 ADD MSTORE DUP1 MLOAD PUSH2 0x3C2 SWAP4 SWAP1 SWAP2 PUSH2 0x147C SWAP1 DUP4 SWAP1 DUP7 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3099 JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH2 0x3DF DUP2 ADD PUSH32 0x3C2F636972636C653E0000000000000000000000000000000000000000000000 SWAP1 MSTORE PUSH4 0x1E17B39F PUSH1 0xE1 SHL SWAP4 DUP5 PUSH2 0x3E8 DUP4 ADD MSTORE PUSH2 0x3EC DUP3 ADD PUSH9 0x1E3830BA3410321E91 PUSH1 0xB9 SHL SWAP1 MSTORE PUSH2 0x3F5 SWAP2 DUP2 MLOAD SWAP2 DUP3 DUP5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14E6 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP1 DUP2 ADD PUSH32 0x22207472616E73666F726D3D227472616E736C617465282D3530302C2D353230 SWAP1 MSTORE PUSH2 0x415 DUP2 ADD PUSH32 0x29222066696C6C3D220000000000000000000000000000000000000000000000 SWAP1 MSTORE PUSH2 0x41E SWAP7 MLOAD SWAP2 DUP3 DUP9 DUP4 ADD PUSH2 0x1548 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP5 DUP6 ADD PUSH32 0x22206F7061636974793D22302E3138222F3E0000000000000000000000000000 SWAP1 MSTORE PUSH2 0x430 SWAP5 DUP2 MLOAD SWAP2 DUP3 DUP8 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1588 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP4 DUP5 ADD MSTORE PUSH32 0x3C7465787420783D2238302220793D223230302220636C6173733D2274222066 PUSH2 0x434 DUP5 ADD MSTORE PUSH32 0x6F6E742D73697A653D22363422206F7061636974793D22302E39223E00000000 PUSH2 0x454 DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x470 SWAP4 PUSH2 0x15F1 DUP3 DUP7 DUP4 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x3099 JUMP JUMPDEST ADD SWAP2 PUSH32 0x202D200000000000000000000000000000000000000000000000000000000000 DUP1 SWAP5 DUP5 ADD MSTORE PUSH2 0x473 SWAP3 DUP10 MLOAD SWAP1 DUP5 DUP2 ADD DUP3 PUSH1 0x20 DUP14 ADD SWAP2 PUSH2 0x1632 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP3 PUSH32 0x3C2F746578743E00000000000000000000000000000000000000000000000000 SWAP6 DUP7 DUP1 SWAP3 DUP7 ADD MSTORE PUSH2 0x47A DUP6 ADD PUSH32 0x3C7465787420783D2238302220793D223238302220636C6173733D2274222066 SWAP1 MSTORE PUSH2 0x49A DUP6 ADD PUSH32 0x6F6E742D73697A653D22333622206F7061636974793D22302E36223E23000000 SWAP1 MSTORE PUSH2 0x4B7 SWAP5 DUP2 MLOAD SWAP2 DUP3 DUP8 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16C5 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP4 DUP5 ADD MSTORE PUSH32 0x3C7465787420783D2238302220793D223730302220636C6173733D2274222066 PUSH2 0x4BE DUP5 ADD MSTORE PUSH32 0x6F6E742D73697A653D22323822206F7061636974793D22302E3835223E44656C PUSH2 0x4DE DUP5 ADD MSTORE PUSH32 0x6963696F75736E65737320000000000000000000000000000000000000000000 PUSH2 0x4FE DUP5 ADD MSTORE DUP1 MLOAD PUSH2 0x509 SWAP4 SWAP1 SWAP2 PUSH2 0x1759 SWAP1 DUP4 SWAP1 DUP7 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3099 JUMP JUMPDEST PUSH32 0x2F3130303C2F746578743E000000000000000000000000000000000000000000 SWAP2 ADD SWAP3 DUP4 ADD MSTORE PUSH32 0x3C7265637420783D2238302220793D22373230222077696474683D2238343022 PUSH2 0x514 DUP4 ADD MSTORE PUSH32 0x206865696768743D223336222072783D223138222066696C6C3D222366666666 PUSH2 0x534 DUP4 ADD MSTORE PUSH32 0x66663230222F3E00000000000000000000000000000000000000000000000000 PUSH2 0x554 DUP4 ADD MSTORE PUSH32 0x3C7265637420783D2238302220793D22373230222077696474683D2200000000 PUSH2 0x55B DUP4 ADD MSTORE DUP1 MLOAD PUSH2 0x577 SWAP3 SWAP1 SWAP2 PUSH2 0x1836 SWAP1 DUP4 SWAP1 DUP6 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3099 JUMP JUMPDEST PUSH32 0x22206865696768743D223336222072783D223138222066696C6C3D2275726C28 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x237368696D6D657229222F3E0000000000000000000000000000000000000000 PUSH2 0x597 DUP3 ADD MSTORE PUSH32 0x3C7265637420783D2238302220793D22383230222072783D2231342220776964 PUSH2 0x5A3 DUP3 ADD MSTORE PUSH32 0x74683D2238343022206865696768743D223536222066696C6C3D222366666666 PUSH2 0x5C3 DUP3 ADD MSTORE PUSH32 0x66663130222F3E00000000000000000000000000000000000000000000000000 PUSH2 0x5E3 DUP3 ADD MSTORE PUSH32 0x3C7465787420783D223130302220793D223836302220636C6173733D22742220 PUSH2 0x5EA DUP3 ADD MSTORE PUSH32 0x666F6E742D73697A653D22323822206F7061636974793D22302E39223E000000 PUSH2 0x60A DUP3 ADD MSTORE PUSH2 0x1954 SWAP1 PUSH2 0x627 ADD PUSH2 0x3574 JUMP JUMPDEST SWAP1 DUP2 MSTORE DUP5 MLOAD SWAP1 PUSH2 0x196B DUP3 PUSH1 0x3 DUP4 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x3099 JUMP JUMPDEST ADD SWAP1 PUSH1 0x3 DUP3 ADD MSTORE PUSH1 0xA DUP2 ADD PUSH32 0x3C2F7376673E0000000000000000000000000000000000000000000000000000 SWAP1 MSTORE SUB PUSH1 0xF NOT DUP2 ADD DUP3 MSTORE PUSH1 0x10 ADD PUSH2 0x19AE SWAP1 DUP3 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x19B6 PUSH2 0x3B7A JUMP JUMPDEST PUSH2 0x19BF SWAP2 PUSH2 0x3EDA JUMP JUMPDEST SWAP3 PUSH1 0xFF AND PUSH2 0x19CC SWAP1 PUSH2 0x3A29 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x20 DUP8 ADD PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 SWAP1 MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x29 DUP10 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A10 SWAP3 PUSH2 0x3099 JUMP JUMPDEST DUP7 ADD PUSH1 0x29 DUP2 ADD PUSH32 0x222C226465736372697074696F6E223A22000000000000000000000000000000 SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x3A DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A4F SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD PUSH1 0x3A DUP2 ADD PUSH32 0x222C22696D616765223A22646174613A696D6167652F7376672B786D6C3B6261 SWAP1 MSTORE PUSH1 0x5A DUP2 ADD PUSH32 0x736536342C000000000000000000000000000000000000000000000000000000 SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x5F DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AB4 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD PUSH1 0x5F DUP2 ADD PUSH32 0x222C2261747472696275746573223A5B00000000000000000000000000000000 SWAP1 MSTORE PUSH1 0x6F DUP2 ADD PUSH32 0x7B2274726169745F74797065223A22466C61766F72222C2276616C7565223A22 SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x8F DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B19 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP1 PUSH32 0x227D2C0000000000000000000000000000000000000000000000000000000000 SWAP2 DUP3 PUSH1 0x8F DUP3 ADD MSTORE PUSH1 0x92 DUP2 ADD PUSH32 0x7B2274726169745F74797065223A2254696572222C2276616C7565223A220000 SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xB0 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B80 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP1 PUSH1 0xB0 DUP3 ADD MSTORE PUSH1 0xB3 DUP2 ADD PUSH32 0x7B2274726169745F74797065223A2244656C6963696F75736E657373222C2276 SWAP1 MSTORE PUSH1 0xD3 DUP2 ADD PUSH32 0x616C7565223A0000000000000000000000000000000000000000000000000000 SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xD9 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BEB SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD PUSH1 0xD9 DUP2 ADD PUSH32 0x7D00000000000000000000000000000000000000000000000000000000000000 SWAP1 MSTORE PUSH1 0xDA DUP2 ADD PUSH32 0x5D7D000000000000000000000000000000000000000000000000000000000000 SWAP1 MSTORE SUB PUSH1 0xBC DUP2 ADD DUP3 MSTORE PUSH1 0xDC ADD PUSH2 0x1C4E SWAP1 DUP3 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x1C56 PUSH2 0x3B7A JUMP JUMPDEST PUSH2 0x1C5F SWAP2 PUSH2 0x3EDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 SWAP1 MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x3D DUP5 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CA1 SWAP3 PUSH2 0x3099 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1D DUP2 ADD DUP3 MSTORE PUSH1 0x3D ADD PUSH2 0x1CB7 SWAP1 DUP3 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH2 0x1CCD SWAP2 PUSH2 0x30BC JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1CDE DUP2 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0xDDA JUMP JUMPDEST PUSH32 0x181EBE3A8FA130246D49BFD123AC54849B05BDCD02C6B1322C78DE2A3988A310 EQ SWAP8 POP DUP14 PUSH2 0xBC0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SWAP3 POP PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x6 SWAP4 POP PUSH2 0xB40 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x21 PUSH1 0xFF DUP6 AND GT ISZERO PUSH2 0x1D68 JUMPI PUSH1 0x2 ADD SWAP5 PUSH1 0xFF DUP7 GT PUSH2 0x1D11 JUMPI PUSH1 0xFF PUSH2 0x92A SWAP3 PUSH1 0x1 SWAP8 AND PUSH2 0x923 JUMP JUMPDEST PUSH1 0x3 ADD SWAP5 PUSH1 0xFF DUP7 GT PUSH2 0x1D11 JUMPI PUSH1 0xFF PUSH2 0x92A SWAP3 PUSH1 0x1 SWAP8 AND PUSH2 0x923 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH2 0x1DA1 PUSH1 0x4 CALLDATALOAD PUSH2 0x349B JUMP JUMPDEST PUSH1 0xFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1CB JUMPI PUSH2 0x1DDE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3247 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x1CB JUMPI PUSH2 0x1DF6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3247 JUMP JUMPDEST PUSH2 0x1DFE PUSH2 0x362B JUMP JUMPDEST DUP5 DUP4 GT PUSH2 0x1FF3 JUMPI PUSH2 0x1E10 PUSH1 0xD SLOAD PUSH2 0x3142 JUMP JUMPDEST SWAP5 PUSH1 0x1F SWAP6 DUP7 DUP2 GT PUSH2 0x209A JUMPI JUMPDEST POP DUP4 PUSH1 0x0 DUP8 DUP3 GT PUSH1 0x1 EQ PUSH2 0x2014 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2009 JUMPI JUMPDEST POP DUP5 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP7 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE JUMPDEST DUP2 GT PUSH2 0x1FF3 JUMPI PUSH2 0x1E58 PUSH1 0xE SLOAD PUSH2 0x3142 JUMP JUMPDEST DUP6 DUP2 GT PUSH2 0x1F91 JUMPI JUMPDEST POP PUSH1 0x0 SWAP5 DUP2 GT PUSH1 0x1 EQ PUSH2 0x1EE7 JUMPI SWAP1 DUP2 PUSH2 0x1ED7 SWAP3 PUSH32 0x2C7EA2C532CC0DAD6D6BAAD5A149D62033F0F3FA2E619DE5A0296268F78611C3 SWAP7 PUSH1 0x0 SWAP2 PUSH2 0x1EDC JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP4 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE JUMPDEST PUSH2 0x1EC9 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x40 DUP8 MSTORE PUSH1 0x40 DUP8 ADD SWAP2 PUSH2 0x342F JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x342F JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP3 ADD CALLDATALOAD DUP8 PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x1F NOT DUP2 AND SWAP5 PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP6 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F79 JUMPI POP SWAP6 DUP3 SWAP2 PUSH2 0x1ED7 SWAP5 SWAP4 PUSH32 0x2C7EA2C532CC0DAD6D6BAAD5A149D62033F0F3FA2E619DE5A0296268F78611C3 SWAP9 LT PUSH2 0x1F5F JUMPI JUMPDEST POP POP PUSH1 0x1 DUP2 DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x1EB2 JUMP JUMPDEST DUP4 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 PUSH2 0x1F4F JUMP JUMPDEST DUP5 DUP4 ADD CALLDATALOAD DUP9 SSTORE PUSH1 0x1 SWAP1 SWAP8 ADD SWAP7 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1F17 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD DUP7 DUP1 DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP6 LT PUSH2 0x1FEA JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FDE JUMPI POP PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1FD1 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x1FCA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP6 ADD CALLDATALOAD DUP8 PUSH2 0x1E32 JUMP JUMPDEST SWAP1 POP PUSH1 0x1F NOT DUP6 AND SWAP1 PUSH1 0xD PUSH1 0x0 MSTORE DUP6 PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x207F JUMPI POP LT PUSH2 0x2065 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP5 DUP2 SHL ADD PUSH1 0xD SSTORE PUSH2 0x1E47 JUMP JUMPDEST DUP7 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 PUSH2 0x2055 JUMP JUMPDEST DUP10 DUP5 ADD CALLDATALOAD DUP6 SSTORE PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 DUP10 SWAP4 POP ADD PUSH2 0x2047 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 DUP8 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP9 LT PUSH2 0x20F3 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x20E7 JUMPI POP PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x20DA JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x20D3 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x2115 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x211D PUSH2 0x30F7 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x1CB JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x1CB JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH2 0x214E DUP5 PUSH2 0x322B JUMP JUMPDEST SWAP4 PUSH2 0x215C PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x3209 JUMP JUMPDEST DUP1 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP9 ADD ADD GT PUSH2 0x1CB JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x2191 SWAP10 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE PUSH2 0x218B DUP4 DUP4 DUP4 PUSH2 0x3275 JUMP JUMPDEST CALLER PUSH2 0x373A JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH32 0xFCBB1571F6F637B3645E200FF18FBCB7FC2F8DB33547E2F582146A51246E1043 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x21D7 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x21DF PUSH2 0x362B JUMP JUMPDEST AND DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x2214 PUSH2 0x30E1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2287 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x24 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x2 PUSH1 0x9 SLOAD EQ PUSH2 0x26C6 JUMPI PUSH1 0x2 PUSH1 0x9 SSTORE PUSH1 0xFF PUSH1 0xF SLOAD AND ISZERO PUSH2 0x2682 JUMPI PUSH1 0x4 CALLDATALOAD ISZERO ISZERO DUP1 PUSH2 0x2675 JUMPI JUMPDEST ISZERO PUSH2 0x2631 JUMPI PUSH1 0xA SLOAD PUSH1 0x4 CALLDATALOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1D11 JUMPI PUSH32 0x0 LT PUSH2 0x25ED JUMPI PUSH2 0x2331 PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD PUSH2 0x341C JUMP JUMPDEST CALLVALUE LT PUSH2 0x25A9 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 LT PUSH2 0x236B JUMPI SELFBALANCE PUSH2 0x2350 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x9 SSTORE STOP JUMPDEST PUSH2 0x2366 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND SELFBALANCE SWAP1 PUSH2 0x369F JUMP JUMPDEST PUSH2 0x2349 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH2 0x237B DUP3 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE CALLER ISZERO PUSH2 0x2591 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP2 DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x2555 JUMPI JUMPDEST CALLER PUSH2 0x253B JUMPI JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH2 0x250A JUMPI CALLER EXTCODESIZE PUSH2 0x2411 JUMPI JUMPDEST POP POP PUSH1 0x1 SWAP1 DUP2 PUSH1 0xA SLOAD ADD PUSH1 0xA SSTORE ADD PUSH2 0x233A JUMP JUMPDEST PUSH2 0x244D SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x30BC JUMP JUMPDEST SUB DUP2 PUSH1 0x0 CALLER GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x24C5 JUMPI JUMPDEST POP PUSH2 0x248E JUMPI PUSH2 0x246A PUSH2 0x366F JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x2489 JUMPI PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP2 AND SUB PUSH2 0x24AE JUMPI PUSH1 0x1 DUP3 PUSH2 0x23FE JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2502 JUMPI JUMPDEST DUP2 PUSH2 0x24E1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3209 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1CB JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x1CB JUMPI SWAP1 DUP4 PUSH2 0x245D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x23AE JUMP JUMPDEST PUSH2 0x2576 DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742045544800000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736F6C64206F7574000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x71747920312E2E35000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x5 PUSH1 0x4 CALLDATALOAD GT ISZERO PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420636C6F736564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x1 SLOAD SWAP3 PUSH2 0x2716 DUP5 PUSH2 0x3142 JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x27B3 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x2756 JUMPI JUMPDEST POP PUSH2 0x2742 SWAP3 POP SUB DUP4 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x1CCD PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x30BC JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x279B JUMPI POP POP PUSH2 0x2742 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x2735 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x2784 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP3 ADD MSTORE PUSH2 0x2742 SWAP6 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 SWAP2 POP PUSH2 0x2735 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH32 0x8BA9AF8FEF251A59A57BB383A518FF12B3C2770C23CF0AB9A59A9E2390E08F43 SWAP2 PUSH2 0x2844 PUSH2 0x362B JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0xF SLOAD AND PUSH1 0xFF DUP3 AND OR PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE SLOAD PUSH1 0x0 DUP3 PUSH2 0x287F DUP4 PUSH2 0x3142 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x27B3 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x28AD JUMPI POP PUSH2 0x2742 SWAP3 POP SUB DUP4 PUSH2 0x3209 JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x28F2 JUMPI POP POP PUSH2 0x2742 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x2735 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x28DB JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x2923 PUSH2 0x362B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x8 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2986 PUSH2 0x30E1 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x29A5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH2 0x2A39 PUSH1 0x4 CALLDATALOAD PUSH2 0x35F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP2 CALLER ISZERO ISZERO SWAP1 DUP2 PUSH2 0x2B24 JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x2 PUSH1 0x0 SWAP3 DUP3 PUSH2 0x2AEC JUMPI JUMPDEST DUP5 DUP5 MSTORE MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 STOP JUMPDEST PUSH2 0x2B0D DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP5 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x2AB0 JUMP JUMPDEST DUP2 PUSH2 0x2B74 JUMPI JUMPDEST POP ISZERO PUSH2 0x2B37 JUMPI DUP4 DUP1 PUSH2 0x2AA2 JUMP JUMPDEST POP PUSH2 0x2B54 JUMPI PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST CALLER DUP5 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x2BA8 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2B8E JUMPI JUMPDEST POP DUP5 PUSH2 0x2B2A JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 DUP3 MSTORE CALLER SWAP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND EQ DUP5 PUSH2 0x2B87 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 PUSH2 0x2B80 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH2 0x2191 PUSH2 0x2BDD CALLDATASIZE PUSH2 0x310D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2BEB DUP5 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x218B DUP4 DUP4 DUP4 PUSH2 0x3275 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x2C13 PUSH2 0x362B JUMP JUMPDEST PUSH2 0x2191 SELFBALANCE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND DUP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 PUSH1 0x20 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE LOG2 PUSH2 0x369F JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH1 0xD SLOAD PUSH1 0x0 DUP3 PUSH2 0x2C76 DUP4 PUSH2 0x3142 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x27B3 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x2CA4 JUMPI POP PUSH2 0x2742 SWAP3 POP SUB DUP4 PUSH2 0x3209 JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x2CE9 JUMPI POP POP PUSH2 0x2742 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x2735 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x2CD2 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0xA0 SHR SWAP1 DUP3 ISZERO PUSH2 0x2D75 JUMPI JUMPDEST POP PUSH2 0x2D58 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2710 SWAP3 AND PUSH1 0x24 CALLDATALOAD PUSH2 0x341C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 SWAP1 DIV PUSH1 0x20 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD SWAP1 DUP2 AND SWAP3 POP PUSH1 0xA0 SHR SWAP1 POP PUSH2 0x2D58 PUSH2 0x2D3A JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xF SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH2 0x2191 PUSH2 0x2DBE CALLDATASIZE PUSH2 0x310D JUMP JUMPDEST SWAP2 PUSH2 0x3275 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x2DDD PUSH2 0x30E1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x2DE9 DUP2 PUSH2 0x35F0 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x2EB2 JUMPI JUMPDEST DUP1 PUSH2 0x2E84 JUMPI JUMPDEST PUSH2 0x2E54 JUMPI DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP4 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x2DF8 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x2DF2 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2EE2 DUP2 PUSH2 0x35F0 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 PUSH2 0x2F27 DUP4 PUSH2 0x3142 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x27B3 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x2F55 JUMPI POP PUSH2 0x2742 SWAP3 POP SUB DUP4 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE DUP6 SWAP3 POP SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP6 DUP4 LT PUSH2 0x2F97 JUMPI POP POP PUSH2 0x2742 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x2735 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x2F80 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1CB JUMPI DUP2 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP4 EQ SWAP1 DUP2 ISZERO PUSH2 0x300B JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x306F JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3045 JUMPI JUMPDEST POP DUP4 PUSH2 0x3004 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ DUP4 PUSH2 0x303E JUMP JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x3037 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x30AC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x309C JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x30D5 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1CB JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1CB JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x1CB JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x1CB JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3172 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x315C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3151 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FF3 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1CB JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1CB JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x1CB JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2591 JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0x3383 JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0x334B JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0x3311 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x336C DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x32D8 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0x33DB JUMPI JUMPDEST ISZERO PUSH2 0x339F JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0x32AC JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0x33BC JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0x3400 JUMPI JUMPDEST DUP1 PUSH2 0x338F JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0x338F JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0x33E6 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1D11 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3457 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E41000000000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x65 PUSH2 0x34CA PUSH1 0xFF SWAP3 DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x34C5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x385E JUMP JUMPDEST MOD AND PUSH1 0x8 DUP2 LT PUSH2 0x34D7 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x8 ADD PUSH1 0xFF DUP2 GT PUSH2 0x1D11 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x34F5 DUP3 PUSH2 0x3142 JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3561 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3510 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x354E JUMPI POP POP POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP6 DUP8 ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x3540 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x3584 DUP3 PUSH2 0x3142 JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3561 JUMPI POP PUSH1 0x1 EQ PUSH2 0x359F JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x35DD JUMPI POP POP POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP6 DUP8 ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x35CF JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x3613 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND CALLER SUB PUSH2 0x363F JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x369A JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3680 DUP3 PUSH2 0x322B JUMP JUMPDEST SWAP2 PUSH2 0x368E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3209 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x3702 JUMPI PUSH1 0x0 DUP1 DUP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SWAP5 AND GAS CALL PUSH2 0x36C0 PUSH2 0x366F JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x36C9 JUMPI POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x36D8 JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x44 DUP3 SELFBALANCE SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP3 SWAP4 DUP3 EXTCODESIZE PUSH2 0x374A JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x378F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP2 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP9 DUP10 DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x30BC JUMP JUMPDEST SUB SWAP1 PUSH1 0x20 DUP2 PUSH1 0x0 SWAP4 DUP2 DUP6 DUP9 GAS CALL SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x380E JUMPI JUMPDEST POP POP PUSH2 0x37DC JUMPI DUP3 PUSH2 0x37B4 PUSH2 0x366F JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x37D5 JUMPI PUSH1 0x24 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x37F6 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x3743 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3856 JUMPI JUMPDEST DUP2 PUSH2 0x382B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3209 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3852 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x384F JUMPI POP SWAP1 CODESIZE DUP1 PUSH2 0x37A5 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x381E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 ADDRESS PUSH1 0x60 SHL DUP4 MSTORE PUSH1 0x34 DUP3 ADD MSTORE CHAINID PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH2 0x3884 DUP2 PUSH2 0x31ED JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x389B JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF AND PUSH1 0x5A DUP2 LT ISZERO PUSH2 0x39BD JUMPI PUSH1 0x46 DUP2 LT ISZERO PUSH2 0x3983 JUMPI PUSH1 0x32 DUP2 LT ISZERO PUSH2 0x3949 JUMPI PUSH1 0x1E GT ISZERO PUSH2 0x3910 JUMPI PUSH1 0x40 MLOAD PUSH2 0x38E3 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH32 0x5261770000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391C DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x54616E6779000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3956 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x4A75696379000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3990 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x5072696D65000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x39CA DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH32 0x4C6567656E646172790000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3A01 DUP3 PUSH2 0x322B JUMP JUMPDEST PUSH2 0x3A0E PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x3209 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3A1F PUSH1 0x1F NOT SWAP2 PUSH2 0x322B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x3B6C JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x3B5D JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x3B4E JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x3B3F JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x3B30 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x3B20 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x3B16 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x3AC1 PUSH1 0x1 DUP8 ADD PUSH2 0x39F7 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x3AD3 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x3B11 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x3AC7 JUMP JUMPDEST PUSH2 0x3ACC JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x3AAF JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x3AA4 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A99 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A8C JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A7D JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A6B JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x3A52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3B87 DUP3 PUSH2 0x31D1 JUMP JUMPDEST PUSH1 0x40 DUP3 MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F PUSH1 0x40 DUP4 PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH32 0x7363A24996DE434FC886F1474DD74D955980FA72B926B9C955F94F6698EBF686 DUP2 SUB PUSH2 0x3C41 JUMPI POP PUSH32 0x4D3530302C323430204C3332302C373230204C3638302C373230205A00000000 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3C37 DUP4 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x1C DUP4 MSTORE DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH32 0x1242766C8824991355AAADEC4D656D943025E70FE896230AF412F93B3F92BA08 DUP2 SUB PUSH2 0x3CC7 JUMPI POP PUSH32 0x4D3530302C323430204C3330302C353230204C3530302C383030204C3730302C PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3C97 DUP4 PUSH2 0x31D1 JUMP JUMPDEST PUSH1 0x25 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x353230205A000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH32 0x1664B525956D22F8F0AD35BD22F34261DF9B15FC7BA28020F9866AC08CBBC90F DUP2 SUB PUSH2 0x3D73 JUMPI POP PUSH32 0x4D3530302C32363020433336302C333030203332302C353630203436302C3732 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3D1D DUP4 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x55 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x3020433538302C383230203732302C373030203730302C35323020433638302C PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x333630203634302C333030203530302C323630205A0000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH32 0xFFC66C8548BC388F0156D76251A192B57D2601764D8478982E579B825596B8BC SUB PUSH2 0x3E1D JUMPI PUSH32 0x4D3530302C323430204C3534302C343230204C3732302C343230204C3538302C PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3DC7 DUP4 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x5B DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x353230204C3632302C373030204C3530302C363030204C3338302C373030204C PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x3432302C353230204C3238302C343230204C3436302C343230205A0000000000 PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x1FF3 JUMPI PUSH32 0x4D3530302C323430204C3536302C343230204C3732302C333830204C3630302C SWAP2 PUSH1 0x40 MSTORE PUSH1 0x6D DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x353030204C3732302C363230204C3536302C353830204C3530302C373630204C PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x3434302C353830204C3238302C363230204C3430302C353030204C3238302C33 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3830204C3434302C343230205A00000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD ISZERO PUSH2 0x3FDF JUMPI DUP1 MLOAD SWAP3 PUSH1 0x2 SWAP2 PUSH1 0x2 DUP6 ADD DUP1 SWAP6 GT PUSH2 0x1D11 JUMPI PUSH1 0x3 DUP1 SWAP6 DIV PUSH32 0x3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1D11 JUMPI PUSH2 0x3F32 SWAP1 PUSH1 0x2 SWAP7 SWAP5 SWAP7 SHL PUSH2 0x39F7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP3 SWAP2 DUP4 MLOAD DUP5 ADD SWAP8 PUSH1 0x20 DUP10 ADD SWAP3 DUP4 MLOAD SWAP5 PUSH1 0x0 DUP6 MSTORE JUMPDEST DUP11 DUP2 LT PUSH2 0x3F92 JUMPI POP POP POP POP PUSH1 0x3 SWAP4 SWAP5 SWAP6 SWAP7 POP MSTORE MLOAD MOD DUP1 PUSH1 0x1 EQ PUSH2 0x3F7F JUMPI PUSH1 0x2 EQ PUSH2 0x3F74 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x4 SWAP2 SWAP12 SWAP9 SWAP12 ADD SWAP11 DUP12 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP8 ADD ADD MLOAD DUP5 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP8 ADD ADD MLOAD DUP4 DUP6 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP8 ADD ADD MLOAD DUP8 DUP6 ADD MSTORE8 AND DUP5 ADD ADD MLOAD DUP6 DUP3 ADD MSTORE8 ADD SWAP7 SWAP10 PUSH2 0x3F4C JUMP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0x3FEE DUP2 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD BYTE PUSH28 0xD9231ABCA41AD594B76412577FD87C8DE1C6989BE7AEB1EDD5B9A781 0x24 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"871:11928:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;871:11928:31;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;:::i;:::-;;;;;;;-1:-1:-1;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;871:11928:31;;;;;;;;;;;;;;1273:26:0;;1269:95;;871:11928:31;;;;3004:6:0;871:11928:31;;;;;;;;;;;;3004:6:0;871:11928:31;;3052:40:0;;;;871:11928:31;2061:21:22;871:11928:31;;1251:13;871:11928;;:::i;:::-;;;;;;;-1:-1:-1;871:11928:31;1251:13;871:11928;1298:11;871:11928;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;871:11928:31;1298:11;871:11928;;;1341:4;871:11928;;;1341:4;871:11928;3345:5:14;3765:26;;;3761:173;;-1:-1:-1;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;4083:35:14;871:11928:31;;;;;;4061:57:14;871:11928:31;;1611:22;871:11928;;1673:16;871:11928;;;1673:16;871:11928;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;871:11928:31;;;;;;;;3761:173:14;871:11928:31;;;;;3868:55:14;;;;;;;;;871:11928:31;;;;;3868:55:14;871:11928:31;;;1298:11;871:11928;;;;;;;;;;;;;:::i;:::-;;;;;;;1251:13;871:11928;;;;;;;;;;;;;;;:::i;:::-;;;;1269:95:0;871:11928:31;;-1:-1:-1;;;1322:31:0;;;;;871:11928:31;;;;;1322:31:0;871:11928:31;;;;-1:-1:-1;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;871:11928:31;;;;;;;;;;;;-1:-1:-1;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;871:11928:31;;;;;-1:-1:-1;871:11928:31;;-1:-1:-1;871:11928:31;;;;;;;;;;-1:-1:-1;;;;;871:11928:31;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":12535,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_28918":{"entryPoint":12513,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":12557,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_string_calldata":{"entryPoint":12871,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":12476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":13359,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":13541,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_storage_to_string_nonPadded_inplace":{"entryPoint":13684,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_string":{"entryPoint":14839,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":12843,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":13340,"id":null,"parameterSlots":2,"returnSlots":1},"copy_literal_to_memory_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce":{"entryPoint":15226,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":12441,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":12610,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":13935,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":12809,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_28939":{"entryPoint":12668,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_50146":{"entryPoint":12697,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_50148":{"entryPoint":12725,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_50173":{"entryPoint":12753,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_50174":{"entryPoint":12781,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":null,"id":2446,"parameterSlots":1,"returnSlots":0},"fun_checkOnERC721Received":{"entryPoint":14138,"id":2781,"parameterSlots":5,"returnSlots":0},"fun_checkOwner":{"entryPoint":13867,"id":84,"parameterSlots":0,"returnSlots":0},"fun_deliciousnessOf":{"entryPoint":13467,"id":10144,"parameterSlots":1,"returnSlots":1},"fun_encode":{"entryPoint":16090,"id":4381,"parameterSlots":2,"returnSlots":1},"fun_requireOwned":{"entryPoint":13808,"id":2512,"parameterSlots":1,"returnSlots":1},"fun_seed":{"entryPoint":14430,"id":10100,"parameterSlots":1,"returnSlots":1},"fun_sendValue":{"entryPoint":13983,"id":3107,"parameterSlots":2,"returnSlots":0},"fun_shapePath":{"entryPoint":15321,"id":10379,"parameterSlots":1,"returnSlots":1},"fun_tier":{"entryPoint":14513,"id":10178,"parameterSlots":1,"returnSlots":1},"fun_toString":{"entryPoint":14889,"id":4955,"parameterSlots":1,"returnSlots":1},"fun_transferFrom":{"entryPoint":12917,"id":1873,"parameterSlots":3,"returnSlots":0},"memory_array_index_access_string":{"entryPoint":14474,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_c818":{"entryPoint":13392,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"9850":[{"length":32,"start":734},{"length":32,"start":8959}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714612faf5750806306fdde0314612f04578063081812fc14612ec5578063095ea7b314612dc457806323b872dd14612dad57806324bbd04914612d8a5780632a55205a14612d015780632d9fff0114612c535780633ccfd60b14612bfa57806342842e0e14612bcc57806342966c6814612a6857806361b8ce8c14612a4a5780636352211e14612a1b57806363bd1d4a146129f45780636817c76c146129d657806370a0823114612965578063715018a61461290a5780637de1e5361461285c5780638a4dcd85146127fa5780638da5cb5b146127d357806395d89b41146126f0578063a0712d68146122b8578063a22cb465146121fb578063a3ff39b214612193578063b88d4fde146120fc578063c1d2b11d14611dac578063c60d7e4614611d83578063c87b56dd14610301578063d5abeb01146102c6578063e985e9c51461026f578063f2fde38b146101d05763f4a0a5281461017f57600080fd5b346101cb5760203660031901126101cb577f525b762709cc2a983aec5ccdfd807a061f993c91090b5bcd7da92ca254976aaa60206004356101be61362b565b80600b55604051908152a1005b600080fd5b346101cb5760203660031901126101cb576101e96130e1565b6101f161362b565b6001600160a01b0380911690811561023e57600854826001600160a01b0319821617600855167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b346101cb5760403660031901126101cb576102886130e1565b6102906130f7565b906001600160a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b346101cb5760003660031901126101cb5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346101cb5760203660031901126101cb5760043560005260026020526103366001600160a01b03604060002054161515613450565b6040516103428161317c565b60405161034e816131b5565b600581527f4d616e676f00000000000000000000000000000000000000000000000000000060208201528152604051610386816131b5565b600581527f4265727279000000000000000000000000000000000000000000000000000000602082015260208201526040516103c1816131b5565b600b81527f447261676f6e6672756974000000000000000000000000000000000000000000602082015260408201526040516103fc816131b5565b600581527f477261706500000000000000000000000000000000000000000000000000000060208201526060820152604051610437816131b5565b600581527f506561636800000000000000000000000000000000000000000000000000000060208201526080820152604051610472816131b5565b600481527f4c696d6500000000000000000000000000000000000000000000000000000000602082015260a08201526040516104ad816131b5565b600481527f506c756d00000000000000000000000000000000000000000000000000000000602082015260c08201526040516104e8816131b5565b600581527f4775617661000000000000000000000000000000000000000000000000000000602082015260e08201526007906105348261052960043561385e565b60201c16809261388a565b5161054060043561349b565b906040519361054e8561317c565b60405161055a816131b5565b8181527f233064313131370000000000000000000000000000000000000000000000000060208201528552604051610591816131b5565b8181527f2331323132313200000000000000000000000000000000000000000000000000602082015260208601526040516105cb816131b5565b8181527f233062306631340000000000000000000000000000000000000000000000000060208201526040860152604051610605816131b5565b8181527f23316131303230000000000000000000000000000000000000000000000000006020820152606086015260405161063f816131b5565b8181527f233066313332300000000000000000000000000000000000000000000000000060208201526080860152604051610679816131b5565b8181527f2331303133313400000000000000000000000000000000000000000000000000602082015260a08601526040516106b3816131b5565b8181527f2330653131313700000000000000000000000000000000000000000000000000602082015260c08601526040516106ed816131b5565b8181527f2331343130313600000000000000000000000000000000000000000000000000602082015260e08601526108fe846040519661072c8861317c565b604051610738816131b5565b8481527f23464637453442000000000000000000000000000000000000000000000000006020820152885260405161076f816131b5565b8481527f2341313642464600000000000000000000000000000000000000000000000000602082015260208901526040516107a9816131b5565b8481527f2346463346413400000000000000000000000000000000000000000000000000602082015260408901526040516107e3816131b5565b8481527f23384235434636000000000000000000000000000000000000000000000000006020820152606089015260405161081d816131b5565b8481527f234646423836420000000000000000000000000000000000000000000000000060208201526080890152604051610857816131b5565b8481527f2337434635433900000000000000000000000000000000000000000000000000602082015260a0890152604051610891816131b5565b8481527f2339423539423600000000000000000000000000000000000000000000000000602082015260c08901526040516108cb816131b5565b8481527f2337464442464600000000000000000000000000000000000000000000000000602082015260e089015261388a565b5193604260ff85161115611d41576001019460ff8611611d115760ff61092a92600197165b169061388a565b5190610935836138b1565b91610941600435613a29565b94610b096045604051976109d360028a61095d602082016134e5565b9361098d8e7f20000000000000000000000000000000000000000000000000000000000000009687815201613574565b7f202300000000000000000000000000000000000000000000000000000000000081526109c38251809360208785019101613099565b0103601d1981018c52018a613209565b6109df60ff8916613a29565b610a236040519b8c937f41200000000000000000000000000000000000000000000000000000000000006020860152610a1a602286016134e5565b90815201613574565b7f2070696563652e20466c61766f723a200000000000000000000000000000000081528751610a59816010840160208c01613099565b7f2e20546965723a2000000000000000000000000000000000000000000000000060108284010152895191610a98838c60206018868601019101613099565b01017f2e2044656c6963696f75736e6573733a200000000000000000000000000000006018820152610ad4825180936020602985019101613099565b017f2f3130302e20416e696d61746564206f6e2d636861696e205356472e00000000602982015203602581018a520188613209565b601460ff86160460080360088111611d115760038110611d39575b600c60ff871604600e0392600e8411611d115760068410611d30575b600f60ff881604600c0391600c8311611d115760058310611d27575b61034860ff8916808202819004821490151715611d11576064610b849160ff8b160204613a29565b610b8d88613bd9565b885160208a0120967fffc66c8548bc388f0156d76251a192b57d2601764d8478982e579b825596b8bc8814978815611ce7575b50610bdc610bd6610bd086613a29565b97613a29565b94613a29565b9715611cd157610dda60de610cc49260405190610bf8826131d1565b60338252610c5260208301917f4d302c2d3230204c362c2d36204c32302c30204c362c36204c302c3230204c2d83527f362c36204c2d32302c30204c2d362c2d36205a000000000000000000000000006040850152613a29565b906040519586937f3c67207472616e73666f726d3d227472616e736c61746528302c2d323030292260208601527f3e000000000000000000000000000000000000000000000000000000000000006040860152681e3830ba3410321e9160b91b6041860152518092604a860190613099565b82017f222066696c6c3d22236666666666666430223e00000000000000000000000000604a8201527f3c616e696d6174655472616e73666f726d206174747269627574654e616d653d605d8201527f227472616e73666f726d2220747970653d22726f74617465222066726f6d3d22607d8201527f30203020302220746f3d223336302030203022206475723d2200000000000000609d820152610d7282518093602060b685019101613099565b017f732220726570656174436f756e743d22696e646566696e697465222f3e00000060b68201527f3c2f706174683e0000000000000000000000000000000000000000000000000060d3820152631e17b39f60e11b60da8201520360be810184520182613209565b610de5600435613a29565b9585610df360ff8e16613a29565b956040519a8b9a8b94602086017f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f32309052604086017f30302f737667222077696474683d223130303022206865696768743d223130309052606086017f30223e00000000000000000000000000000000000000000000000000000000009052606386017f3c646566733e00000000000000000000000000000000000000000000000000009052606986017f3c7374796c653e40666f6e742d666163657b666f6e742d66616d696c793a496e9052608986017f7465723b7372633a6c6f63616c28496e746572293b7d202e747b666f6e742d66905260a986017f616d696c793a496e7465722c73797374656d2d75692c73616e732d7365726966905260c986017f3b66696c6c3a236666667d3c2f7374796c653e00000000000000000000000000905260dc86017f3c72616469616c4772616469656e742069643d2267223e000000000000000000905260f386017f3c73746f70206f66667365743d223025222073746f702d636f6c6f723d220000905261011190855160208701978184820190610f9c918b613099565b019182017f222073746f702d6f7061636974793d22302e3935223e0000000000000000000090527f3c616e696d617465206174747269627574654e616d653d226f66667365742220908161012784015261014783017f76616c7565733d2230253b3230253b302522206475723d220000000000000000905261015f9281519182858301916020019161102d92613099565b01917f732220726570656174436f756e743d22696e646566696e697465222f3e000000958680928501527f3c2f73746f703e00000000000000000000000000000000000000000000000000928361017c8601527f3c73746f70206f66667365743d2231303025222073746f702d636f6c6f723d2294856101838201526101a39951908b828c83016110bd92613099565b7f222073746f702d6f7061636974793d22302e3132222f3e0000000000000000009101998a01527f3c2f72616469616c4772616469656e743e0000000000000000000000000000006101ba8a01527f3c6c696e6561724772616469656e742069643d227368696d6d6572222078313d6101cb8a01527f223025222079313d223025222078323d2231303025222079323d223025223e006101eb8a01527f3c73746f70206f66667365743d223025222073746f702d636f6c6f723d22236661020a8a01527f66666666663230222f3e0000000000000000000000000000000000000000000061022a8a01527f3c73746f70206f66667365743d22353025222073746f702d636f6c6f723d22236102348a01527f6666666666663630223e000000000000000000000000000000000000000000006102548a015261025e8901527f76616c7565733d2230253b3130302522206475723d220000000000000000000061027e890152805161029498909161123c9083908b840190602001613099565b01968701526102b18601526102b88501527f236666666666663230222f3e00000000000000000000000000000000000000006102d88501527f3c2f6c696e6561724772616469656e743e0000000000000000000000000000006102e48501527f3c2f646566733e000000000000000000000000000000000000000000000000006102f58501527f3c726563742077696474683d223130302522206865696768743d2231303025226102fc8501527f2072783d223438222066696c6c3d22000000000000000000000000000000000061031c850152805161032b94909161132a90839087840190602001613099565b7f222f3e00000000000000000000000000000000000000000000000000000000009101938401527f3c67207472616e73666f726d3d227472616e736c617465283530302c3532302961032e8401527f223e00000000000000000000000000000000000000000000000000000000000061034e8401527f3c673e00000000000000000000000000000000000000000000000000000000006103508401527f3c636972636c6520723d22333630222066696c6c3d2275726c28236729223e006103538401527f3c616e696d6174655472616e73666f726d206174747269627574654e616d653d6103728401527f227472616e73666f726d2220747970653d227363616c65222076616c7565733d6103928401527f22313b312e30353b3122206475723d22000000000000000000000000000000006103b284015280516103c293909161147c90839086840190602001613099565b01918201526103df81017f3c2f636972636c653e00000000000000000000000000000000000000000000009052631e17b39f60e11b93846103e88301526103ec8201681e3830ba3410321e9160b91b90526103f5918151918284830191602001916114e692613099565b019081017f22207472616e73666f726d3d227472616e736c617465282d3530302c2d353230905261041581017f29222066696c6c3d220000000000000000000000000000000000000000000000905261041e9651918288830161154892613099565b019485017f22206f7061636974793d22302e3138222f3e000000000000000000000000000090526104309481519182878301916020019161158892613099565b01938401527f3c7465787420783d2238302220793d223230302220636c6173733d22742220666104348401527f6f6e742d73697a653d22363422206f7061636974793d22302e39223e000000006104548401528651610470936115f18286830160208c01613099565b01917f202d2000000000000000000000000000000000000000000000000000000000008094840152610473928951908481018260208d019161163292613099565b01927f3c2f746578743e000000000000000000000000000000000000000000000000009586809286015261047a85017f3c7465787420783d2238302220793d223238302220636c6173733d2274222066905261049a85017f6f6e742d73697a653d22333622206f7061636974793d22302e36223e2300000090526104b7948151918287830191602001916116c592613099565b01938401527f3c7465787420783d2238302220793d223730302220636c6173733d22742220666104be8401527f6f6e742d73697a653d22323822206f7061636974793d22302e3835223e44656c6104de8401527f6963696f75736e657373200000000000000000000000000000000000000000006104fe840152805161050993909161175990839086840190602001613099565b7f2f3130303c2f746578743e0000000000000000000000000000000000000000009101928301527f3c7265637420783d2238302220793d22373230222077696474683d22383430226105148301527f206865696768743d223336222072783d223138222066696c6c3d2223666666666105348301527f66663230222f3e000000000000000000000000000000000000000000000000006105548301527f3c7265637420783d2238302220793d22373230222077696474683d220000000061055b830152805161057792909161183690839085840190602001613099565b7f22206865696768743d223336222072783d223138222066696c6c3d2275726c289101918201527f237368696d6d657229222f3e00000000000000000000000000000000000000006105978201527f3c7265637420783d2238302220793d22383230222072783d22313422207769646105a38201527f74683d2238343022206865696768743d223536222066696c6c3d2223666666666105c38201527f66663130222f3e000000000000000000000000000000000000000000000000006105e38201527f3c7465787420783d223130302220793d223836302220636c6173733d227422206105ea8201527f666f6e742d73697a653d22323822206f7061636974793d22302e39223e00000061060a8201526119549061062701613574565b90815284519061196b826003830160208901613099565b01906003820152600a81017f3c2f7376673e0000000000000000000000000000000000000000000000000000905203600f19810182526010016119ae9082613209565b6119b6613b7a565b6119bf91613eda565b9260ff166119cc90613a29565b92604051958695602087017f7b226e616d65223a220000000000000000000000000000000000000000000000905280519081602989019160200191611a1092613099565b8601602981017f222c226465736372697074696f6e223a22000000000000000000000000000000905281519182603a83019160200191611a4f92613099565b01603a81017f222c22696d616765223a22646174613a696d6167652f7376672b786d6c3b62619052605a81017f736536342c000000000000000000000000000000000000000000000000000000905281519182605f83019160200191611ab492613099565b01605f81017f222c2261747472696275746573223a5b000000000000000000000000000000009052606f81017f7b2274726169745f74797065223a22466c61766f72222c2276616c7565223a22905281519182608f83019160200191611b1992613099565b01907f227d2c00000000000000000000000000000000000000000000000000000000009182608f820152609281017f7b2274726169745f74797065223a2254696572222c2276616c7565223a22000090528151918260b083019160200191611b8092613099565b019060b082015260b381017f7b2274726169745f74797065223a2244656c6963696f75736e657373222c2276905260d381017f616c7565223a000000000000000000000000000000000000000000000000000090528151918260d983019160200191611beb92613099565b0160d981017f7d00000000000000000000000000000000000000000000000000000000000000905260da81017f5d7d00000000000000000000000000000000000000000000000000000000000090520360bc8101825260dc01611c4e9082613209565b611c56613b7a565b611c5f91613eda565b6040518091602082017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000905280519081603d84019160200191611ca192613099565b810103601d81018252603d01611cb79082613209565b60405180916020825260208201611ccd916130bc565b0390f35b50604051611cde81613199565b60008152610dda565b7f181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a3101497508d610bc0565b634e487b7160e01b600052601160045260246000fd5b60059250610b5c565b60069350610b40565b506003610b24565b602160ff85161115611d68576002019460ff8611611d115760ff61092a9260019716610923565b6003019460ff8611611d115760ff61092a9260019716610923565b346101cb5760203660031901126101cb576020611da160043561349b565b60ff60405191168152f35b346101cb5760403660031901126101cb5767ffffffffffffffff6004358181116101cb57611dde903690600401613247565b6024358381116101cb57611df6903690600401613247565b611dfe61362b565b848311611ff357611e10600d54613142565b94601f9586811161209a575b5083600087821160011461201457600091612009575b508460011b906000198660031b1c191617600d555b8111611ff357611e58600e54613142565b858111611f91575b506000948111600114611ee7579081611ed7927f2c7ea2c532cc0dad6d6baad5a149d62033f0f3fa2e619de5a0296268f78611c396600091611edc575b508160011b906000198360031b1c191617600e555b611ec960405195869560408752604087019161342f565b91848303602086015261342f565b0390a1005b905082013587611e9d565b601f19811694600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd9560005b818110611f795750958291611ed794937f2c7ea2c532cc0dad6d6baad5a149d62033f0f3fa2e619de5a0296268f78611c39810611f5f575b5050600181811b01600e55611eb2565b830135600019600384901b60f8161c191690558680611f4f565b84830135885560019097019660209283019201611f17565b600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd8680840160051c82019260208510611fea575b0160051c01905b818110611fde5750611e60565b60008155600101611fd1565b92508192611fca565b634e487b7160e01b600052604160045260246000fd5b905085013587611e32565b9050601f19851690600d600052857fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb59260005b81811061207f575010612065575b5050600184811b01600d55611e47565b860135600019600387901b60f8161c191690558680612055565b89840135855560019094019360209384019389935001612047565b600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb58780870160051c820192602088106120f3575b0160051c01905b8181106120e75750611e1c565b600081556001016120da565b925081926120d3565b346101cb5760803660031901126101cb576121156130e1565b61211d6130f7565b906044356064359267ffffffffffffffff84116101cb57366023850112156101cb5783600401359261214e8461322b565b9361215c6040519586613209565b80855236602482880101116101cb5760208160009260246121919901838901378601015261218b838383613275565b3361373a565b005b346101cb5760203660031901126101cb577ffcbb1571f6f637b3645e200ff18fbcb7fc2f8db33547e2f582146a51246e104360206001600160a01b036121d76130e1565b6121df61362b565b16806001600160a01b0319600c541617600c55604051908152a1005b346101cb5760403660031901126101cb576122146130e1565b602435908115158092036101cb576001600160a01b031690811561228757336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b602482604051907f5b08ba180000000000000000000000000000000000000000000000000000000082526004820152fd5b60203660031901126101cb576002600954146126c657600260095560ff600f54161561268257600435151580612675575b1561263157600a546004358101809111611d11577f0000000000000000000000000000000000000000000000000000000000000000106125ed57612331600435600b5461341c565b34106125a95760005b600435811061236b5747612350575b6001600955005b6123666001600160a01b03600c5416479061369f565b612349565b600a546040519061237b82613199565b600082523315612591578060005260026020526001600160a01b0360406000205416818115159182612555575b3361253b575b8160005260026020526040600020336001600160a01b031982541617905533907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a461250a57333b612411575b505060019081600a5401600a550161233a565b61244d916020916040519384928392630a85bd0160e11b84523360048501526000602485015260448401526080606484015260848301906130bc565b03816000335af1600091816124c5575b5061248e5761246a61366f565b80519081612489576024604051633250574960e11b8152336004820152fd5b602001fd5b6001600160e01b0319630a85bd0160e11b9116036124ae576001826123fe565b6024604051633250574960e11b8152336004820152fd5b9091506020813d602011612502575b816124e160209383613209565b810103126101cb57516001600160e01b0319811681036101cb57908361245d565b3d91506124d4565b60246040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b3360005260036020526040600020600181540190556123ae565b61257682600052600460205260406000206001600160a01b03198154169055565b806000526003602052604060002060001981540190556123a8565b6024604051633250574960e11b815260006004820152fd5b606460405162461bcd60e51b815260206004820152601060248201527f696e73756666696369656e7420455448000000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600860248201527f736f6c64206f75740000000000000000000000000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600860248201527f71747920312e2e350000000000000000000000000000000000000000000000006044820152fd5b50600560043511156122e9565b606460405162461bcd60e51b815260206004820152600b60248201527f4d696e7420636c6f7365640000000000000000000000000000000000000000006044820152fd5b60046040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b346101cb5760003660031901126101cb5760405160006001826001549261271684613142565b92838352602094856001821691826000146127b3575050600114612756575b5061274292500383613209565b611ccd6040519282849384528301906130bc565b84915060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6906000915b85831061279b575050612742935082010185612735565b80548389018501528794508693909201918101612784565b60ff19168582015261274295151560051b85010192508791506127359050565b346101cb5760003660031901126101cb5760206001600160a01b0360085416604051908152f35b346101cb5760203660031901126101cb576004358015158091036101cb5760207f8ba9af8fef251a59a57bb383a518ff12b3c2770c23cf0ab9a59a9e2390e08f439161284461362b565b60ff19600f541660ff821617600f55604051908152a1005b346101cb5760003660031901126101cb57604051600e5460008261287f83613142565b91828252602093600190856001821691826000146127b35750506001146128ad575061274292500383613209565b849150600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd906000915b8583106128f2575050612742935082010185612735565b805483890185015287945086939092019181016128db565b346101cb5760003660031901126101cb5761292361362b565b60006001600160a01b036008546001600160a01b03198116600855167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101cb5760203660031901126101cb576001600160a01b036129866130e1565b1680156129a55760005260036020526020604060002054604051908152f35b60246040517f89c62b6400000000000000000000000000000000000000000000000000000000815260006004820152fd5b346101cb5760003660031901126101cb576020600b54604051908152f35b346101cb5760003660031901126101cb5760206001600160a01b03600c5416604051908152f35b346101cb5760203660031901126101cb576020612a396004356135f0565b6001600160a01b0360405191168152f35b346101cb5760003660031901126101cb576020600a54604051908152f35b346101cb576020806003193601126101cb576004359081600052600281526001600160a01b03908160406000205416913315159081612b24575b505090600260009282612aec575b84845252604082206001600160a01b031981541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4005b612b0d85600052600460205260406000206001600160a01b03198154169055565b828452600381526040842084198154019055612ab0565b81612b74575b5015612b37578380612aa2565b50612b545760249060405190637e27328960e01b82526004820152fd5b60405163177e802f60e01b81523360048201526024810191909152604490fd5b33841491508115612ba8575b8115612b8e575b5084612b2a565b905083600052600482523390604060002054161484612b87565b90508260005260058252604060002033600052825260ff6040600020541690612b80565b346101cb57612191612bdd3661310d565b9060405192612beb84613199565b6000845261218b838383613275565b346101cb5760003660031901126101cb57612c1361362b565b612191476001600160a01b03600c5416807f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b656020604051858152a261369f565b346101cb5760003660031901126101cb57604051600d54600082612c7683613142565b91828252602093600190856001821691826000146127b3575050600114612ca4575061274292500383613209565b849150600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5906000915b858310612ce9575050612742935082010185612735565b80548389018501528794508693909201918101612cd2565b346101cb5760403660031901126101cb5760043560005260076020526040600020546001600160a01b038082169160a01c908215612d75575b50612d586bffffffffffffffffffffffff612710921660243561341c565b604080516001600160a01b03949094168452919004602083015290f35b600654908116925060a01c9050612d58612d3a565b346101cb5760003660031901126101cb57602060ff600f54166040519015158152f35b346101cb57612191612dbe3661310d565b91613275565b346101cb5760403660031901126101cb57612ddd6130e1565b602435612de9816135f0565b33151580612eb2575b80612e84575b612e545781906001600160a01b03809416938491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a460005260046020526040600020906001600160a01b0319825416179055600080f35b60246040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152336004820152fd5b506001600160a01b038116600052600560205260406000203360005260205260ff6040600020541615612df8565b50336001600160a01b0382161415612df2565b346101cb5760203660031901126101cb57600435612ee2816135f0565b50600052600460205260206001600160a01b0360406000205416604051908152f35b346101cb5760003660031901126101cb57604051600080549082612f2783613142565b91828252602093600190856001821691826000146127b3575050600114612f55575061274292500383613209565b6000808052859250907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b858310612f97575050612742935082010185612735565b80548389018501528794508693909201918101612f80565b346101cb5760203660031901126101cb57600435906001600160e01b031982168092036101cb57817f2a55205a000000000000000000000000000000000000000000000000000000006020931490811561300b575b5015158152f35b7f80ac58cd0000000000000000000000000000000000000000000000000000000081149150811561306f575b8115613045575b5083613004565b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150148361303e565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150613037565b60005b8381106130ac5750506000910152565b818101518382015260200161309c565b906020916130d581518092818552858086019101613099565b601f01601f1916010190565b600435906001600160a01b03821682036101cb57565b602435906001600160a01b03821682036101cb57565b60609060031901126101cb576001600160a01b039060043582811681036101cb579160243590811681036101cb579060443590565b90600182811c92168015613172575b602083101461315c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691613151565b610100810190811067ffffffffffffffff821117611ff357604052565b6020810190811067ffffffffffffffff821117611ff357604052565b6040810190811067ffffffffffffffff821117611ff357604052565b6060810190811067ffffffffffffffff821117611ff357604052565b6080810190811067ffffffffffffffff821117611ff357604052565b90601f8019910116810190811067ffffffffffffffff821117611ff357604052565b67ffffffffffffffff8111611ff357601f01601f191660200190565b9181601f840112156101cb5782359167ffffffffffffffff83116101cb57602083818601950101116101cb57565b90916001600160a01b0380931692831561259157600092828452826020956002875260409684888820541696879133151580613383575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928461334b575b858352600381528b83206001815401905586835252898120846001600160a01b031982541617905580a416928383036133115750505050565b6064945051927f64283d7b000000000000000000000000000000000000000000000000000000008452600484015260248301526044820152fd5b61336c87600052600460205260406000206001600160a01b03198154169055565b848352600381528b832080546000190190556132d8565b919394509150806133db575b1561339f578592918791386132ac565b8786886133bc576024915190637e27328960e01b82526004820152fd5b905163177e802f60e01b81523360048201526024810191909152604490fd5b503387148015613400575b8061338f575085825260048152338589842054161461338f565b5086825260058152878220338352815260ff88832054166133e6565b81810292918115918404141715611d1157565b908060209392818452848401376000828201840152601f01601f1916010190565b1561345757565b606460405162461bcd60e51b815260206004820152600260248201527f4e410000000000000000000000000000000000000000000000000000000000006044820152fd5b60656134ca60ff928060005260026020526134c56001600160a01b03604060002054161515613450565b61385e565b0616600881106134d75790565b60080160ff8111611d115790565b600d54600092916134f582613142565b91600190818116908115613561575060011461351057505050565b9091929350600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5906000915b84831061354e575050500190565b8181602092548587015201920191613540565b60ff191683525050811515909102019150565b600e546000929161358482613142565b91600190818116908115613561575060011461359f57505050565b9091929350600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd906000915b8483106135dd575050500190565b81816020925485870152019201916135cf565b8060005260026020526001600160a01b0360406000205416908115613613575090565b60249060405190637e27328960e01b82526004820152fd5b6001600160a01b0360085416330361363f57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b3d1561369a573d906136808261322b565b9161368e6040519384613209565b82523d6000602084013e565b606090565b8147106137025760008080936001600160a01b038294165af16136c061366f565b90156136c95750565b8051156136d857602081519101fd5b60046040517fd6bda275000000000000000000000000000000000000000000000000000000008152fd5b6044824790604051917fcf47918100000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b9293823b61374a575b5050505050565b61378f906001600160a01b038094169560405194859481630a85bd0160e11b9889885216600487015216602485015260448401526080606484015260848301906130bc565b03906020816000938185885af19082908261380e575b50506137dc57826137b461366f565b80519190826137d55760248260405190633250574960e11b82526004820152fd5b6020915001fd5b6001600160e01b031916036137f657503880808080613743565b60249060405190633250574960e11b82526004820152fd5b909192506020813d602011613856575b8161382b60209383613209565b810103126138525751906001600160e01b03198216820361384f57509038806137a5565b80fd5b5080fd5b3d915061381e565b60405160208101913060601b8352603482015246605482015260548152613884816131ed565b51902090565b90600881101561389b5760051b0190565b634e487b7160e01b600052603260045260246000fd5b60ff16605a8110156139bd57604681101561398357603281101561394957601e1115613910576040516138e3816131b5565b600381527f5261770000000000000000000000000000000000000000000000000000000000602082015290565b60405161391c816131b5565b600581527f54616e6779000000000000000000000000000000000000000000000000000000602082015290565b50604051613956816131b5565b600581527f4a75696379000000000000000000000000000000000000000000000000000000602082015290565b50604051613990816131b5565b600581527f5072696d65000000000000000000000000000000000000000000000000000000602082015290565b506040516139ca816131b5565b600981527f4c6567656e646172790000000000000000000000000000000000000000000000602082015290565b90613a018261322b565b613a0e6040519182613209565b8281528092613a1f601f199161322b565b0190602036910137565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015613b6c575b506d04ee2d6d415b85acef810000000080831015613b5d575b50662386f26fc1000080831015613b4e575b506305f5e10080831015613b3f575b5061271080831015613b30575b506064821015613b20575b600a80921015613b16575b600190816021613ac1600187016139f7565b95860101905b613ad3575b5050505090565b600019019083907f30313233343536373839616263646566000000000000000000000000000000008282061a835304918215613b1157919082613ac7565b613acc565b9160010191613aaf565b9190606460029104910191613aa4565b60049193920491019138613a99565b60089193920491019138613a8c565b60109193920491019138613a7d565b60209193920491019138613a6b565b604093508104915038613a52565b60405190613b87826131d1565b604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b80516020918201207f7363a24996de434fc886f1474dd74d955980fa72b926b9c955f94f6698ebf6868103613c4157507f4d3530302c323430204c3332302c373230204c3638302c373230205a0000000060405191613c37836131b5565b601c835282015290565b7f1242766c8824991355aaadec4d656d943025e70fe896230af412f93b3f92ba088103613cc757507f4d3530302c323430204c3330302c353230204c3530302c383030204c3730302c60405191613c97836131d1565b602583528201527f353230205a000000000000000000000000000000000000000000000000000000604082015290565b7f1664b525956d22f8f0ad35bd22f34261df9b15fc7ba28020f9866ac08cbbc90f8103613d7357507f4d3530302c32363020433336302c333030203332302c353630203436302c373260405191613d1d836131ed565b605583528201527f3020433538302c383230203732302c373030203730302c35323020433638302c60408201527f333630203634302c333030203530302c323630205a0000000000000000000000606082015290565b7fffc66c8548bc388f0156d76251a192b57d2601764d8478982e579b825596b8bc03613e1d577f4d3530302c323430204c3534302c343230204c3732302c343230204c3538302c60405191613dc7836131ed565b605b83528201527f353230204c3632302c373030204c3530302c363030204c3338302c373030204c60408201527f3432302c353230204c3238302c343230204c3436302c343230205a0000000000606082015290565b6040519060a082019082821067ffffffffffffffff831117611ff3577f4d3530302c323430204c3536302c343230204c3732302c333830204c3630302c91604052606d83528201527f353030204c3732302c363230204c3536302c353830204c3530302c373630204c60408201527f3434302c353830204c3238302c363230204c3430302c353030204c3238302c3360608201527f3830204c3434302c343230205a00000000000000000000000000000000000000608082015290565b919091805115613fdf5780519260029160028501809511611d115760038095047f3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81168103611d1157613f329060029694961b6139f7565b926020840192829183518401976020890192835194600085525b8a8110613f9257505050506003939495965052510680600114613f7f57600214613f74575090565b603d90600019015390565b50603d9081600019820153600119015390565b836004919b989b019a8b51600190603f9082828260121c16870101518453828282600c1c16870101518385015382828260061c168701015187850153168401015185820153019699613f4c565b509050604051613fee81613199565b600081529056fea26469706673582212200d1a7bd9231abca41ad594b76412577fd87c8de1c6989be7aeb1edd5b9a7812464736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x2FAF JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2F04 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2EC5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2DC4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DAD JUMPI DUP1 PUSH4 0x24BBD049 EQ PUSH2 0x2D8A JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x2D01 JUMPI DUP1 PUSH4 0x2D9FFF01 EQ PUSH2 0x2C53 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2BFA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2BCC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A68 JUMPI DUP1 PUSH4 0x61B8CE8C EQ PUSH2 0x2A4A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2A1B JUMPI DUP1 PUSH4 0x63BD1D4A EQ PUSH2 0x29F4 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x29D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2965 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x290A JUMPI DUP1 PUSH4 0x7DE1E536 EQ PUSH2 0x285C JUMPI DUP1 PUSH4 0x8A4DCD85 EQ PUSH2 0x27FA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26F0 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x22B8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x21FB JUMPI DUP1 PUSH4 0xA3FF39B2 EQ PUSH2 0x2193 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x20FC JUMPI DUP1 PUSH4 0xC1D2B11D EQ PUSH2 0x1DAC JUMPI DUP1 PUSH4 0xC60D7E46 EQ PUSH2 0x1D83 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D0 JUMPI PUSH4 0xF4A0A528 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH32 0x525B762709CC2A983AEC5CCDFD807A061F993C91090B5BCD7DA92CA254976AAA PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x1BE PUSH2 0x362B JUMP JUMPDEST DUP1 PUSH1 0xB SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x1E9 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x362B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x23E JUMPI PUSH1 0x8 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND OR PUSH1 0x8 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x288 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x30F7 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x336 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 DUP2 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x4D616E676F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x386 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x4265727279000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3C1 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0xB DUP2 MSTORE PUSH32 0x447261676F6E6672756974000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3FC DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x4772617065000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x437 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x5065616368000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x472 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x4C696D6500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x4AD DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x506C756D00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x4E8 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x4775617661000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x7 SWAP1 PUSH2 0x534 DUP3 PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x385E JUMP JUMPDEST PUSH1 0x20 SHR AND DUP1 SWAP3 PUSH2 0x388A JUMP JUMPDEST MLOAD PUSH2 0x540 PUSH1 0x4 CALLDATALOAD PUSH2 0x349B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x54E DUP6 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55A DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2330643131313700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP6 MSTORE PUSH1 0x40 MLOAD PUSH2 0x591 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2331323132313200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x5CB DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2330623066313400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x605 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2331613130323000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x63F DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2330663133323000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x679 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2331303133313400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x6B3 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2330653131313700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x6ED DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH32 0x2331343130313600000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x8FE DUP5 PUSH1 0x40 MLOAD SWAP7 PUSH2 0x72C DUP9 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x738 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2346463745344200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP9 MSTORE PUSH1 0x40 MLOAD PUSH2 0x76F DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2341313642464600000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x7A9 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2346463346413400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x7E3 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2338423543463600000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x81D DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2346464238364200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x857 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2337434635433900000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x891 DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2339423539423600000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x8CB DUP2 PUSH2 0x31B5 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH32 0x2337464442464600000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x388A JUMP JUMPDEST MLOAD SWAP4 PUSH1 0x42 PUSH1 0xFF DUP6 AND GT ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x1 ADD SWAP5 PUSH1 0xFF DUP7 GT PUSH2 0x1D11 JUMPI PUSH1 0xFF PUSH2 0x92A SWAP3 PUSH1 0x1 SWAP8 AND JUMPDEST AND SWAP1 PUSH2 0x388A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x935 DUP4 PUSH2 0x38B1 JUMP JUMPDEST SWAP2 PUSH2 0x941 PUSH1 0x4 CALLDATALOAD PUSH2 0x3A29 JUMP JUMPDEST SWAP5 PUSH2 0xB09 PUSH1 0x45 PUSH1 0x40 MLOAD SWAP8 PUSH2 0x9D3 PUSH1 0x2 DUP11 PUSH2 0x95D PUSH1 0x20 DUP3 ADD PUSH2 0x34E5 JUMP JUMPDEST SWAP4 PUSH2 0x98D DUP15 PUSH32 0x2000000000000000000000000000000000000000000000000000000000000000 SWAP7 DUP8 DUP2 MSTORE ADD PUSH2 0x3574 JUMP JUMPDEST PUSH32 0x2023000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x9C3 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x3099 JUMP JUMPDEST ADD SUB PUSH1 0x1D NOT DUP2 ADD DUP13 MSTORE ADD DUP11 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x9DF PUSH1 0xFF DUP10 AND PUSH2 0x3A29 JUMP JUMPDEST PUSH2 0xA23 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP4 PUSH32 0x4120000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xA1A PUSH1 0x22 DUP7 ADD PUSH2 0x34E5 JUMP JUMPDEST SWAP1 DUP2 MSTORE ADD PUSH2 0x3574 JUMP JUMPDEST PUSH32 0x2070696563652E20466C61766F723A2000000000000000000000000000000000 DUP2 MSTORE DUP8 MLOAD PUSH2 0xA59 DUP2 PUSH1 0x10 DUP5 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x3099 JUMP JUMPDEST PUSH32 0x2E20546965723A20000000000000000000000000000000000000000000000000 PUSH1 0x10 DUP3 DUP5 ADD ADD MSTORE DUP10 MLOAD SWAP2 PUSH2 0xA98 DUP4 DUP13 PUSH1 0x20 PUSH1 0x18 DUP7 DUP7 ADD ADD SWAP2 ADD PUSH2 0x3099 JUMP JUMPDEST ADD ADD PUSH32 0x2E2044656C6963696F75736E6573733A20000000000000000000000000000000 PUSH1 0x18 DUP3 ADD MSTORE PUSH2 0xAD4 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 PUSH1 0x29 DUP6 ADD SWAP2 ADD PUSH2 0x3099 JUMP JUMPDEST ADD PUSH32 0x2F3130302E20416E696D61746564206F6E2D636861696E205356472E00000000 PUSH1 0x29 DUP3 ADD MSTORE SUB PUSH1 0x25 DUP2 ADD DUP11 MSTORE ADD DUP9 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x14 PUSH1 0xFF DUP7 AND DIV PUSH1 0x8 SUB PUSH1 0x8 DUP2 GT PUSH2 0x1D11 JUMPI PUSH1 0x3 DUP2 LT PUSH2 0x1D39 JUMPI JUMPDEST PUSH1 0xC PUSH1 0xFF DUP8 AND DIV PUSH1 0xE SUB SWAP3 PUSH1 0xE DUP5 GT PUSH2 0x1D11 JUMPI PUSH1 0x6 DUP5 LT PUSH2 0x1D30 JUMPI JUMPDEST PUSH1 0xF PUSH1 0xFF DUP9 AND DIV PUSH1 0xC SUB SWAP2 PUSH1 0xC DUP4 GT PUSH2 0x1D11 JUMPI PUSH1 0x5 DUP4 LT PUSH2 0x1D27 JUMPI JUMPDEST PUSH2 0x348 PUSH1 0xFF DUP10 AND DUP1 DUP3 MUL DUP2 SWAP1 DIV DUP3 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x64 PUSH2 0xB84 SWAP2 PUSH1 0xFF DUP12 AND MUL DIV PUSH2 0x3A29 JUMP JUMPDEST PUSH2 0xB8D DUP9 PUSH2 0x3BD9 JUMP JUMPDEST DUP9 MLOAD PUSH1 0x20 DUP11 ADD KECCAK256 SWAP7 PUSH32 0xFFC66C8548BC388F0156D76251A192B57D2601764D8478982E579B825596B8BC DUP9 EQ SWAP8 DUP9 ISZERO PUSH2 0x1CE7 JUMPI JUMPDEST POP PUSH2 0xBDC PUSH2 0xBD6 PUSH2 0xBD0 DUP7 PUSH2 0x3A29 JUMP JUMPDEST SWAP8 PUSH2 0x3A29 JUMP JUMPDEST SWAP5 PUSH2 0x3A29 JUMP JUMPDEST SWAP8 ISZERO PUSH2 0x1CD1 JUMPI PUSH2 0xDDA PUSH1 0xDE PUSH2 0xCC4 SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xBF8 DUP3 PUSH2 0x31D1 JUMP JUMPDEST PUSH1 0x33 DUP3 MSTORE PUSH2 0xC52 PUSH1 0x20 DUP4 ADD SWAP2 PUSH32 0x4D302C2D3230204C362C2D36204C32302C30204C362C36204C302C3230204C2D DUP4 MSTORE PUSH32 0x362C36204C2D32302C30204C2D362C2D36205A00000000000000000000000000 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x3A29 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH32 0x3C67207472616E73666F726D3D227472616E736C61746528302C2D3230302922 PUSH1 0x20 DUP7 ADD MSTORE PUSH32 0x3E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP7 ADD MSTORE PUSH9 0x1E3830BA3410321E91 PUSH1 0xB9 SHL PUSH1 0x41 DUP7 ADD MSTORE MLOAD DUP1 SWAP3 PUSH1 0x4A DUP7 ADD SWAP1 PUSH2 0x3099 JUMP JUMPDEST DUP3 ADD PUSH32 0x222066696C6C3D22236666666666666430223E00000000000000000000000000 PUSH1 0x4A DUP3 ADD MSTORE PUSH32 0x3C616E696D6174655472616E73666F726D206174747269627574654E616D653D PUSH1 0x5D DUP3 ADD MSTORE PUSH32 0x227472616E73666F726D2220747970653D22726F74617465222066726F6D3D22 PUSH1 0x7D DUP3 ADD MSTORE PUSH32 0x30203020302220746F3D223336302030203022206475723D2200000000000000 PUSH1 0x9D DUP3 ADD MSTORE PUSH2 0xD72 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 PUSH1 0xB6 DUP6 ADD SWAP2 ADD PUSH2 0x3099 JUMP JUMPDEST ADD PUSH32 0x732220726570656174436F756E743D22696E646566696E697465222F3E000000 PUSH1 0xB6 DUP3 ADD MSTORE PUSH32 0x3C2F706174683E00000000000000000000000000000000000000000000000000 PUSH1 0xD3 DUP3 ADD MSTORE PUSH4 0x1E17B39F PUSH1 0xE1 SHL PUSH1 0xDA DUP3 ADD MSTORE SUB PUSH1 0xBE DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0xDE5 PUSH1 0x4 CALLDATALOAD PUSH2 0x3A29 JUMP JUMPDEST SWAP6 DUP6 PUSH2 0xDF3 PUSH1 0xFF DUP15 AND PUSH2 0x3A29 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 SWAP5 PUSH1 0x20 DUP7 ADD PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 SWAP1 MSTORE PUSH1 0x40 DUP7 ADD PUSH32 0x30302F737667222077696474683D223130303022206865696768743D22313030 SWAP1 MSTORE PUSH1 0x60 DUP7 ADD PUSH32 0x30223E0000000000000000000000000000000000000000000000000000000000 SWAP1 MSTORE PUSH1 0x63 DUP7 ADD PUSH32 0x3C646566733E0000000000000000000000000000000000000000000000000000 SWAP1 MSTORE PUSH1 0x69 DUP7 ADD PUSH32 0x3C7374796C653E40666F6E742D666163657B666F6E742D66616D696C793A496E SWAP1 MSTORE PUSH1 0x89 DUP7 ADD PUSH32 0x7465723B7372633A6C6F63616C28496E746572293B7D202E747B666F6E742D66 SWAP1 MSTORE PUSH1 0xA9 DUP7 ADD PUSH32 0x616D696C793A496E7465722C73797374656D2D75692C73616E732D7365726966 SWAP1 MSTORE PUSH1 0xC9 DUP7 ADD PUSH32 0x3B66696C6C3A236666667D3C2F7374796C653E00000000000000000000000000 SWAP1 MSTORE PUSH1 0xDC DUP7 ADD PUSH32 0x3C72616469616C4772616469656E742069643D2267223E000000000000000000 SWAP1 MSTORE PUSH1 0xF3 DUP7 ADD PUSH32 0x3C73746F70206F66667365743D223025222073746F702D636F6C6F723D220000 SWAP1 MSTORE PUSH2 0x111 SWAP1 DUP6 MLOAD PUSH1 0x20 DUP8 ADD SWAP8 DUP2 DUP5 DUP3 ADD SWAP1 PUSH2 0xF9C SWAP2 DUP12 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP2 DUP3 ADD PUSH32 0x222073746F702D6F7061636974793D22302E3935223E00000000000000000000 SWAP1 MSTORE PUSH32 0x3C616E696D617465206174747269627574654E616D653D226F66667365742220 SWAP1 DUP2 PUSH2 0x127 DUP5 ADD MSTORE PUSH2 0x147 DUP4 ADD PUSH32 0x76616C7565733D2230253B3230253B302522206475723D220000000000000000 SWAP1 MSTORE PUSH2 0x15F SWAP3 DUP2 MLOAD SWAP2 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x102D SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP2 PUSH32 0x732220726570656174436F756E743D22696E646566696E697465222F3E000000 SWAP6 DUP7 DUP1 SWAP3 DUP6 ADD MSTORE PUSH32 0x3C2F73746F703E00000000000000000000000000000000000000000000000000 SWAP3 DUP4 PUSH2 0x17C DUP7 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D2231303025222073746F702D636F6C6F723D22 SWAP5 DUP6 PUSH2 0x183 DUP3 ADD MSTORE PUSH2 0x1A3 SWAP10 MLOAD SWAP1 DUP12 DUP3 DUP13 DUP4 ADD PUSH2 0x10BD SWAP3 PUSH2 0x3099 JUMP JUMPDEST PUSH32 0x222073746F702D6F7061636974793D22302E3132222F3E000000000000000000 SWAP2 ADD SWAP10 DUP11 ADD MSTORE PUSH32 0x3C2F72616469616C4772616469656E743E000000000000000000000000000000 PUSH2 0x1BA DUP11 ADD MSTORE PUSH32 0x3C6C696E6561724772616469656E742069643D227368696D6D6572222078313D PUSH2 0x1CB DUP11 ADD MSTORE PUSH32 0x223025222079313D223025222078323D2231303025222079323D223025223E00 PUSH2 0x1EB DUP11 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D223025222073746F702D636F6C6F723D222366 PUSH2 0x20A DUP11 ADD MSTORE PUSH32 0x66666666663230222F3E00000000000000000000000000000000000000000000 PUSH2 0x22A DUP11 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D22353025222073746F702D636F6C6F723D2223 PUSH2 0x234 DUP11 ADD MSTORE PUSH32 0x6666666666663630223E00000000000000000000000000000000000000000000 PUSH2 0x254 DUP11 ADD MSTORE PUSH2 0x25E DUP10 ADD MSTORE PUSH32 0x76616C7565733D2230253B3130302522206475723D2200000000000000000000 PUSH2 0x27E DUP10 ADD MSTORE DUP1 MLOAD PUSH2 0x294 SWAP9 SWAP1 SWAP2 PUSH2 0x123C SWAP1 DUP4 SWAP1 DUP12 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3099 JUMP JUMPDEST ADD SWAP7 DUP8 ADD MSTORE PUSH2 0x2B1 DUP7 ADD MSTORE PUSH2 0x2B8 DUP6 ADD MSTORE PUSH32 0x236666666666663230222F3E0000000000000000000000000000000000000000 PUSH2 0x2D8 DUP6 ADD MSTORE PUSH32 0x3C2F6C696E6561724772616469656E743E000000000000000000000000000000 PUSH2 0x2E4 DUP6 ADD MSTORE PUSH32 0x3C2F646566733E00000000000000000000000000000000000000000000000000 PUSH2 0x2F5 DUP6 ADD MSTORE PUSH32 0x3C726563742077696474683D223130302522206865696768743D223130302522 PUSH2 0x2FC DUP6 ADD MSTORE PUSH32 0x2072783D223438222066696C6C3D220000000000000000000000000000000000 PUSH2 0x31C DUP6 ADD MSTORE DUP1 MLOAD PUSH2 0x32B SWAP5 SWAP1 SWAP2 PUSH2 0x132A SWAP1 DUP4 SWAP1 DUP8 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3099 JUMP JUMPDEST PUSH32 0x222F3E0000000000000000000000000000000000000000000000000000000000 SWAP2 ADD SWAP4 DUP5 ADD MSTORE PUSH32 0x3C67207472616E73666F726D3D227472616E736C617465283530302C35323029 PUSH2 0x32E DUP5 ADD MSTORE PUSH32 0x223E000000000000000000000000000000000000000000000000000000000000 PUSH2 0x34E DUP5 ADD MSTORE PUSH32 0x3C673E0000000000000000000000000000000000000000000000000000000000 PUSH2 0x350 DUP5 ADD MSTORE PUSH32 0x3C636972636C6520723D22333630222066696C6C3D2275726C28236729223E00 PUSH2 0x353 DUP5 ADD MSTORE PUSH32 0x3C616E696D6174655472616E73666F726D206174747269627574654E616D653D PUSH2 0x372 DUP5 ADD MSTORE PUSH32 0x227472616E73666F726D2220747970653D227363616C65222076616C7565733D PUSH2 0x392 DUP5 ADD MSTORE PUSH32 0x22313B312E30353B3122206475723D2200000000000000000000000000000000 PUSH2 0x3B2 DUP5 ADD MSTORE DUP1 MLOAD PUSH2 0x3C2 SWAP4 SWAP1 SWAP2 PUSH2 0x147C SWAP1 DUP4 SWAP1 DUP7 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3099 JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH2 0x3DF DUP2 ADD PUSH32 0x3C2F636972636C653E0000000000000000000000000000000000000000000000 SWAP1 MSTORE PUSH4 0x1E17B39F PUSH1 0xE1 SHL SWAP4 DUP5 PUSH2 0x3E8 DUP4 ADD MSTORE PUSH2 0x3EC DUP3 ADD PUSH9 0x1E3830BA3410321E91 PUSH1 0xB9 SHL SWAP1 MSTORE PUSH2 0x3F5 SWAP2 DUP2 MLOAD SWAP2 DUP3 DUP5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14E6 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP1 DUP2 ADD PUSH32 0x22207472616E73666F726D3D227472616E736C617465282D3530302C2D353230 SWAP1 MSTORE PUSH2 0x415 DUP2 ADD PUSH32 0x29222066696C6C3D220000000000000000000000000000000000000000000000 SWAP1 MSTORE PUSH2 0x41E SWAP7 MLOAD SWAP2 DUP3 DUP9 DUP4 ADD PUSH2 0x1548 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP5 DUP6 ADD PUSH32 0x22206F7061636974793D22302E3138222F3E0000000000000000000000000000 SWAP1 MSTORE PUSH2 0x430 SWAP5 DUP2 MLOAD SWAP2 DUP3 DUP8 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1588 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP4 DUP5 ADD MSTORE PUSH32 0x3C7465787420783D2238302220793D223230302220636C6173733D2274222066 PUSH2 0x434 DUP5 ADD MSTORE PUSH32 0x6F6E742D73697A653D22363422206F7061636974793D22302E39223E00000000 PUSH2 0x454 DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x470 SWAP4 PUSH2 0x15F1 DUP3 DUP7 DUP4 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x3099 JUMP JUMPDEST ADD SWAP2 PUSH32 0x202D200000000000000000000000000000000000000000000000000000000000 DUP1 SWAP5 DUP5 ADD MSTORE PUSH2 0x473 SWAP3 DUP10 MLOAD SWAP1 DUP5 DUP2 ADD DUP3 PUSH1 0x20 DUP14 ADD SWAP2 PUSH2 0x1632 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP3 PUSH32 0x3C2F746578743E00000000000000000000000000000000000000000000000000 SWAP6 DUP7 DUP1 SWAP3 DUP7 ADD MSTORE PUSH2 0x47A DUP6 ADD PUSH32 0x3C7465787420783D2238302220793D223238302220636C6173733D2274222066 SWAP1 MSTORE PUSH2 0x49A DUP6 ADD PUSH32 0x6F6E742D73697A653D22333622206F7061636974793D22302E36223E23000000 SWAP1 MSTORE PUSH2 0x4B7 SWAP5 DUP2 MLOAD SWAP2 DUP3 DUP8 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16C5 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP4 DUP5 ADD MSTORE PUSH32 0x3C7465787420783D2238302220793D223730302220636C6173733D2274222066 PUSH2 0x4BE DUP5 ADD MSTORE PUSH32 0x6F6E742D73697A653D22323822206F7061636974793D22302E3835223E44656C PUSH2 0x4DE DUP5 ADD MSTORE PUSH32 0x6963696F75736E65737320000000000000000000000000000000000000000000 PUSH2 0x4FE DUP5 ADD MSTORE DUP1 MLOAD PUSH2 0x509 SWAP4 SWAP1 SWAP2 PUSH2 0x1759 SWAP1 DUP4 SWAP1 DUP7 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3099 JUMP JUMPDEST PUSH32 0x2F3130303C2F746578743E000000000000000000000000000000000000000000 SWAP2 ADD SWAP3 DUP4 ADD MSTORE PUSH32 0x3C7265637420783D2238302220793D22373230222077696474683D2238343022 PUSH2 0x514 DUP4 ADD MSTORE PUSH32 0x206865696768743D223336222072783D223138222066696C6C3D222366666666 PUSH2 0x534 DUP4 ADD MSTORE PUSH32 0x66663230222F3E00000000000000000000000000000000000000000000000000 PUSH2 0x554 DUP4 ADD MSTORE PUSH32 0x3C7265637420783D2238302220793D22373230222077696474683D2200000000 PUSH2 0x55B DUP4 ADD MSTORE DUP1 MLOAD PUSH2 0x577 SWAP3 SWAP1 SWAP2 PUSH2 0x1836 SWAP1 DUP4 SWAP1 DUP6 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x3099 JUMP JUMPDEST PUSH32 0x22206865696768743D223336222072783D223138222066696C6C3D2275726C28 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x237368696D6D657229222F3E0000000000000000000000000000000000000000 PUSH2 0x597 DUP3 ADD MSTORE PUSH32 0x3C7265637420783D2238302220793D22383230222072783D2231342220776964 PUSH2 0x5A3 DUP3 ADD MSTORE PUSH32 0x74683D2238343022206865696768743D223536222066696C6C3D222366666666 PUSH2 0x5C3 DUP3 ADD MSTORE PUSH32 0x66663130222F3E00000000000000000000000000000000000000000000000000 PUSH2 0x5E3 DUP3 ADD MSTORE PUSH32 0x3C7465787420783D223130302220793D223836302220636C6173733D22742220 PUSH2 0x5EA DUP3 ADD MSTORE PUSH32 0x666F6E742D73697A653D22323822206F7061636974793D22302E39223E000000 PUSH2 0x60A DUP3 ADD MSTORE PUSH2 0x1954 SWAP1 PUSH2 0x627 ADD PUSH2 0x3574 JUMP JUMPDEST SWAP1 DUP2 MSTORE DUP5 MLOAD SWAP1 PUSH2 0x196B DUP3 PUSH1 0x3 DUP4 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x3099 JUMP JUMPDEST ADD SWAP1 PUSH1 0x3 DUP3 ADD MSTORE PUSH1 0xA DUP2 ADD PUSH32 0x3C2F7376673E0000000000000000000000000000000000000000000000000000 SWAP1 MSTORE SUB PUSH1 0xF NOT DUP2 ADD DUP3 MSTORE PUSH1 0x10 ADD PUSH2 0x19AE SWAP1 DUP3 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x19B6 PUSH2 0x3B7A JUMP JUMPDEST PUSH2 0x19BF SWAP2 PUSH2 0x3EDA JUMP JUMPDEST SWAP3 PUSH1 0xFF AND PUSH2 0x19CC SWAP1 PUSH2 0x3A29 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x20 DUP8 ADD PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 SWAP1 MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x29 DUP10 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A10 SWAP3 PUSH2 0x3099 JUMP JUMPDEST DUP7 ADD PUSH1 0x29 DUP2 ADD PUSH32 0x222C226465736372697074696F6E223A22000000000000000000000000000000 SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x3A DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A4F SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD PUSH1 0x3A DUP2 ADD PUSH32 0x222C22696D616765223A22646174613A696D6167652F7376672B786D6C3B6261 SWAP1 MSTORE PUSH1 0x5A DUP2 ADD PUSH32 0x736536342C000000000000000000000000000000000000000000000000000000 SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x5F DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AB4 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD PUSH1 0x5F DUP2 ADD PUSH32 0x222C2261747472696275746573223A5B00000000000000000000000000000000 SWAP1 MSTORE PUSH1 0x6F DUP2 ADD PUSH32 0x7B2274726169745F74797065223A22466C61766F72222C2276616C7565223A22 SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x8F DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B19 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP1 PUSH32 0x227D2C0000000000000000000000000000000000000000000000000000000000 SWAP2 DUP3 PUSH1 0x8F DUP3 ADD MSTORE PUSH1 0x92 DUP2 ADD PUSH32 0x7B2274726169745F74797065223A2254696572222C2276616C7565223A220000 SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xB0 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B80 SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD SWAP1 PUSH1 0xB0 DUP3 ADD MSTORE PUSH1 0xB3 DUP2 ADD PUSH32 0x7B2274726169745F74797065223A2244656C6963696F75736E657373222C2276 SWAP1 MSTORE PUSH1 0xD3 DUP2 ADD PUSH32 0x616C7565223A0000000000000000000000000000000000000000000000000000 SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xD9 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BEB SWAP3 PUSH2 0x3099 JUMP JUMPDEST ADD PUSH1 0xD9 DUP2 ADD PUSH32 0x7D00000000000000000000000000000000000000000000000000000000000000 SWAP1 MSTORE PUSH1 0xDA DUP2 ADD PUSH32 0x5D7D000000000000000000000000000000000000000000000000000000000000 SWAP1 MSTORE SUB PUSH1 0xBC DUP2 ADD DUP3 MSTORE PUSH1 0xDC ADD PUSH2 0x1C4E SWAP1 DUP3 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x1C56 PUSH2 0x3B7A JUMP JUMPDEST PUSH2 0x1C5F SWAP2 PUSH2 0x3EDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 SWAP1 MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x3D DUP5 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CA1 SWAP3 PUSH2 0x3099 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1D DUP2 ADD DUP3 MSTORE PUSH1 0x3D ADD PUSH2 0x1CB7 SWAP1 DUP3 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH2 0x1CCD SWAP2 PUSH2 0x30BC JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1CDE DUP2 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0xDDA JUMP JUMPDEST PUSH32 0x181EBE3A8FA130246D49BFD123AC54849B05BDCD02C6B1322C78DE2A3988A310 EQ SWAP8 POP DUP14 PUSH2 0xBC0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SWAP3 POP PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x6 SWAP4 POP PUSH2 0xB40 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x21 PUSH1 0xFF DUP6 AND GT ISZERO PUSH2 0x1D68 JUMPI PUSH1 0x2 ADD SWAP5 PUSH1 0xFF DUP7 GT PUSH2 0x1D11 JUMPI PUSH1 0xFF PUSH2 0x92A SWAP3 PUSH1 0x1 SWAP8 AND PUSH2 0x923 JUMP JUMPDEST PUSH1 0x3 ADD SWAP5 PUSH1 0xFF DUP7 GT PUSH2 0x1D11 JUMPI PUSH1 0xFF PUSH2 0x92A SWAP3 PUSH1 0x1 SWAP8 AND PUSH2 0x923 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH2 0x1DA1 PUSH1 0x4 CALLDATALOAD PUSH2 0x349B JUMP JUMPDEST PUSH1 0xFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1CB JUMPI PUSH2 0x1DDE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3247 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x1CB JUMPI PUSH2 0x1DF6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3247 JUMP JUMPDEST PUSH2 0x1DFE PUSH2 0x362B JUMP JUMPDEST DUP5 DUP4 GT PUSH2 0x1FF3 JUMPI PUSH2 0x1E10 PUSH1 0xD SLOAD PUSH2 0x3142 JUMP JUMPDEST SWAP5 PUSH1 0x1F SWAP6 DUP7 DUP2 GT PUSH2 0x209A JUMPI JUMPDEST POP DUP4 PUSH1 0x0 DUP8 DUP3 GT PUSH1 0x1 EQ PUSH2 0x2014 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2009 JUMPI JUMPDEST POP DUP5 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP7 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE JUMPDEST DUP2 GT PUSH2 0x1FF3 JUMPI PUSH2 0x1E58 PUSH1 0xE SLOAD PUSH2 0x3142 JUMP JUMPDEST DUP6 DUP2 GT PUSH2 0x1F91 JUMPI JUMPDEST POP PUSH1 0x0 SWAP5 DUP2 GT PUSH1 0x1 EQ PUSH2 0x1EE7 JUMPI SWAP1 DUP2 PUSH2 0x1ED7 SWAP3 PUSH32 0x2C7EA2C532CC0DAD6D6BAAD5A149D62033F0F3FA2E619DE5A0296268F78611C3 SWAP7 PUSH1 0x0 SWAP2 PUSH2 0x1EDC JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP4 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE JUMPDEST PUSH2 0x1EC9 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x40 DUP8 MSTORE PUSH1 0x40 DUP8 ADD SWAP2 PUSH2 0x342F JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x342F JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP3 ADD CALLDATALOAD DUP8 PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x1F NOT DUP2 AND SWAP5 PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP6 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F79 JUMPI POP SWAP6 DUP3 SWAP2 PUSH2 0x1ED7 SWAP5 SWAP4 PUSH32 0x2C7EA2C532CC0DAD6D6BAAD5A149D62033F0F3FA2E619DE5A0296268F78611C3 SWAP9 LT PUSH2 0x1F5F JUMPI JUMPDEST POP POP PUSH1 0x1 DUP2 DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x1EB2 JUMP JUMPDEST DUP4 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 PUSH2 0x1F4F JUMP JUMPDEST DUP5 DUP4 ADD CALLDATALOAD DUP9 SSTORE PUSH1 0x1 SWAP1 SWAP8 ADD SWAP7 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1F17 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD DUP7 DUP1 DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP6 LT PUSH2 0x1FEA JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FDE JUMPI POP PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1FD1 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x1FCA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP6 ADD CALLDATALOAD DUP8 PUSH2 0x1E32 JUMP JUMPDEST SWAP1 POP PUSH1 0x1F NOT DUP6 AND SWAP1 PUSH1 0xD PUSH1 0x0 MSTORE DUP6 PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x207F JUMPI POP LT PUSH2 0x2065 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP5 DUP2 SHL ADD PUSH1 0xD SSTORE PUSH2 0x1E47 JUMP JUMPDEST DUP7 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 PUSH2 0x2055 JUMP JUMPDEST DUP10 DUP5 ADD CALLDATALOAD DUP6 SSTORE PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 DUP10 SWAP4 POP ADD PUSH2 0x2047 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 DUP8 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP9 LT PUSH2 0x20F3 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x20E7 JUMPI POP PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x20DA JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x20D3 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x2115 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x211D PUSH2 0x30F7 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x1CB JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x1CB JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH2 0x214E DUP5 PUSH2 0x322B JUMP JUMPDEST SWAP4 PUSH2 0x215C PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x3209 JUMP JUMPDEST DUP1 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP9 ADD ADD GT PUSH2 0x1CB JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x2191 SWAP10 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE PUSH2 0x218B DUP4 DUP4 DUP4 PUSH2 0x3275 JUMP JUMPDEST CALLER PUSH2 0x373A JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH32 0xFCBB1571F6F637B3645E200FF18FBCB7FC2F8DB33547E2F582146A51246E1043 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x21D7 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x21DF PUSH2 0x362B JUMP JUMPDEST AND DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x2214 PUSH2 0x30E1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2287 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x24 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x2 PUSH1 0x9 SLOAD EQ PUSH2 0x26C6 JUMPI PUSH1 0x2 PUSH1 0x9 SSTORE PUSH1 0xFF PUSH1 0xF SLOAD AND ISZERO PUSH2 0x2682 JUMPI PUSH1 0x4 CALLDATALOAD ISZERO ISZERO DUP1 PUSH2 0x2675 JUMPI JUMPDEST ISZERO PUSH2 0x2631 JUMPI PUSH1 0xA SLOAD PUSH1 0x4 CALLDATALOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1D11 JUMPI PUSH32 0x0 LT PUSH2 0x25ED JUMPI PUSH2 0x2331 PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD PUSH2 0x341C JUMP JUMPDEST CALLVALUE LT PUSH2 0x25A9 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 LT PUSH2 0x236B JUMPI SELFBALANCE PUSH2 0x2350 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x9 SSTORE STOP JUMPDEST PUSH2 0x2366 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND SELFBALANCE SWAP1 PUSH2 0x369F JUMP JUMPDEST PUSH2 0x2349 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH2 0x237B DUP3 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE CALLER ISZERO PUSH2 0x2591 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP2 DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x2555 JUMPI JUMPDEST CALLER PUSH2 0x253B JUMPI JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH2 0x250A JUMPI CALLER EXTCODESIZE PUSH2 0x2411 JUMPI JUMPDEST POP POP PUSH1 0x1 SWAP1 DUP2 PUSH1 0xA SLOAD ADD PUSH1 0xA SSTORE ADD PUSH2 0x233A JUMP JUMPDEST PUSH2 0x244D SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x30BC JUMP JUMPDEST SUB DUP2 PUSH1 0x0 CALLER GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x24C5 JUMPI JUMPDEST POP PUSH2 0x248E JUMPI PUSH2 0x246A PUSH2 0x366F JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x2489 JUMPI PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP2 AND SUB PUSH2 0x24AE JUMPI PUSH1 0x1 DUP3 PUSH2 0x23FE JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2502 JUMPI JUMPDEST DUP2 PUSH2 0x24E1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3209 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1CB JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x1CB JUMPI SWAP1 DUP4 PUSH2 0x245D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x23AE JUMP JUMPDEST PUSH2 0x2576 DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742045544800000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736F6C64206F7574000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x71747920312E2E35000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x5 PUSH1 0x4 CALLDATALOAD GT ISZERO PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420636C6F736564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x1 SLOAD SWAP3 PUSH2 0x2716 DUP5 PUSH2 0x3142 JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x27B3 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x2756 JUMPI JUMPDEST POP PUSH2 0x2742 SWAP3 POP SUB DUP4 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x1CCD PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x30BC JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x279B JUMPI POP POP PUSH2 0x2742 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x2735 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x2784 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP3 ADD MSTORE PUSH2 0x2742 SWAP6 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 SWAP2 POP PUSH2 0x2735 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH32 0x8BA9AF8FEF251A59A57BB383A518FF12B3C2770C23CF0AB9A59A9E2390E08F43 SWAP2 PUSH2 0x2844 PUSH2 0x362B JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0xF SLOAD AND PUSH1 0xFF DUP3 AND OR PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE SLOAD PUSH1 0x0 DUP3 PUSH2 0x287F DUP4 PUSH2 0x3142 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x27B3 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x28AD JUMPI POP PUSH2 0x2742 SWAP3 POP SUB DUP4 PUSH2 0x3209 JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x28F2 JUMPI POP POP PUSH2 0x2742 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x2735 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x28DB JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x2923 PUSH2 0x362B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x8 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2986 PUSH2 0x30E1 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x29A5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH2 0x2A39 PUSH1 0x4 CALLDATALOAD PUSH2 0x35F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP2 CALLER ISZERO ISZERO SWAP1 DUP2 PUSH2 0x2B24 JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x2 PUSH1 0x0 SWAP3 DUP3 PUSH2 0x2AEC JUMPI JUMPDEST DUP5 DUP5 MSTORE MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 STOP JUMPDEST PUSH2 0x2B0D DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP5 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x2AB0 JUMP JUMPDEST DUP2 PUSH2 0x2B74 JUMPI JUMPDEST POP ISZERO PUSH2 0x2B37 JUMPI DUP4 DUP1 PUSH2 0x2AA2 JUMP JUMPDEST POP PUSH2 0x2B54 JUMPI PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST CALLER DUP5 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x2BA8 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2B8E JUMPI JUMPDEST POP DUP5 PUSH2 0x2B2A JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 DUP3 MSTORE CALLER SWAP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND EQ DUP5 PUSH2 0x2B87 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 PUSH2 0x2B80 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH2 0x2191 PUSH2 0x2BDD CALLDATASIZE PUSH2 0x310D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2BEB DUP5 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x218B DUP4 DUP4 DUP4 PUSH2 0x3275 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x2C13 PUSH2 0x362B JUMP JUMPDEST PUSH2 0x2191 SELFBALANCE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND DUP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 PUSH1 0x20 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE LOG2 PUSH2 0x369F JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH1 0xD SLOAD PUSH1 0x0 DUP3 PUSH2 0x2C76 DUP4 PUSH2 0x3142 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x27B3 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x2CA4 JUMPI POP PUSH2 0x2742 SWAP3 POP SUB DUP4 PUSH2 0x3209 JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x2CE9 JUMPI POP POP PUSH2 0x2742 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x2735 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x2CD2 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0xA0 SHR SWAP1 DUP3 ISZERO PUSH2 0x2D75 JUMPI JUMPDEST POP PUSH2 0x2D58 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2710 SWAP3 AND PUSH1 0x24 CALLDATALOAD PUSH2 0x341C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 SWAP1 DIV PUSH1 0x20 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD SWAP1 DUP2 AND SWAP3 POP PUSH1 0xA0 SHR SWAP1 POP PUSH2 0x2D58 PUSH2 0x2D3A JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xF SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH2 0x2191 PUSH2 0x2DBE CALLDATASIZE PUSH2 0x310D JUMP JUMPDEST SWAP2 PUSH2 0x3275 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH2 0x2DDD PUSH2 0x30E1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x2DE9 DUP2 PUSH2 0x35F0 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x2EB2 JUMPI JUMPDEST DUP1 PUSH2 0x2E84 JUMPI JUMPDEST PUSH2 0x2E54 JUMPI DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP4 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x2DF8 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x2DF2 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2EE2 DUP2 PUSH2 0x35F0 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 PUSH2 0x2F27 DUP4 PUSH2 0x3142 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x27B3 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x2F55 JUMPI POP PUSH2 0x2742 SWAP3 POP SUB DUP4 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE DUP6 SWAP3 POP SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP6 DUP4 LT PUSH2 0x2F97 JUMPI POP POP PUSH2 0x2742 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x2735 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x2F80 JUMP JUMPDEST CALLVALUE PUSH2 0x1CB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1CB JUMPI DUP2 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP4 EQ SWAP1 DUP2 ISZERO PUSH2 0x300B JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x306F JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3045 JUMPI JUMPDEST POP DUP4 PUSH2 0x3004 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ DUP4 PUSH2 0x303E JUMP JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x3037 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x30AC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x309C JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x30D5 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1CB JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1CB JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x1CB JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x1CB JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3172 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x315C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3151 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FF3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FF3 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1CB JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1CB JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x1CB JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2591 JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0x3383 JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0x334B JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0x3311 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x336C DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x32D8 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0x33DB JUMPI JUMPDEST ISZERO PUSH2 0x339F JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0x32AC JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0x33BC JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0x3400 JUMPI JUMPDEST DUP1 PUSH2 0x338F JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0x338F JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0x33E6 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1D11 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3457 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E41000000000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x65 PUSH2 0x34CA PUSH1 0xFF SWAP3 DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x34C5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x385E JUMP JUMPDEST MOD AND PUSH1 0x8 DUP2 LT PUSH2 0x34D7 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x8 ADD PUSH1 0xFF DUP2 GT PUSH2 0x1D11 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x34F5 DUP3 PUSH2 0x3142 JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3561 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3510 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x354E JUMPI POP POP POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP6 DUP8 ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x3540 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x3584 DUP3 PUSH2 0x3142 JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3561 JUMPI POP PUSH1 0x1 EQ PUSH2 0x359F JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x35DD JUMPI POP POP POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP6 DUP8 ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x35CF JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x3613 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND CALLER SUB PUSH2 0x363F JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x369A JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3680 DUP3 PUSH2 0x322B JUMP JUMPDEST SWAP2 PUSH2 0x368E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3209 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x3702 JUMPI PUSH1 0x0 DUP1 DUP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SWAP5 AND GAS CALL PUSH2 0x36C0 PUSH2 0x366F JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x36C9 JUMPI POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x36D8 JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x44 DUP3 SELFBALANCE SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP3 SWAP4 DUP3 EXTCODESIZE PUSH2 0x374A JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x378F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP2 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP9 DUP10 DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x30BC JUMP JUMPDEST SUB SWAP1 PUSH1 0x20 DUP2 PUSH1 0x0 SWAP4 DUP2 DUP6 DUP9 GAS CALL SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x380E JUMPI JUMPDEST POP POP PUSH2 0x37DC JUMPI DUP3 PUSH2 0x37B4 PUSH2 0x366F JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x37D5 JUMPI PUSH1 0x24 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x37F6 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x3743 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3856 JUMPI JUMPDEST DUP2 PUSH2 0x382B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3209 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3852 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x384F JUMPI POP SWAP1 CODESIZE DUP1 PUSH2 0x37A5 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x381E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 ADDRESS PUSH1 0x60 SHL DUP4 MSTORE PUSH1 0x34 DUP3 ADD MSTORE CHAINID PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH2 0x3884 DUP2 PUSH2 0x31ED JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x389B JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF AND PUSH1 0x5A DUP2 LT ISZERO PUSH2 0x39BD JUMPI PUSH1 0x46 DUP2 LT ISZERO PUSH2 0x3983 JUMPI PUSH1 0x32 DUP2 LT ISZERO PUSH2 0x3949 JUMPI PUSH1 0x1E GT ISZERO PUSH2 0x3910 JUMPI PUSH1 0x40 MLOAD PUSH2 0x38E3 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH32 0x5261770000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391C DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x54616E6779000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3956 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x4A75696379000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3990 DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH32 0x5072696D65000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x39CA DUP2 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH32 0x4C6567656E646172790000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3A01 DUP3 PUSH2 0x322B JUMP JUMPDEST PUSH2 0x3A0E PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x3209 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3A1F PUSH1 0x1F NOT SWAP2 PUSH2 0x322B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x3B6C JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x3B5D JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x3B4E JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x3B3F JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x3B30 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x3B20 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x3B16 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x3AC1 PUSH1 0x1 DUP8 ADD PUSH2 0x39F7 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x3AD3 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x3B11 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x3AC7 JUMP JUMPDEST PUSH2 0x3ACC JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x3AAF JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x3AA4 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A99 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A8C JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A7D JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A6B JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x3A52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3B87 DUP3 PUSH2 0x31D1 JUMP JUMPDEST PUSH1 0x40 DUP3 MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F PUSH1 0x40 DUP4 PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH32 0x7363A24996DE434FC886F1474DD74D955980FA72B926B9C955F94F6698EBF686 DUP2 SUB PUSH2 0x3C41 JUMPI POP PUSH32 0x4D3530302C323430204C3332302C373230204C3638302C373230205A00000000 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3C37 DUP4 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x1C DUP4 MSTORE DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH32 0x1242766C8824991355AAADEC4D656D943025E70FE896230AF412F93B3F92BA08 DUP2 SUB PUSH2 0x3CC7 JUMPI POP PUSH32 0x4D3530302C323430204C3330302C353230204C3530302C383030204C3730302C PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3C97 DUP4 PUSH2 0x31D1 JUMP JUMPDEST PUSH1 0x25 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x353230205A000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH32 0x1664B525956D22F8F0AD35BD22F34261DF9B15FC7BA28020F9866AC08CBBC90F DUP2 SUB PUSH2 0x3D73 JUMPI POP PUSH32 0x4D3530302C32363020433336302C333030203332302C353630203436302C3732 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3D1D DUP4 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x55 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x3020433538302C383230203732302C373030203730302C35323020433638302C PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x333630203634302C333030203530302C323630205A0000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH32 0xFFC66C8548BC388F0156D76251A192B57D2601764D8478982E579B825596B8BC SUB PUSH2 0x3E1D JUMPI PUSH32 0x4D3530302C323430204C3534302C343230204C3732302C343230204C3538302C PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3DC7 DUP4 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x5B DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x353230204C3632302C373030204C3530302C363030204C3338302C373030204C PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x3432302C353230204C3238302C343230204C3436302C343230205A0000000000 PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x1FF3 JUMPI PUSH32 0x4D3530302C323430204C3536302C343230204C3732302C333830204C3630302C SWAP2 PUSH1 0x40 MSTORE PUSH1 0x6D DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x353030204C3732302C363230204C3536302C353830204C3530302C373630204C PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x3434302C353830204C3238302C363230204C3430302C353030204C3238302C33 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3830204C3434302C343230205A00000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD ISZERO PUSH2 0x3FDF JUMPI DUP1 MLOAD SWAP3 PUSH1 0x2 SWAP2 PUSH1 0x2 DUP6 ADD DUP1 SWAP6 GT PUSH2 0x1D11 JUMPI PUSH1 0x3 DUP1 SWAP6 DIV PUSH32 0x3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1D11 JUMPI PUSH2 0x3F32 SWAP1 PUSH1 0x2 SWAP7 SWAP5 SWAP7 SHL PUSH2 0x39F7 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP3 SWAP2 DUP4 MLOAD DUP5 ADD SWAP8 PUSH1 0x20 DUP10 ADD SWAP3 DUP4 MLOAD SWAP5 PUSH1 0x0 DUP6 MSTORE JUMPDEST DUP11 DUP2 LT PUSH2 0x3F92 JUMPI POP POP POP POP PUSH1 0x3 SWAP4 SWAP5 SWAP6 SWAP7 POP MSTORE MLOAD MOD DUP1 PUSH1 0x1 EQ PUSH2 0x3F7F JUMPI PUSH1 0x2 EQ PUSH2 0x3F74 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x4 SWAP2 SWAP12 SWAP9 SWAP12 ADD SWAP11 DUP12 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP8 ADD ADD MLOAD DUP5 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP8 ADD ADD MLOAD DUP4 DUP6 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP8 ADD ADD MLOAD DUP8 DUP6 ADD MSTORE8 AND DUP5 ADD ADD MLOAD DUP6 DUP3 ADD MSTORE8 ADD SWAP7 SWAP10 PUSH2 0x3F4C JUMP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0x3FEE DUP2 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD BYTE PUSH28 0xD9231ABCA41AD594B76412577FD87C8DE1C6989BE7AEB1EDD5B9A781 0x24 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"871:11928:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;2241:19;871:11928;;;1500:62:0;;:::i;:::-;871:11928:31;2212:13;871:11928;;;;;;2241:19;871:11928;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;871:11928:31;;;2627:22:0;;;2623:91;;3004:6;871:11928:31;;-1:-1:-1;;;;;;871:11928:31;;;3004:6:0;871:11928:31;;3052:40:0;871:11928:31;3052:40:0;;871:11928:31;2623:91:0;871:11928:31;;;2672:31:0;;;871:11928:31;;2672:31:0;;871:11928:31;2672:31:0;871:11928:31;;;;;;-1:-1:-1;;871:11928:31;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;871:11928:31;;;;;3776:18:8;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;;;1109:34;871:11928;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;;;;5470:7:8;871:11928:31;;6280:46;-1:-1:-1;;;;;871:11928:31;;;;;6288:31;;6280:46;:::i;:::-;871:11928;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4122:69;;871:11928;;;;;;:::i;:::-;;;;;;;;;;4122:69;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;;;871:11928;;;;;;:::i;:::-;;;;;;;;;;4122:69;;871:11928;;;4279:11;871:11928;4222:14;871:11928;;4222:14;:::i;:::-;871:11928;;;4279:11;;;:::i;:::-;;6412:24;871:11928;;6412:24;:::i;:::-;871:11928;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4445:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;;4445:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;4445:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;4445:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;4445:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;4445:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;;4445:81;;871:11928;4657:8;871:11928;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4560:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;;4560:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;4560:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;4560:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;4560:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;4122:69;4560:81;;871:11928;;;;;;:::i;:::-;;;;;;;;;;4560:81;;871:11928;4657:8;:::i;:::-;;;4698:2;871:11928;;;4686:14;4698:2;;;871:11928;;;;;;;;;4781:6;871:11928;;;;4686:79;871:11928;4781:6;;:::i;:::-;;6534:8;;;;:::i;:::-;871:11928;6621:18;871:11928;;6621:18;:::i;:::-;871:11928;;;;;;;5470:7:8;871:11928:31;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;6836:12;871:11928;;;6836:12;:::i;:::-;871:11928;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;7926:2;871:11928;;;;4122:69;871:11928;4122:69;871:11928;;;;7967:1;7889:40;7956:12;7952:30;;4686:79;8031:2;871:11928;;;;6603:10;871:11928;;6603:10;871:11928;;;;8071:1;7993:41;8061:11;8057:28;;4686:79;8136:2;871:11928;;;;8031:2;871:11928;;8031:2;871:11928;;;;;8096:43;8163:14;8159:34;;4686:79;12340:3;871:11928;;;;;;;;;;;;;;;;;12347:3;12368:12;871:11928;;;;;;12368:12;:::i;:::-;8275:16;;;:::i;:::-;871:11928;;;;;8390:22;:44;8416:18;8390:44;;:122;;;;;4686:79;9106:19;10316;9680:21;9106:19;;;:::i;:::-;9680:21;;:::i;:::-;10316:19;;:::i;:::-;10661:559;;;;10729:440;;871:11928;;;;;;;;:::i;:::-;;;;11016:18;871:11928;;;;;;;;;;;;11016:18;:::i;:::-;871:11928;;;10729:440;;;871:11928;;10729:440;;871:11928;;;;;;-1:-1:-1;;;871:11928:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;871:11928:31;;;;10729:440;;;;;;;;;:::i;:::-;11486:18;871:11928;;11486:18;:::i;:::-;871:11928;;11647:12;871:11928;;;11647:12;:::i;:::-;871:11928;;;8554:3656;;;;;871:11928;8554:3656;;871:11928;;;;;;;;;4122:69;871:11928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;871:11928:31;;;;;;;;;-1:-1:-1;;;871:11928:31;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;7967:1;871:11928;;;;;;:::i;:::-;;;7967:1;871:11928;;;;;;;;;8554:3656;;;;;;;871:11928;8554:3656;;;;;:::i;:::-;871:11928;;:::i;:::-;753:27:17;;;:::i;:::-;871:11928:31;;;7381:12;;;:::i;:::-;871:11928;;;6992:436;;;871:11928;6992:436;;871:11928;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;6992:436;;;;;;871:11928;6992:436;;;;;:::i;:::-;871:11928;;:::i;:::-;753:27:17;;;:::i;:::-;871:11928:31;;7453:70;;871:11928;7453:70;;871:11928;;;;;;;;;;;;;;;;;:::i;:::-;;;7453:70;;;;;;871:11928;7453:70;;;;;:::i;:::-;871:11928;;;;;;;;;;;;;:::i;:::-;;;;10661:559;871:11928;;;;;;:::i;:::-;;;;10661:559;;8390:122;8490:22;8464:48;;-1:-1:-1;8390:122:31;;;871:11928;-1:-1:-1;;;871:11928:31;;;;;;;;8159:34;871:11928;;-1:-1:-1;8159:34:31;;8057:28;8071:1;;-1:-1:-1;8057:28:31;;7952:30;7970:12;7967:1;7952:30;;4686:79;4731:2;871:11928;;;4719:14;4731:2;;;5470:7:8;871:11928:31;;;;;;;;4781:6;871:11928;;;;4686:79;;4719:46;871:11928;;;;;;;;;4781:6;871:11928;;;;4686:79;;871:11928;;;;;;-1:-1:-1;;871:11928:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;871:11928:31;;;;;;2513:14;871:11928;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2513:14;871:11928;;;;;;;2538:24;871:11928;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2578:36;871:11928;;;;;;;;;;;;;;;;;;;;2538:24;871:11928;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;2578:36;;;871:11928;;;;;;;;;;;;;;;;2538:24;871:11928;;;;;;;;;;;;;;;;;;2578:36;871:11928;;;;;;;;;;;;2538:24;871:11928;;;;;;;-1:-1:-1;;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:24;871:11928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;2513:14;871:11928;;;;;;;;;;;;;;;;;;;;;;;;2513:14;871:11928;;;;;;;-1:-1:-1;;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;871:11928:31;;;;2513:14;871:11928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4851:4:8;871:11928:31;;;;;;;;;;4766:7:8;;;;;:::i;:::-;735:10:19;4851:4:8;:::i;:::-;871:11928:31;;;;;;;-1:-1:-1;;871:11928:31;;;;2366:23;871:11928;-1:-1:-1;;;;;871:11928:31;;:::i;:::-;1500:62:0;;:::i;:::-;871:11928:31;;-1:-1:-1;;;;;;2340:10:31;871:11928;;;2340:10;871:11928;;;;;;2366:23;871:11928;;;;;;;-1:-1:-1;;871:11928:31;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;871:11928:31;15418:22:8;;;15414:91;;735:10:19;871:11928:31;;15514:18:8;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15575:41:8;871:11928:31;735:10:19;15575:41:8;;871:11928:31;15414:91:8;871:11928:31;;;;15463:31:8;;;;871:11928:31;15463:31:8;;871:11928:31;15463:31:8;871:11928:31;;;-1:-1:-1;;871:11928:31;;;;1899:1:22;2702:7;871:11928:31;2702:18:22;2698:86;;1899:1;2702:7;871:11928:31;;2731:8;871:11928;;;;;;;2774:7;;:19;;;871:11928;;;;2825:6;871:11928;;;;;;;;;;2841:9;-1:-1:-1;871:11928:31;;2895:15;871:11928;;2895:9;871:11928;2895:15;:::i;:::-;2882:9;:28;871:11928;;;2983:7;871:11928;;2983:7;;;;3113:21;3109:106;;2967:121;871:11928;2702:7:22;871:11928:31;;3109:106;3181:21;-1:-1:-1;;;;;3163:6:31;871:11928;;3181:21;;;:::i;:::-;3109:106;;2992:3;2825:6;871:11928;;;;;;;:::i;:::-;;;;3026:10;9691:16:8;9687:87;;871:11928:31;;;1899:1:22;871:11928:31;;-1:-1:-1;;;;;871:11928:31;;;;;8830:18:8;;;;8826:256;;;;2992:3:31;3026:10;9092:107:8;;2992:3:31;871:11928;;;1899:1:22;871:11928:31;;;;;3026:10;-1:-1:-1;;;;;;871:11928:31;;;;;;3026:10;9246:27:8;;871:11928:31;9246:27:8;;9849:96;;3026:10:31;1173:14:13;1169:744;;2992:3:31;871:11928;;;;;2825:6;871:11928;;2825:6;871:11928;;2972:9;;1169:744:13;871:11928:31;;;;;;1211:67:13;;;;;-1:-1:-1;;;1211:67:13;;3026:10:31;871:11928;1211:67:13;;871:11928:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:13;3026:10:31;871:11928;3026:10;1211:67:13;;871:11928:31;;1211:67:13;;;1169:744;-1:-1:-1;1207:696:13;;1518:385;;:::i;:::-;871:11928:31;;;1568:18:13;;;871:11928:31;;;-1:-1:-1;;;1672:39:13;;3026:10:31;871:11928;1672:39:13;;871:11928:31;1672:39:13;1564:325;871:11928:31;1758:113:13;;1207:696;-1:-1:-1;;;;;;;;;871:11928:31;;1325:51:13;1321:182;;871:11928:31;1169:744:13;;;1321:182;871:11928:31;;;-1:-1:-1;;;1445:39:13;;3026:10:31;871:11928;1445:39:13;;871:11928:31;1445:39:13;1211:67;;;;871:11928:31;1211:67:13;;871:11928:31;1211:67:13;;;;;;871:11928:31;1211:67:13;;;:::i;:::-;;;871:11928:31;;;;;-1:-1:-1;;;;;;871:11928:31;;;;;;1211:67:13;;;;;;;-1:-1:-1;1211:67:13;;9849:96:8;871:11928:31;;;9903:31:8;;;871:11928:31;;9903:31:8;;871:11928:31;9903:31:8;9092:107;3026:10:31;871:11928;;9156:9:8;871:11928:31;;;;;;;;;;;9092:107:8;;8826:256;8988:5;;871:11928:31;;15066:15:8;871:11928:31;;;;;-1:-1:-1;;;;;;871:11928:31;;;;;14440:662:8;8988:5;871:11928:31;;;9037:9:8;871:11928:31;;;;;;;;;;;;8826:256:8;;9687:87;871:11928:31;;;-1:-1:-1;;;9730:33:8;;871:11928:31;;9730:33:8;;871:11928:31;9730:33:8;871:11928:31;;;;-1:-1:-1;;;871:11928:31;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;871:11928:31;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;871:11928:31;;;;;;;;;;;;;;;;;;2774:19;871:11928;2792:1;871:11928;;2785:8;;2774:19;;871:11928;;;;-1:-1:-1;;;871:11928:31;;;;;;;;;;;;;;;;;;2698:86:22;871:11928:31;;;2743:30:22;;;;871:11928:31;;;;;;-1:-1:-1;;871:11928:31;;;;;;;2473:7:8;871:11928:31;2473:7:8;871:11928:31;;;;;:::i;:::-;;;;;;;;2473:7:8;871:11928:31;;2473:7:8;;871:11928:31;2473:7:8;;;871:11928:31;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;2473:7:8;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;871:11928:31;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;;;;;;;;;;;-1:-1:-1;871:11928:31;;-1:-1:-1;871:11928:31;;-1:-1:-1;871:11928:31;;;;;;;-1:-1:-1;;871:11928:31;;;;;-1:-1:-1;;;;;1710:6:0;871:11928:31;;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;;;;;;;;;;;2112:17;1500:62:0;;;:::i;:::-;871:11928:31;;2081:15;871:11928;;;;;;2081:15;871:11928;;;;;;2112:17;871:11928;;;;;;;-1:-1:-1;;871:11928:31;;;;;;1271:38;871:11928;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1271:38;871:11928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;871:11928:31;;;;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;1500:62:0;;:::i;:::-;871:11928:31;-1:-1:-1;;;;;3004:6:0;871:11928:31;-1:-1:-1;;;;;;871:11928:31;;3004:6:0;871:11928:31;;3052:40:0;;;;871:11928:31;;;;;;;-1:-1:-1;;871:11928:31;;;;-1:-1:-1;;;;;871:11928:31;;:::i;:::-;;1947:19:8;;1943:87;;871:11928:31;;2046:9:8;871:11928:31;;;;;;;;;;;;;1943:87:8;871:11928:31;;;1989:30:8;;;871:11928:31;;1989:30:8;;871:11928:31;1989:30:8;871:11928:31;;;;;;-1:-1:-1;;871:11928:31;;;;;1150:24;871:11928;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;-1:-1:-1;;;;;1199:21:31;871:11928;;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;2192:22:8;871:11928:31;;2192:22:8;:::i;:::-;-1:-1:-1;;;;;871:11928:31;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;1081:21;871:11928;;;;;;;;;;;;;;;;;;;;;;;;;;5470:7:8;871:11928:31;;-1:-1:-1;;;;;871:11928:31;;;;;;;735:10:19;;8704:18:8;;8700:86;;;;871:11928:31;8830:18:8;;;5470:7;871:11928:31;8830:18:8;;8826:256;;871:11928:31;;;;;;;;-1:-1:-1;;;;;;871:11928:31;;;;;9246:27:8;;;;871:11928:31;8826:256:8;8988:5;;871:11928:31;;15066:15:8;871:11928:31;;;;;-1:-1:-1;;;;;;871:11928:31;;;;;14440:662:8;8988:5;871:11928:31;;;9037:9:8;871:11928:31;;;;;;;;;;;;8826:256:8;;8700:86;6185:127;;;8700:86;6862:39;;6858:255;;8700:86;;;;6858:255;-1:-1:-1;871:11928:31;;;;;;6967:31:8;-1:-1:-1;;;6967:31:8;;871:11928:31;6967:31:8;;871:11928:31;6967:31:8;6917:186;871:11928:31;;-1:-1:-1;;;7044:44:8;;735:10:19;871:11928:31;7044:44:8;;871:11928:31;;;;;;;;;;7044:44:8;6185:127;735:10:19;6223:16:8;;;-1:-1:-1;6223:52:8;;;;6185:127;6223:88;;;;6185:127;;;;;6223:88;871:11928:31;;;;;;;;735:10:19;871:11928:31;;;;;;6279:32:8;6223:88;;;:52;871:11928:31;;;;;3776:18:8;871:11928:31;;;;;735:10:19;871:11928:31;;;;;;;;;;6223:52:8;;;871:11928:31;;;;4851:4:8;871:11928:31;;;:::i;:::-;;;;;;;;:::i;:::-;;;;4766:7:8;;;;;:::i;871:11928:31:-;;;;;;-1:-1:-1;;871:11928:31;;;;1500:62:0;;:::i;:::-;12781:6:31;12681:21;-1:-1:-1;;;;;12729:6:31;871:11928;;;12718:26;871:11928;;;;;;12718:26;12781:6;:::i;871:11928::-;;;;;;-1:-1:-1;;871:11928:31;;;;;;1229:35;871:11928;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1229:35;871:11928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;871:11928:31;;;;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;;;;2517:17:14;871:11928:31;;;;;;-1:-1:-1;;;;;871:11928:31;;;;;;2678:29:14;;;2674:173;;871:11928:31;;2882:27:14;871:11928:31;;;;;;2882:27:14;:::i;:::-;871:11928:31;;;-1:-1:-1;;;;;871:11928:31;;;;;;;;;;;;;;;2674:173:14;2741:19;871:11928:31;;;;;-1:-1:-1;871:11928:31;;;-1:-1:-1;2882:27:14;2674:173;;871:11928:31;;;;;;-1:-1:-1;;871:11928:31;;;;;;1318:27;871:11928;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;871:11928:31;;;;;;:::i;:::-;;;14663:22:8;;;:::i;:::-;735:10:19;14813:18:8;;:35;;;871:11928:31;14813:69:8;;;871:11928:31;14809:142:8;;871:11928:31;;-1:-1:-1;;;;;871:11928:31;;;;;;;15003:28:8;871:11928:31;15003:28:8;;871:11928:31;;;;;;;;;-1:-1:-1;;;;;;871:11928:31;;;;;;;;;14809:142:8;871:11928:31;;;14909:27:8;;;735:10:19;871:11928:31;14909:27:8;;871:11928:31;14909:27:8;14813:69;871:11928:31;-1:-1:-1;;;;;871:11928:31;;;;3776:18:8;871:11928:31;;;;;735:10:19;871:11928:31;;;;;;;;;;14852:30:8;14813:69;;:35;735:10:19;;-1:-1:-1;;;;;871:11928:31;;14835:13:8;;14813:35;;871:11928:31;;;;;;-1:-1:-1;;871:11928:31;;;;;;3385:22:8;;;:::i;:::-;;871:11928:31;;;;;;-1:-1:-1;;;;;871:11928:31;;;;;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;871:11928:31;;;;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;;;;;-1:-1:-1;;;;;;871:11928:31;;;;;;;2207:41:14;2222:26;871:11928:31;2207:41:14;;:81;;;;;871:11928:31;;;;;;;2207:81:14;1679:25:8;1664:40;;;-1:-1:-1;1664:104:8;;;;2207:81:14;1664:156:8;;;;2207:81:14;;;;;1664:156:8;844:25:26;829:40;;;1664:156:8;;;:104;1735:33;1720:48;;;-1:-1:-1;1664:104:8;;871:11928:31;;;;;;;;-1:-1:-1;;871:11928:31;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;871:11928:31;;;;:::o;:::-;;;;-1:-1:-1;;;;;871:11928:31;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;871:11928:31;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;871:11928:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;4122:69;871:11928;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;871:11928:31;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3852:578:8:-;;;-1:-1:-1;;;;;871:11928:31;;;3946:16:8;;;3942:87;;-1:-1:-1;871:11928:31;;;;;;;5470:7:8;871:11928:31;;;;;;;;;;735:10:19;;;;8704:18:8;;8700:86;;;3852:578;8830:18;;5470:7;9246:27;8830:18;;8826:256;;3852:578;871:11928:31;;;9156:9:8;871:11928:31;;;;;9096:16:8;871:11928:31;;;;;;;;;;;;;-1:-1:-1;;;;;;871:11928:31;;;;;;9246:27:8;;871:11928:31;4319:21:8;;;;4315:109;;3852:578;;;;:::o;4315:109::-;871:11928:31;;;;4363:50:8;;;;;;;871:11928:31;;;;;;;;;4363:50:8;8826:256;8988:5;;871:11928:31;;15066:15:8;871:11928:31;;;;;-1:-1:-1;;;;;;871:11928:31;;;;;14440:662:8;8988:5;871:11928:31;;;9037:9:8;871:11928:31;;;;;;;-1:-1:-1;;871:11928:31;;;8826:256:8;;8700:86;6185:127;;;;;;;;;8700:86;6862:39;6858:255;;8700:86;;;;;;;;6858:255;6921:19;;;871:11928:31;;;;;6967:31:8;-1:-1:-1;;;6967:31:8;;;;;871:11928:31;6967:31:8;6917:186;871:11928:31;;-1:-1:-1;;;7044:44:8;;735:10:19;7044:44:8;;;871:11928:31;;;;;;;;;;7044:44:8;6185:127;735:10:19;;6223:16:8;;:52;;;;6185:127;6223:88;6185:127;6223:88;871:11928:31;;;;5705:15:8;871:11928:31;;735:10:19;871:11928:31;;;;;;6279:32:8;6185:127;;6223:52;871:11928:31;;;;3776:18:8;871:11928:31;;;;;735:10:19;871:11928:31;;;;;;;;;;6223:52:8;;871:11928:31;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;871:11928:31;;;;;;;;-1:-1:-1;;871:11928:31;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;871:11928:31;;;;;;;;;;;;;;;;;;3475:255;3659:3;3641:14;871:11928;3475:255;871:11928;-1:-1:-1;871:11928:31;5470:7:8;871:11928:31;;3556:46;-1:-1:-1;;;;;871:11928:31;-1:-1:-1;871:11928:31;;;3564:31;;3556:46;:::i;:::-;3641:14;:::i;:::-;871:11928;;3686:1;3678:9;;3674:25;;3475:255;:::o;3674:25::-;3686:1;871:11928;;;;;;3475:255;:::o;871:11928::-;6591:5;871:11928;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;6591:5;-1:-1:-1;871:11928:31;;;-1:-1:-1;871:11928:31;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;871:11928:31;;;-1:-1:-1;;871:11928:31;;;;;;;;-1:-1:-1;871:11928:31:o;:::-;6603:10;871:11928;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;6603:10;-1:-1:-1;871:11928:31;;;-1:-1:-1;871:11928:31;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;15858:241:8;871:11928:31;-1:-1:-1;871:11928:31;5470:7:8;871:11928:31;;-1:-1:-1;;;;;871:11928:31;-1:-1:-1;871:11928:31;;;15987:19:8;;;15983:88;;16080:12;15858:241;:::o;15983:88::-;871:11928:31;;;;16029:31:8;-1:-1:-1;;;16029:31:8;;;;;871:11928:31;16029:31:8;1796:162:0;-1:-1:-1;;;;;1710:6:0;871:11928:31;;735:10:19;1855:23:0;1851:101;;1796:162::o;1851:101::-;871:11928:31;;;1901:40:0;;;735:10:19;1901:40:0;;;871:11928:31;1901:40:0;871:11928:31;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;871:11928:31;;;;:::o;:::-;;;:::o;1290:365:15:-;1375:21;;:30;1371:125;;1548:33;871:11928:31;;;-1:-1:-1;;;;;871:11928:31;;;1548:33:15;;;;:::i;:::-;1595:8;;1591:58;;1290:365;:::o;1591:58::-;871:11928:31;;5690:21:15;:17;;5815:105;;;;;;5686:301;5957:19;871:11928:31;;5957:19:15;;;;1371:125;871:11928:31;1455:21:15;;871:11928:31;;;1428:57:15;;;;;;;871:11928:31;;;;;1428:57:15;993:926:13;;;1173:14;;1169:744;;993:926;;;;;;:::o;1169:744::-;871:11928:31;;-1:-1:-1;;;;;871:11928:31;;;;;;;;;;-1:-1:-1;;;1211:67:13;;;;871:11928:31;1211:67:13;;;871:11928:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:13;1190:1;1211:67;1190:1;;1211:67;;;;;;;;;;;;1169:744;-1:-1:-1;;1207:696:13;;1518:385;;;:::i;:::-;871:11928:31;;;;1568:18:13;;;871:11928:31;;;;1672:39:13;-1:-1:-1;;;1672:39:13;;1211:67;1672:39;;871:11928:31;1672:39:13;1564:325;1211:67;1758:113;;;;1207:696;-1:-1:-1;;;;;;871:11928:31;1325:51:13;1321:182;;1207:696;1169:744;;;;;;;1321:182;871:11928:31;;;;1445:39:13;-1:-1:-1;;;1445:39:13;;1211:67;1445:39;;871:11928:31;1445:39:13;1211:67;;;;;;;;;;;;;;;;;;;:::i;:::-;;;871:11928:31;;;;;;-1:-1:-1;;;;;;871:11928:31;;;;;;1211:67:13;;;;;;871:11928:31;;;;;;;1211:67:13;;;-1:-1:-1;1211:67:13;;3257:156:31;871:11928;;3349:55;;;3374:4;;871:11928;;;;;;;;3390:13;871:11928;;;;;3349:55;;;;;:::i;:::-;871:11928;3339:66;;3257:156;:::o;871:11928::-;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;871:11928:31;;;;;;;;3738:249;871:11928;;3820:2;3815:7;;;3811:31;;3862:2;3857:7;;;3853:27;;3900:2;3895:7;;;3891:27;;3938:2;-1:-1:-1;3933:7:31;3929:27;;871:11928;;;;;:::i;:::-;;;;;;;;;3738:249;:::o;3929:27::-;871:11928;;;;;:::i;:::-;;;;;;;;;3942:14;:::o;3891:27::-;871:11928;;;;;;:::i;:::-;;;;;;;;;3904:14;:::o;3853:27::-;871:11928;;;;;;:::i;:::-;;;;;;;;;3866:14;:::o;3811:31::-;871:11928;;;;;;:::i;:::-;;;;;;;;;3824:18;:::o;871:11928::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;1308:634:25:-;1430:17;-1:-1:-1;29291:8:28;;29282:17;;;;29278:103;;1308:634:25;29407:8:28;;29398:17;;;;29394:103;;1308:634:25;29523:8:28;;29514:17;;;;29510:103;;1308:634:25;29639:7:28;;29630:16;;;;29626:100;;1308:634:25;29752:7:28;;29743:16;;;;29739:100;;1308:634:25;29856:16:28;29865:7;29856:16;;;29852:100;;1308:634:25;29978:7:28;;29969:16;;;29965:66;;1308:634:25;1450:1;871:11928:31;;1545:94:25;1488:18;1450:1;871:11928:31;;1488:18:25;:::i;:::-;1520:11;1545:94;;;1652:247;1450:1;;;1652:247;1912:13;;;;1308:634;:::o;1652:247::-;-1:-1:-1;;871:11928:31;;;;1706:111:25;;;;;871:11928:31;1706:111:25;871:11928:31;1867:10:25;;;1863:21;;1652:247;;;;;1863:21;1879:5;;29965:66:28;871:11928:31;30015:1:28;871:11928:31;29965:66:28;;;29852:100;871:11928:31;;29865:7:28;29936:1;871:11928:31;;;;29852:100:28;;;29739;29823:1;871:11928:31;;;;;;29739:100:28;;;;29626;29710:1;871:11928:31;;;;;;29626:100:28;;;;29510:103;29596:2;871:11928:31;;;;;;29510:103:28;;;;29394;29480:2;871:11928:31;;;;;;29394:103:28;;;;29278;29364:2;;-1:-1:-1;871:11928:31;;;-1:-1:-1;29278:103:28;;;871:11928:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;4863:1085::-;871:11928;;;;;;5026:22;5052:16;5026:42;;5052:16;;871:11928;;;;;;;;:::i;:::-;;;;;;;5110:37;:::o;5022:919::-;5195:18;5169:44;;5195:18;;871:11928;;;;;;;;:::i;:::-;;;;;;;;;;;;5254:46;:::o;5165:776::-;5348:18;5322:44;;5348:18;;871:11928;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5422:94;:::o;5318:623::-;5564:18;5538:44;5564:18;;871:11928;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5630:100;:::o;5534:407::-;871:11928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5811:118;:::o;1186:3994:17:-;;;;871:11928:31;;1515:16:17;1511:31;;871:11928:31;;2537:1:17;;871:11928:31;2537:1:17;871:11928:31;;;;;;;2542:1:17;;871:11928:31;;;;;;;;;2606:24:17;871:11928:31;2537:1:17;871:11928:31;;;;2606:24:17;:::i;:::-;2641:2509;;;;;;;;;;;;;;;;;;;1530:1;2641:2509;;;;;;;;;;;;2542:1;2641:2509;;;;;;;;2542:1;2641:2509;2542:1;;;2641:2509;;;;5160:13;1186:3994;:::o;2641:2509::-;;;-1:-1:-1;;2641:2509:17;;1186:3994;:::o;2641:2509::-;-1:-1:-1;2641:2509:17;;;-1:-1:-1;;2641:2509:17;;;-1:-1:-1;;2641:2509:17;;1186:3994;:::o;2641:2509::-;;;;;;;;;;;871:11928:31;2641:2509:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1511:31;871:11928:31;;;;;;;;:::i;:::-;1530:1:17;871:11928:31;;1533:9:17;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","brand()":"2d9fff01","burn(uint256)":"42966c68","collection()":"7de1e536","deliciousnessOf(uint256)":"c60d7e46","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","maxSupply()":"d5abeb01","mint(uint256)":"a0712d68","mintOpen()":"24bbd049","mintPrice()":"6817c76c","name()":"06fdde03","nextId()":"61b8ce8c","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","payout()":"63bd1d4a","renounceOwnership()":"715018a6","royaltyInfo(uint256,uint256)":"2a55205a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBranding(string,string)":"c1d2b11d","setMintPrice(uint256)":"f4a0a528","setPayout(address)":"a3ff39b2","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","toggleMint(bool)":"8a4dcd85","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"royaltyBps\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payout\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newBrand\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newCollection\",\"type\":\"string\"}],\"name\":\"BrandingUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"MintPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"MintToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPayout\",\"type\":\"address\"}],\"name\":\"PayoutAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"brand\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collection\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deliciousnessOf\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_brand\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_collection\",\"type\":\"string\"}],\"name\":\"setBranding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"p\",\"type\":\"uint256\"}],\"name\":\"setMintPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"p\",\"type\":\"address\"}],\"name\":\"setPayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"iid\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"toggleMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StaticFruitDeliciousAnimated.sol\":\"StaticFruitDeliciousAnimated\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xdee1ff07172e443c6600581fc4f11e7830a6d33e4e551752935b835d52a09404\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c503b5573ecd8d18157903b6760e02e8f86b47238c997d6dd04b99df74ef532d\",\"dweb:/ipfs/QmSGcRgfe18dtR4t3erYBSq3W6tPGXHPZ3JKkD1yFJsNsm\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0xa33062c6e0675a74a27b06a4ae4c6ad4d3b7219e27d9c146a4ac57295096d393\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://777543d88013fdd0ee7f47ac619fb13a1993bb667675d8816fde024f73cfbf2d\",\"dweb:/ipfs/QmfDS9uL1XZ2oUe1PH8eRCRyu3Hf98cK8ksGf4Ww7kg5zv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xed82055e8e44241f0f55892198960452018fa743e419ba469a2583c43103965a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07187a5099b0d5ddc124f9e6e287063795096c3f46a61563e3b6f6def88958b2\",\"dweb:/ipfs/QmSkxuUbThjVLpQmP4TW1LibWEVpXShsn3mSsXuWZVetL4\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/StaticFruitDeliciousAnimated.sol\":{\"keccak256\":\"0x08ff3d938cfd7849c3d6f5993c3b4b30a6d36238bbd43f4a1f72d10560c90161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb84b2d84957daca534eff12f8574f15d6918cd23a2c7818424c7b0db7531a56\",\"dweb:/ipfs/Qmb1yMDrZYfhsEfBreyPWgSLbvMzXSFCPgjMwy6muc3tea\"]}},\"version\":1}"}},"contracts/StaticSeeds.sol":{"StaticSeeds":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"theme","type":"string"}],"name":"HoroscopeClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"sign","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SeedMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"MAX_SUPPLY_PER_SIGN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINT_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"theme","type":"string"}],"name":"claimHoroscope","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getSign","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"sign","type":"string"}],"name":"getTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"sign","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintSeed","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"signToTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenIdToSign","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userMints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":1523,"id":null,"parameterSlots":0,"returnSlots":1},"memory_array_index_access_string":{"entryPoint":1555,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608034620005ee57601f6200252438819003918201601f191683019291906001600160401b038411838510176200051b578160209284926040968752833981010312620005ee57516001600160a01b0380821691829003620005ee578251606081016001600160401b038111828210176200051b578452602e81527f68747470733a2f2f73746174696366727569742e78797a2f6170692f6d65746160208201526d3230ba3097bdb4b23e973539b7b760911b84820152600254600181811c91168015620005e3575b6020821014620005cd57601f811162000562575b50602090600260005260206000209160005b6020811062000549575001516001600160901b0319169055605d60025581156200053157600380546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360016004908155815161018081016001600160401b038111828210176200051b57835262000179620005f3565b6005815264617269657360d81b6020820152815262000197620005f3565b600681526574617572757360d01b60208201526020820152620001b9620005f3565b600681526567656d696e6960d01b602082015283820152620001da620005f3565b600681526531b0b731b2b960d11b60208201526060820152620001fc620005f3565b60038152626c656f60e81b602082015260808201526200021b620005f3565b6005815264766972676f60d81b602082015260a08201526200023c620005f3565b60058152646c6962726160d81b602082015260c08201526200025d620005f3565b600781526673636f7270696f60c81b602082015260e082015262000280620005f3565b600b81526a736167697474617269757360a81b6020820152610100820152620002a8620005f3565b600981526831b0b83934b1b7b93760b91b6020820152610120820152620002ce620005f3565b6008815267617175617269757360c01b6020820152610140820152620002f3620005f3565b600681526570697363657360d01b602082015261016082015260005b600c811062000327578351611ee890816200063c8239f35b6001810180821162000506576200033f828462000613565b5185519080519060005b828110620004f3575050906020818493810160058152030190205562000370828462000613565b516000918252600660205290859020815190916001600160401b038211620004de578254600181811c91168015620004d3575b6020821014620004be57601f811162000471575b50602090601f8311600114620003fe5760019493929160009183620003f2575b5050600019600383901b1c191690841b1790555b016200030f565b015190503880620003d7565b908360005260206000209160005b601f19851681106200045857509183916001969594938794601f198116106200043e575b505050811b019055620003eb565b015160001960f88460031b161c1916905538808062000430565b919260206001819286850151815501940192016200040c565b836000526020600020601f840160051c81019160208510620004b3575b601f0160051c01905b818110620004a65750620003b7565b6000815560010162000497565b90915081906200048e565b602287634e487b7160e01b6000525260246000fd5b90607f1690620003a3565b604186634e487b7160e01b6000525260246000fd5b6020818301810151858301520162000349565b601184634e487b7160e01b6000525260246000fd5b634e487b7160e01b600052604160045260246000fd5b8251631e4fbdf760e01b815260006004820152602490fd5b90926020600181928686015181550194019101620000ee565b6002600052601f0160051c7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace017f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad05b818110620005c05750620000dc565b60008155600101620005b1565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000c8565b600080fd5b60408051919082016001600160401b038111838210176200051b57604052565b90600c811015620006255760051b0190565b634e487b7160e01b600052603260045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461017157806301ffc9a71461016c5780630e89341c146101675780631e7663bc146101625780632462a2521461015d5780632eb2c2d6146101585780633ccfd60b1461015357806349d7f0741461014e5780634e1273f41461014957806356f0866c14610144578063715018a61461013f5780638da5cb5b1461013a57806393fb6e8714610135578063a22cb46514610130578063bd85b0391461012b578063c002d23d14610126578063cd49618c14610121578063e985e9c51461011c578063ec8451da1461010d578063f242432a14610117578063f2fde38b146101125763f4a79b241461010d57600080fd5b610eff565b61113d565b611010565b610e9d565b610e55565b610e33565b610e07565b610d2a565b610bc8565b610ba1565b610b38565b610abf565b6109ed565b6108c1565b6107d9565b61069f565b610543565b610507565b610331565b61021b565b6101bb565b600435906001600160a01b038216820361018c57565b600080fd5b602435906001600160a01b038216820361018c57565b35906001600160a01b038216820361018c57565b3461018c57604036600319011261018c5760206102006101d9610176565b602435600052600083526040600020906001600160a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b031981160361018c57565b3461018c57602036600319011261018c5760206001600160e01b031960043561024381610209565b167fd9b67a260000000000000000000000000000000000000000000000000000000081149081156102ab575b8115610281575b506040519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438610276565b7f0e89341c000000000000000000000000000000000000000000000000000000008114915061026f565b60005b8381106102e85750506000910152565b81810151838201526020016102d8565b90602091610311815180928185528580860191016102d5565b601f01601f1916010190565b90602061032e9281815201906102f8565b90565b3461018c57602036600319011261018c5760043561034d6111e9565b600091807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000081818110156104cb575b50506d04ee2d6d415b85acef8100000000808310156104bc575b50662386f26fc10000808310156104ad575b506305f5e1008083101561049e575b506127108083101561048f575b50606482101561047f575b600a80921015610475575b6001908160216103e7600188016115da565b96870101905b610432575b60405161042e90610422816104148a61040e602084018c610aa8565b90610aa8565b03601f198101835282610597565b6040519182918261031d565b0390f35b600019019083907f30313233343536373839616263646566000000000000000000000000000000008282061a835304918215610470579190826103ed565b6103f2565b92600101926103d5565b92906064600291049101926103ca565b600491949204910192386103bf565b600891949204910192386103b2565b601091949204910192386103a3565b60209194920491019238610391565b604095500491503880610377565b9181601f8401121561018c5782359167ffffffffffffffff831161018c576020838186019501011161018c57565b3461018c57602036600319011261018c5760043567ffffffffffffffff811161018c5761020061053d60209236906004016104d9565b9061130c565b3461018c57600036600319011261018c5760206040516127108152f35b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761059257604052565b610560565b90601f8019910116810190811067ffffffffffffffff82111761059257604052565b67ffffffffffffffff81116105925760051b60200190565b9080601f8301121561018c5760209082356105eb816105b9565b936105f96040519586610597565b81855260208086019260051b82010192831161018c57602001905b828210610622575050505090565b81358152908301908301610614565b67ffffffffffffffff811161059257601f01601f191660200190565b92919261065982610631565b916106676040519384610597565b82948184528183011161018c578281602093846000960137010152565b9080601f8301121561018c5781602061032e9335910161064d565b3461018c5760a036600319011261018c576106b8610176565b6106c0610191565b906044359167ffffffffffffffff9081841161018c576106e5600494369086016105d1565b9060643583811161018c576106fd90369087016105d1565b9260843590811161018c576107159036908701610684565b936001600160a01b038082169033821415806107a4575b6107775783161561075f571561074857610746955061199b565b005b602486600060405191626a0d4560e21b8352820152fd5b602487600060405191632bfa23e760e11b8352820152fd5b6040805163711bec9160e11b815233818b019081526001600160a01b038616602082015290918291010390fd5b5081600052600160205260ff6107d1336040600020906001600160a01b0316600052602052604060002090565b54161561072c565b3461018c576000806003193601126108be576107f361160c565b47906001600160a01b0360035416807f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b656020604051868152a2824710610886578180809481935af1610843611650565b901561084d575080f35b80511561085c57602081519101fd5b60046040517fd6bda275000000000000000000000000000000000000000000000000000000008152fd5b6040517fcf47918100000000000000000000000000000000000000000000000000000000815247600482015260248101849052604490fd5b80fd5b3461018c57604036600319011261018c5760043560243567ffffffffffffffff811161018c576108f59036906004016104d9565b6108fd611680565b60008381526020818152604080832033845290915290205415610964576109577f8eb20336e0911a379870111ec015103173254d8f89a70b406fe0d198f87294709161094985336116bb565b604051918291339583611346565b0390a36107466001600455565b606460405162461bcd60e51b815260206004820152601160248201527f4e6f20736565647320746f20636c61696d0000000000000000000000000000006044820152fd5b90815180825260208080930193019160005b8281106109c8575050505090565b8351855293810193928101926001016109ba565b90602061032e9281815201906109a8565b3461018c57604036600319011261018c5760043567ffffffffffffffff80821161018c573660238301121561018c578160040135610a2a816105b9565b92610a386040519485610597565b8184526020916024602086019160051b8301019136831161018c57602401905b828210610a91578560243586811161018c5761042e91610a7f610a859236906004016105d1565b90611381565b604051918291826109dc565b838091610a9d846101a7565b815201910190610a58565b90610abb602092828151948592016102d5565b0190565b3461018c57602036600319011261018c5760043567ffffffffffffffff811161018c573660238201121561018c57610b1c6020610b0961042e93369060248160040135910161064d565b81604051938285809451938492016102d5565b8101600581520301902054604051918291829190602083019252565b3461018c576000806003193601126108be57610b5261160c565b806001600160a01b0360035473ffffffffffffffffffffffffffffffffffffffff198116600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b3461018c57600036600319011261018c5760206001600160a01b0360035416604051908152f35b604036600319011261018c5760043567ffffffffffffffff811161018c57610bf49036906004016104d9565b907f38f7c5c3827fcb56dabd1150e538e385707d18e91dd676ff68cf63cfa07d0af7602435610c21611680565b610c2b848461130c565b5493610c3885151561143f565b610c4c610c44836114a0565b3410156114bc565b610c77612710610c7084610c6a896000526007602052604060002090565b54611507565b1115611514565b610cb7600a610cb084610c6a89610ca1336001600160a01b03166000526008602052604060002090565b90600052602052604060002090565b111561155f565b610ccb856000526007602052604060002090565b610cd6838254611507565b9055610cf985610ca1336001600160a01b03166000526008602052604060002090565b610d04838254611507565b9055610d19610d116115aa565b838733611852565b6109576040519283923396846115bd565b3461018c57604036600319011261018c57610d43610176565b60243580151580820361018c576001600160a01b038316928315610dd657610d8b903360005260016020526040600020906001600160a01b0316600052602052604060002090565b9060ff801983541691161790557f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160405180610dd1339482919091602081019215159052565b0390a3005b60246040517fced3e10000000000000000000000000000000000000000000000000000000000815260006004820152fd5b3461018c57602036600319011261018c5760043560005260076020526020604060002054604051908152f35b3461018c57600036600319011261018c576020604051662386f26fc100008152f35b3461018c57604036600319011261018c576001600160a01b03610e76610176565b16600052600860205260406000206024356000526020526020604060002054604051908152f35b3461018c57604036600319011261018c57602060ff610ef3610ebd610176565b6001600160a01b03610ecd610191565b9116600052600184526040600020906001600160a01b0316600052602052604060002090565b54166040519015158152f35b3461018c5760208060031936011261018c5760006004358152600682526040812091604051918084549460018660011c9360018816928315611006575b8686108414610ff2578798610f58878a98999a60209181520190565b94908115610fd15750600114610f8b575b8588610f7782880383610597565b61042e6040519282849384528301906102f8565b610f9e9196929450600052602060002090565b94925b86828510610fbb57505050610f7793500138808080610f69565b8654858501529581019588955090930192610fa1565b9350505050610f779491925060ff19168252151560051b0138808080610f69565b602482634e487b7160e01b81526022600452fd5b94607f1694610f3c565b3461018c5760a036600319011261018c57611029610176565b611031610191565b60843567ffffffffffffffff811161018c57611051903690600401610684565b906001600160a01b03808416903382141580611108575b6110e1578216156110c957156110b257610746926110aa6064356044359160405192600184526020840152604083019160018352606084015260808301604052565b92909161199b565b6024604051626a0d4560e21b815260006004820152fd5b6024604051632bfa23e760e11b815260006004820152fd5b60405163711bec9160e11b81523360048201526001600160a01b0386166024820152604490fd5b5081600052600160205260ff611135336040600020906001600160a01b0316600052602052604060002090565b541615611068565b3461018c57602036600319011261018c57611156610176565b61115e61160c565b6001600160a01b038091169081156111b8576003548273ffffffffffffffffffffffffffffffffffffffff19821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b6040519060006002549060018260011c92600181169182156112d5575b6020916020861084146112c1578588528794936020860193929181156112a25750600114611240575b50505061123e92500383610597565b565b92509361126f60026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90565b946000935b82851061128c5750505061123e93500138808061122f565b8654858501529586019588955093810193611274565b9250505061123e9491925060ff19168252151560051b0138808061122f565b602485634e487b7160e01b81526022600452fd5b93607f1693611206565b6113089160005260006020526040600020906001600160a01b0316600052602052604060002090565b5490565b6020908260405193849283378101600581520301902090565b908060209392818452848401376000828201840152601f01601f1916010190565b91602061032e938181520191611325565b805182101561136b5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b919091805183518082036114045750508051906113b66113a0836105b9565b926113ae6040519485610597565b8084526105b9565b60209190601f1901368484013760005b81518110156113fc57806113eb60019260051b85808287010151918a010151906112df565b6113f58287611357565b52016113c6565b509193505050565b6040517f5b05999100000000000000000000000000000000000000000000000000000000815260048101919091526024810191909152604490fd5b1561144657565b606460405162461bcd60e51b815260206004820152601360248201527f496e76616c6964207a6f64696163207369676e000000000000000000000000006044820152fd5b634e487b7160e01b600052601160045260246000fd5b90662386f26fc1000091808302928304036114b757565b61148a565b156114c357565b606460405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e74207061796d656e740000000000000000000000006044820152fd5b919082018092116114b757565b1561151b57565b606460405162461bcd60e51b815260206004820152601260248201527f45786365656473206d617820737570706c7900000000000000000000000000006044820152fd5b1561156657565b606460405162461bcd60e51b815260206004820152601860248201527f4d617820313020706572207573657220706572207369676e00000000000000006044820152fd5b604051906115b782610576565b60008252565b9392916020916115d591604087526040870191611325565b930152565b906115e482610631565b6115f16040519182610597565b8281528092611602601f1991610631565b0190602036910137565b6001600160a01b0360035416330361162057565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b3d1561167b573d9061166182610631565b9161166f6040519384610597565b82523d6000602084013e565b606090565b600260045414611691576002600455565b60046040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b6001600160a01b0381169182156110b2576116f5604051916001835260208301526040820190600182526001606084015260808301604052565b9190604094600060405161170881610576565b52815184519081810361140457505060005b82518110156117c8578060051b602080828601015191870101516117648661174c846000526000602052604060002090565b906001600160a01b0316600052602052604060002090565b54818110611792578661174c600195949361178b9303936000526000602052604060002090565b550161171a565b89516303dee4c560e01b81526001600160a01b038816600482015260248101919091526044810182905260648101839052608490fd5b5094506000939291506001815114841461181f5760209081015191810151604080519384529183015233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291819081015b0390a4565b60405133927f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb92829161181a9183611b8f565b909291926001600160a01b0382169384156110c95761188e60405192600184526020840152604083019160018352606084015260808301604052565b92815184519081810361140457505060005b82518110156118e8578060019160051b6118e06118d88761174c602080868b010151958c010151946000526000602052604060002090565b918254611507565b9055016118a0565b50929193600182511460001461195f5760208281015184820151604080519283529282015260009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a45b8051600103611955579060208061123e959301519101519133611e46565b61123e9333611c48565b60006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180611993888883611b8f565b0390a4611937565b94919091815184519081810361140457505060005b8251811015611a9b578060051b9060208083860101519287010151856001600160a01b0393848b16611a15575b60019482166119f0575b505050016119b0565b611a0b9161174c6118d8926000526000602052604060002090565b90553885816119e7565b9192939050611a328a61174c846000526000602052604060002090565b54838110611a645791879184600196959403611a5c8d61174c856000526000602052604060002090565b5594506119dd565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810184905260648101839052608490fd5b509491939290936001855114600014611b46576020858101518382015160408051928352928201526001600160a01b03838116929086169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b038116611b0f575b5050505050565b8451600103611b3557602080611b2b9601519201519233611e7b565b3880808080611b08565b611b4194919233611d43565b611b2b565b6001600160a01b03604051818316918516907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180611b87888c83611b8f565b0390a4611af9565b9091611ba661032e936040845260408401906109a8565b9160208184039101526109a8565b9081602091031261018c575161032e81610209565b92611bf961032e95936001600160a01b03611c07941686526000602087015260a0604087015260a08601906109a8565b9084820360608601526109a8565b9160808184039101526102f8565b939061032e9593611bf991611c07946001600160a01b03809216885216602087015260a0604087015260a08601906109a8565b9293919093843b611c5a575050505050565b602091611c7d604051948593849363bc197c8160e01b9889865260048601611bc9565b038160006001600160a01b0388165af160009181611d12575b50611cd55782611ca4611650565b8051919082611cce57604051632bfa23e760e11b81526001600160a01b0383166004820152602490fd5b6020915001fd5b6001600160e01b03191603611cef57503880808080611b08565b604051632bfa23e760e11b81526001600160a01b03919091166004820152602490fd5b611d3591925060203d602011611d3c575b611d2d8183610597565b810190611bb4565b9038611c96565b503d611d23565b939290949194853b611d58575b505050505050565b611d7b602093604051958694859463bc197c8160e01b998a875260048701611c15565b038160006001600160a01b0388165af160009181611dbd575b50611da25782611ca4611650565b6001600160e01b03191603611cef5750388080808080611d50565b611dd791925060203d602011611d3c57611d2d8183610597565b9038611d94565b909260a0926001600160a01b0361032e9695168352600060208401526040830152606082015281608082015201906102f8565b919261032e95949160a0946001600160a01b0380921685521660208401526040830152606082015281608082015201906102f8565b9293919093843b611e58575050505050565b602091611c7d604051948593849363f23a6e6160e01b9889865260048601611dde565b939290949194853b611e8f57505050505050565b611d7b602093604051958694859463f23a6e6160e01b998a875260048701611e1156fea26469706673582212209bb524b789fa8298e8176b61b02b0084a47d8df511ced99187d394679d0c75b764736f6c63430008180033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x5EE JUMPI PUSH1 0x1F PUSH3 0x2524 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT DUP4 DUP6 LT OR PUSH3 0x51B JUMPI DUP2 PUSH1 0x20 SWAP3 DUP5 SWAP3 PUSH1 0x40 SWAP7 DUP8 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x5EE JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 DUP3 SWAP1 SUB PUSH3 0x5EE JUMPI DUP3 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH3 0x51B JUMPI DUP5 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH32 0x68747470733A2F2F73746174696366727569742E78797A2F6170692F6D657461 PUSH1 0x20 DUP3 ADD MSTORE PUSH14 0x3230BA3097BDB4B23E973539B7B7 PUSH1 0x91 SHL DUP5 DUP3 ADD MSTORE PUSH1 0x2 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x5E3 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x5CD JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x562 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 LT PUSH3 0x549 JUMPI POP ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x90 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x5D PUSH1 0x2 SSTORE DUP2 ISZERO PUSH3 0x531 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x4 SWAP1 DUP2 SSTORE DUP2 MLOAD PUSH2 0x180 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH3 0x51B JUMPI DUP4 MSTORE PUSH3 0x179 PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x6172696573 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH3 0x197 PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x746175727573 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1B9 PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x67656D696E69 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP4 DUP3 ADD MSTORE PUSH3 0x1DA PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x31B0B731B2B9 PUSH1 0xD1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x1FC PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH3 0x6C656F PUSH1 0xE8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH3 0x21B PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x766972676F PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH3 0x23C PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x6C69627261 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH3 0x25D PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x73636F7270696F PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH3 0x280 PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0xB DUP2 MSTORE PUSH11 0x7361676974746172697573 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH3 0x2A8 PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x31B0B83934B1B7B937 PUSH1 0xB9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x120 DUP3 ADD MSTORE PUSH3 0x2CE PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH8 0x6171756172697573 PUSH1 0xC0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x140 DUP3 ADD MSTORE PUSH3 0x2F3 PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x706973636573 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST PUSH1 0xC DUP2 LT PUSH3 0x327 JUMPI DUP4 MLOAD PUSH2 0x1EE8 SWAP1 DUP2 PUSH3 0x63C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 DUP3 GT PUSH3 0x506 JUMPI PUSH3 0x33F DUP3 DUP5 PUSH3 0x613 JUMP JUMPDEST MLOAD DUP6 MLOAD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x4F3 JUMPI POP POP SWAP1 PUSH1 0x20 DUP2 DUP5 SWAP4 DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE PUSH3 0x370 DUP3 DUP5 PUSH3 0x613 JUMP JUMPDEST MLOAD PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE SWAP1 DUP6 SWAP1 KECCAK256 DUP2 MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x4DE JUMPI DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x4D3 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x4BE JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x471 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x3FE JUMPI PUSH1 0x1 SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH3 0x3F2 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR SWAP1 SSTORE JUMPDEST ADD PUSH3 0x30F JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x3D7 JUMP JUMPDEST SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH3 0x458 JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP7 SWAP6 SWAP5 SWAP4 DUP8 SWAP5 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x43E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x3EB JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x430 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x40C JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x4B3 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x4A6 JUMPI POP PUSH3 0x3B7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x497 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x48E JUMP JUMPDEST PUSH1 0x22 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x3A3 JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH3 0x349 JUMP JUMPDEST PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP2 ADD PUSH3 0xEE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 JUMPDEST DUP2 DUP2 LT PUSH3 0x5C0 JUMPI POP PUSH3 0xDC JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x5B1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xC8 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x51B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xC DUP2 LT ISZERO PUSH3 0x625 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x1E7663BC EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x2462A252 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x49D7F074 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x56F0866C EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x93FB6E87 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xC002D23D EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xCD49618C EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xEC8451DA EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x112 JUMPI PUSH4 0xF4A79B24 EQ PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFF JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST PUSH2 0x1010 JUMP JUMPDEST PUSH2 0xE9D JUMP JUMPDEST PUSH2 0xE55 JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0xB38 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x18C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x18C JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x18C JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH2 0x200 PUSH2 0x1D9 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x18C JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x4 CALLDATALOAD PUSH2 0x243 DUP2 PUSH2 0x209 JUMP JUMPDEST AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2AB JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x281 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x276 JUMP JUMPDEST PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x26F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2E8 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D8 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x311 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x32E SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x2F8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x34D PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP2 DUP2 DUP2 LT ISZERO PUSH2 0x4CB JUMPI JUMPDEST POP POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x4BC JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x4AD JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x49E JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x48F JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x47F JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x475 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x3E7 PUSH1 0x1 DUP9 ADD PUSH2 0x15DA JUMP JUMPDEST SWAP7 DUP8 ADD ADD SWAP1 JUMPDEST PUSH2 0x432 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP1 PUSH2 0x422 DUP2 PUSH2 0x414 DUP11 PUSH2 0x40E PUSH1 0x20 DUP5 ADD DUP13 PUSH2 0xAA8 JUMP JUMPDEST SWAP1 PUSH2 0xAA8 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x31D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x470 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST SWAP3 PUSH1 0x1 ADD SWAP3 PUSH2 0x3D5 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP3 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 CODESIZE PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 CODESIZE PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 CODESIZE PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 CODESIZE PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 SWAP6 POP DIV SWAP2 POP CODESIZE DUP1 PUSH2 0x377 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x18C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x18C JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x18C JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x200 PUSH2 0x53D PUSH1 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x4D9 JUMP JUMPDEST SWAP1 PUSH2 0x130C JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x592 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x592 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x592 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18C JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x5EB DUP2 PUSH2 0x5B9 JUMP JUMPDEST SWAP4 PUSH2 0x5F9 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x597 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x18C JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x622 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x614 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x592 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x659 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 PUSH2 0x667 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x597 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x18C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18C JUMPI DUP2 PUSH1 0x20 PUSH2 0x32E SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x64D JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH2 0x6B8 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x6C0 PUSH2 0x191 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 GT PUSH2 0x18C JUMPI PUSH2 0x6E5 PUSH1 0x4 SWAP5 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x5D1 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x6FD SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x5D1 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x715 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x684 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x7A4 JUMPI JUMPDEST PUSH2 0x777 JUMPI DUP4 AND ISZERO PUSH2 0x75F JUMPI ISZERO PUSH2 0x748 JUMPI PUSH2 0x746 SWAP6 POP PUSH2 0x199B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x24 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x7D1 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x72C JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8BE JUMPI PUSH2 0x7F3 PUSH2 0x160C JUMP JUMPDEST SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 PUSH1 0x20 PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE LOG2 DUP3 SELFBALANCE LT PUSH2 0x886 JUMPI DUP2 DUP1 DUP1 SWAP5 DUP2 SWAP4 GAS CALL PUSH2 0x843 PUSH2 0x1650 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x84D JUMPI POP DUP1 RETURN JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x85C JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x8F5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x8FD PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x964 JUMPI PUSH2 0x957 PUSH32 0x8EB20336E0911A379870111EC015103173254D8F89A70B406FE0D198F8729470 SWAP2 PUSH2 0x949 DUP6 CALLER PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1346 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x746 PUSH1 0x1 PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20736565647320746F20636C61696D000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x9C8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9BA JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x32E SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x9A8 JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x18C JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x18C JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0xA2A DUP2 PUSH2 0x5B9 JUMP JUMPDEST SWAP3 PUSH2 0xA38 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x597 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 PUSH1 0x20 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x18C JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xA91 JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x42E SWAP2 PUSH2 0xA7F PUSH2 0xA85 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x5D1 JUMP JUMPDEST SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x9DC JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0xA9D DUP5 PUSH2 0x1A7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA58 JUMP JUMPDEST SWAP1 PUSH2 0xABB PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x2D5 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x18C JUMPI PUSH2 0xB1C PUSH1 0x20 PUSH2 0xB09 PUSH2 0x42E SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x64D JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2D5 JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8BE JUMPI PUSH2 0xB52 PUSH2 0x160C JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x3 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH2 0xBF4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x4D9 JUMP JUMPDEST SWAP1 PUSH32 0x38F7C5C3827FCB56DABD1150E538E385707D18E91DD676FF68CF63CFA07D0AF7 PUSH1 0x24 CALLDATALOAD PUSH2 0xC21 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0xC2B DUP5 DUP5 PUSH2 0x130C JUMP JUMPDEST SLOAD SWAP4 PUSH2 0xC38 DUP6 ISZERO ISZERO PUSH2 0x143F JUMP JUMPDEST PUSH2 0xC4C PUSH2 0xC44 DUP4 PUSH2 0x14A0 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x14BC JUMP JUMPDEST PUSH2 0xC77 PUSH2 0x2710 PUSH2 0xC70 DUP5 PUSH2 0xC6A DUP10 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x1507 JUMP JUMPDEST GT ISZERO PUSH2 0x1514 JUMP JUMPDEST PUSH2 0xCB7 PUSH1 0xA PUSH2 0xCB0 DUP5 PUSH2 0xC6A DUP10 PUSH2 0xCA1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x155F JUMP JUMPDEST PUSH2 0xCCB DUP6 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xCD6 DUP4 DUP3 SLOAD PUSH2 0x1507 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xCF9 DUP6 PUSH2 0xCA1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD04 DUP4 DUP3 SLOAD PUSH2 0x1507 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xD19 PUSH2 0xD11 PUSH2 0x15AA JUMP JUMPDEST DUP4 DUP8 CALLER PUSH2 0x1852 JUMP JUMPDEST PUSH2 0x957 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH2 0x15BD JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH2 0xD43 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 DUP3 SUB PUSH2 0x18C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0xDD6 JUMPI PUSH2 0xD8B SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x40 MLOAD DUP1 PUSH2 0xDD1 CALLER SWAP5 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH7 0x2386F26FC10000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE76 PUSH2 0x176 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xEF3 PUSH2 0xEBD PUSH2 0x176 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xECD PUSH2 0x191 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP1 DUP5 SLOAD SWAP5 PUSH1 0x1 DUP7 PUSH1 0x1 SHR SWAP4 PUSH1 0x1 DUP9 AND SWAP3 DUP4 ISZERO PUSH2 0x1006 JUMPI JUMPDEST DUP7 DUP7 LT DUP5 EQ PUSH2 0xFF2 JUMPI DUP8 SWAP9 PUSH2 0xF58 DUP8 DUP11 SWAP9 SWAP10 SWAP11 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP5 SWAP1 DUP2 ISZERO PUSH2 0xFD1 JUMPI POP PUSH1 0x1 EQ PUSH2 0xF8B JUMPI JUMPDEST DUP6 DUP9 PUSH2 0xF77 DUP3 DUP9 SUB DUP4 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x42E PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0xF9E SWAP2 SWAP7 SWAP3 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP3 JUMPDEST DUP7 DUP3 DUP6 LT PUSH2 0xFBB JUMPI POP POP POP PUSH2 0xF77 SWAP4 POP ADD CODESIZE DUP1 DUP1 DUP1 PUSH2 0xF69 JUMP JUMPDEST DUP7 SLOAD DUP6 DUP6 ADD MSTORE SWAP6 DUP2 ADD SWAP6 DUP9 SWAP6 POP SWAP1 SWAP4 ADD SWAP3 PUSH2 0xFA1 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xF77 SWAP5 SWAP2 SWAP3 POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD CODESIZE DUP1 DUP1 DUP1 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP5 PUSH1 0x7F AND SWAP5 PUSH2 0xF3C JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH2 0x1029 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x1031 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x1051 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x684 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x1108 JUMPI JUMPDEST PUSH2 0x10E1 JUMPI DUP3 AND ISZERO PUSH2 0x10C9 JUMPI ISZERO PUSH2 0x10B2 JUMPI PUSH2 0x746 SWAP3 PUSH2 0x10AA PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1135 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x1068 JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH2 0x1156 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x115E PUSH2 0x160C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x3 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0x3 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x12D5 JUMPI JUMPDEST PUSH1 0x20 SWAP2 PUSH1 0x20 DUP7 LT DUP5 EQ PUSH2 0x12C1 JUMPI DUP6 DUP9 MSTORE DUP8 SWAP5 SWAP4 PUSH1 0x20 DUP7 ADD SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x12A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1240 JUMPI JUMPDEST POP POP POP PUSH2 0x123E SWAP3 POP SUB DUP4 PUSH2 0x597 JUMP JUMPDEST JUMP JUMPDEST SWAP3 POP SWAP4 PUSH2 0x126F PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x128C JUMPI POP POP POP PUSH2 0x123E SWAP4 POP ADD CODESIZE DUP1 DUP1 PUSH2 0x122F JUMP JUMPDEST DUP7 SLOAD DUP6 DUP6 ADD MSTORE SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x123E SWAP5 SWAP2 SWAP3 POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD CODESIZE DUP1 DUP1 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x1308 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x32E SWAP4 DUP2 DUP2 MSTORE ADD SWAP2 PUSH2 0x1325 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x136B JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1404 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x13B6 PUSH2 0x13A0 DUP4 PUSH2 0x5B9 JUMP JUMPDEST SWAP3 PUSH2 0x13AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x597 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x13FC JUMPI DUP1 PUSH2 0x13EB PUSH1 0x1 SWAP3 PUSH1 0x5 SHL DUP6 DUP1 DUP3 DUP8 ADD ADD MLOAD SWAP2 DUP11 ADD ADD MLOAD SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x13F5 DUP3 DUP8 PUSH2 0x1357 JUMP JUMPDEST MSTORE ADD PUSH2 0x13C6 JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1446 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207A6F64696163207369676E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH7 0x2386F26FC10000 SWAP2 DUP1 DUP4 MUL SWAP3 DUP4 DIV SUB PUSH2 0x14B7 JUMPI JUMP JUMPDEST PUSH2 0x148A JUMP JUMPDEST ISZERO PUSH2 0x14C3 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061796D656E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x14B7 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x151B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x1566 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820313020706572207573657220706572207369676E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x15B7 DUP3 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP4 SWAP3 SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x15D5 SWAP2 PUSH1 0x40 DUP8 MSTORE PUSH1 0x40 DUP8 ADD SWAP2 PUSH2 0x1325 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x15E4 DUP3 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x15F1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x597 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1602 PUSH1 0x1F NOT SWAP2 PUSH2 0x631 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER SUB PUSH2 0x1620 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x167B JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1661 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 PUSH2 0x166F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x597 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD EQ PUSH2 0x1691 JUMPI PUSH1 0x2 PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x10B2 JUMPI PUSH2 0x16F5 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 SWAP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1708 DUP2 PUSH2 0x576 JUMP JUMPDEST MSTORE DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1404 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x17C8 JUMPI DUP1 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP7 ADD ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH2 0x1764 DUP7 PUSH2 0x174C DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x1792 JUMPI DUP7 PUSH2 0x174C PUSH1 0x1 SWAP6 SWAP5 SWAP4 PUSH2 0x178B SWAP4 SUB SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE ADD PUSH2 0x171A JUMP JUMPDEST DUP10 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 POP PUSH1 0x0 SWAP4 SWAP3 SWAP2 POP PUSH1 0x1 DUP2 MLOAD EQ DUP5 EQ PUSH2 0x181F JUMPI PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP2 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 DUP2 SWAP1 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP3 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP3 DUP3 SWAP2 PUSH2 0x181A SWAP2 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 DUP5 ISZERO PUSH2 0x10C9 JUMPI PUSH2 0x188E PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1404 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x18E8 JUMPI DUP1 PUSH1 0x1 SWAP2 PUSH1 0x5 SHL PUSH2 0x18E0 PUSH2 0x18D8 DUP8 PUSH2 0x174C PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x1507 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x18A0 JUMP JUMPDEST POP SWAP3 SWAP2 SWAP4 PUSH1 0x1 DUP3 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x195F JUMPI PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP5 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 SWAP1 LOG4 JUMPDEST DUP1 MLOAD PUSH1 0x1 SUB PUSH2 0x1955 JUMPI SWAP1 PUSH1 0x20 DUP1 PUSH2 0x123E SWAP6 SWAP4 ADD MLOAD SWAP2 ADD MLOAD SWAP2 CALLER PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x123E SWAP4 CALLER PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x1993 DUP9 DUP9 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1937 JUMP JUMPDEST SWAP5 SWAP2 SWAP1 SWAP2 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1404 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1A9B JUMPI DUP1 PUSH1 0x5 SHL SWAP1 PUSH1 0x20 DUP1 DUP4 DUP7 ADD ADD MLOAD SWAP3 DUP8 ADD ADD MLOAD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP12 AND PUSH2 0x1A15 JUMPI JUMPDEST PUSH1 0x1 SWAP5 DUP3 AND PUSH2 0x19F0 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x1A0B SWAP2 PUSH2 0x174C PUSH2 0x18D8 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP6 DUP2 PUSH2 0x19E7 JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP1 POP PUSH2 0x1A32 DUP11 PUSH2 0x174C DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x1A64 JUMPI SWAP2 DUP8 SWAP2 DUP5 PUSH1 0x1 SWAP7 SWAP6 SWAP5 SUB PUSH2 0x1A5C DUP14 PUSH2 0x174C DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP5 POP PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 PUSH1 0x1 DUP6 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1B46 JUMPI PUSH1 0x20 DUP6 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B0F JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x1B35 JUMPI PUSH1 0x20 DUP1 PUSH2 0x1B2B SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x1E7B JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x1B41 SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD DUP2 DUP4 AND SWAP2 DUP6 AND SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x1B87 DUP9 DUP13 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1BA6 PUSH2 0x32E SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x9A8 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9A8 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x18C JUMPI MLOAD PUSH2 0x32E DUP2 PUSH2 0x209 JUMP JUMPDEST SWAP3 PUSH2 0x1BF9 PUSH2 0x32E SWAP6 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1C07 SWAP5 AND DUP7 MSTORE PUSH1 0x0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x9A8 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2F8 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x32E SWAP6 SWAP4 PUSH2 0x1BF9 SWAP2 PUSH2 0x1C07 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x9A8 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x1C5A JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x1C7D PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1BC9 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1D12 JUMPI JUMPDEST POP PUSH2 0x1CD5 JUMPI DUP3 PUSH2 0x1CA4 PUSH2 0x1650 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x1CCE JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x1CEF JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x1D35 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D3C JUMPI JUMPDEST PUSH2 0x1D2D DUP2 DUP4 PUSH2 0x597 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1BB4 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1C96 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D23 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x1D58 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D7B PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x1C15 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1DBD JUMPI JUMPDEST POP PUSH2 0x1DA2 JUMPI DUP3 PUSH2 0x1CA4 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x1CEF JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1DD7 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D3C JUMPI PUSH2 0x1D2D DUP2 DUP4 PUSH2 0x597 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1D94 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x32E SWAP7 SWAP6 AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2F8 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x32E SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2F8 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x1E58 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x1C7D PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x1E8F JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D7B PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x1E11 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB5 0x24 0xB7 DUP10 STATICCALL DUP3 SWAP9 0xE8 OR PUSH12 0x61B02B0084A47D8DF511CED9 SWAP2 DUP8 0xD3 SWAP5 PUSH8 0x9D0C75B764736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"452:3923:32:-:0;;;;;;;;;;;;;-1:-1:-1;;452:3923:32;;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;452:3923:32;;;;10164:13:3;452:3923:32;;;;;;;;;;;-1:-1:-1;452:3923:32;;;;;;;;;;;-1:-1:-1;452:3923:32;;;10164:13:3;-1:-1:-1;452:3923:32;;-1:-1:-1;452:3923:32;;-1:-1:-1;452:3923:32;;;;;;-1:-1:-1;452:3923:32;;-1:-1:-1;;;;;;452:3923:32;;;;10164:13:3;452:3923:32;1273:26:0;;1269:95;;3004:6;452:3923:32;;-1:-1:-1;;;;;;452:3923:32;;;;;;;;3052:40:0;-1:-1:-1;;3052:40:0;452:3923:32;2061:21:22;1857:1;;;452:3923:32;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;452:3923:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;452:3923:32;;;;;1606:175;;452:3923;;;:::i;:::-;;;;-1:-1:-1;;;452:3923:32;;;;1606:175;;;452:3923;;;:::i;:::-;;;;-1:-1:-1;;;452:3923:32;;;;;1606:175;;452:3923;;;:::i;:::-;3004:6:0;452:3923:32;;-1:-1:-1;;;452:3923:32;;;;1606:175;;;452:3923;;;:::i;:::-;;;;-1:-1:-1;;;452:3923:32;;;;1606:175;;;452:3923;;;:::i;:::-;;;;-1:-1:-1;;;452:3923:32;;;;1606:175;;;452:3923;;;:::i;:::-;;;;-1:-1:-1;;;452:3923:32;;;;1606:175;;;452:3923;;;:::i;:::-;;;;-1:-1:-1;;;452:3923:32;;;;1606:175;;;452:3923;;;:::i;:::-;;;;-1:-1:-1;;;452:3923:32;;;;1606:175;;;452:3923;;;:::i;:::-;;;;-1:-1:-1;;;452:3923:32;;;;1606:175;;;452:3923;;;:::i;:::-;;;;-1:-1:-1;;;452:3923:32;;;;1606:175;;;452:3923;-1:-1:-1;1814:16:32;1606:175;1814:16;;;;452:3923;;;;;;;;;1832:3;452:3923;;;;;;;;1904:8;;;;:::i;:::-;;452:3923;;;;;;-1:-1:-1;452:3923:32;;;;;;;;;;;;;;;;;;;;;;1857:1:22;1963:8:32;;;;:::i;:::-;;-1:-1:-1;452:3923:32;;;;;;;;;;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;452:3923:32;;;;-1:-1:-1;;;;3004:6:0;452:3923:32;;;;;;;;;;;;;;1799:13;;452:3923;;;;-1:-1:-1;452:3923:32;;;;;;;-1:-1:-1;452:3923:32;;-1:-1:-1;452:3923:32;;-1:-1:-1;452:3923:32;-1:-1:-1;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3004:6:0;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;452:3923:32;;-1:-1:-1;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;452:3923:32;;;;;;;;;-1:-1:-1;452:3923:32;;;;;;;;;;-1:-1:-1;452:3923:32;;;-1:-1:-1;452:3923:32;;;;;;;;;;;;;;-1:-1:-1;452:3923:32;;;-1:-1:-1;452:3923:32;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;452:3923:32;;;-1:-1:-1;452:3923:32;;;;;-1:-1:-1;452:3923:32;;2061:21:22;452:3923:32;;-1:-1:-1;452:3923:32;1269:95:0;452:3923:32;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;452:3923:32;;;1322:31:0;452:3923:32;;;;;;;;;;;;;;;;;;;;;10164:13:3;-1:-1:-1;452:3923:32;;;;;;;;;;;;;;;;;;-1:-1:-1;452:3923:32;;;;;;;;;;-1:-1:-1;452:3923:32;;;;;-1:-1:-1;452:3923:32;;;;;;;;;-1:-1:-1;452:3923:32;;;;;;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_8928":{"entryPoint":374,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_8941":{"entryPoint":401,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":1489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":1613,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1668,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":7092,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":1241,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes":{"entryPoint":7189,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes_17944":{"entryPoint":7113,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes":{"entryPoint":7697,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes_17945":{"entryPoint":7646,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":2524,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_array_uint256_dyn":{"entryPoint":7055,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":2472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":4934,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_calldata_to_string":{"entryPoint":4901,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_calldata_uint256":{"entryPoint":5565,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":2728,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_string":{"entryPoint":5594,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":5546,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":1465,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1585,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage_14804":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":5383,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":5280,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":4585,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":725,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_MAX_SUPPLY_PER_SIGN":{"entryPoint":1347,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MINT_PRICE":{"entryPoint":3635,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":443,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOfBatch":{"entryPoint":2541,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_claimHoroscope":{"entryPoint":2241,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getSign":{"entryPoint":3839,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getTokenId":{"entryPoint":1287,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":3741,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintSeed":{"entryPoint":3016,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":2977,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":2872,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeBatchTransferFrom":{"entryPoint":1695,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":4112,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":3370,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_signToTokenId":{"entryPoint":2751,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":539,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":3591,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":4413,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_uri":{"entryPoint":817,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_userMints":{"entryPoint":3669,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_withdraw":{"entryPoint":2009,"id":null,"parameterSlots":0,"returnSlots":0},"extract_returndata":{"entryPoint":5712,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1431,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_14805":{"entryPoint":1398,"id":null,"parameterSlots":1,"returnSlots":0},"fun_asSingletonArrays":{"entryPoint":null,"id":1220,"parameterSlots":2,"returnSlots":2},"fun_asSingletonArrays_14806":{"entryPoint":null,"id":1220,"parameterSlots":1,"returnSlots":2},"fun_balanceOf":{"entryPoint":4831,"id":424,"parameterSlots":2,"returnSlots":1},"fun_balanceOfBatch":{"entryPoint":4993,"id":494,"parameterSlots":2,"returnSlots":1},"fun_burn":{"entryPoint":5819,"id":1125,"parameterSlots":2,"returnSlots":0},"fun_checkOnERC1155BatchReceived":{"entryPoint":7491,"id":1555,"parameterSlots":6,"returnSlots":0},"fun_checkOnERC1155BatchReceived_14808":{"entryPoint":7240,"id":1555,"parameterSlots":5,"returnSlots":0},"fun_checkOnERC1155Received":{"entryPoint":7803,"id":1481,"parameterSlots":6,"returnSlots":0},"fun_checkOnERC1155Received_14809":{"entryPoint":7750,"id":1481,"parameterSlots":5,"returnSlots":0},"fun_checkOwner":{"entryPoint":5644,"id":84,"parameterSlots":0,"returnSlots":0},"fun_mint":{"entryPoint":6226,"id":1034,"parameterSlots":4,"returnSlots":0},"fun_nonReentrantAfter":{"entryPoint":null,"id":4575,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":5760,"id":4567,"parameterSlots":0,"returnSlots":0},"fun_updateWithAcceptanceCheck":{"entryPoint":6555,"id":850,"parameterSlots":5,"returnSlots":0},"mapping_index_access_mapping_address_mapping_uint256_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_mapping_uint256_uint256_of_address_8949":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256_8948":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256_9018":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":4951,"id":null,"parameterSlots":2,"returnSlots":1},"packed_hashed_string_calldata_uint256_to_string_uint":{"entryPoint":4876,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5258,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1376,"id":null,"parameterSlots":0,"returnSlots":0},"require_helper_stringliteral":{"entryPoint":5471,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4c95":{"entryPoint":5183,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_833a":{"entryPoint":5396,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8d1b":{"entryPoint":5308,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":521,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461017157806301ffc9a71461016c5780630e89341c146101675780631e7663bc146101625780632462a2521461015d5780632eb2c2d6146101585780633ccfd60b1461015357806349d7f0741461014e5780634e1273f41461014957806356f0866c14610144578063715018a61461013f5780638da5cb5b1461013a57806393fb6e8714610135578063a22cb46514610130578063bd85b0391461012b578063c002d23d14610126578063cd49618c14610121578063e985e9c51461011c578063ec8451da1461010d578063f242432a14610117578063f2fde38b146101125763f4a79b241461010d57600080fd5b610eff565b61113d565b611010565b610e9d565b610e55565b610e33565b610e07565b610d2a565b610bc8565b610ba1565b610b38565b610abf565b6109ed565b6108c1565b6107d9565b61069f565b610543565b610507565b610331565b61021b565b6101bb565b600435906001600160a01b038216820361018c57565b600080fd5b602435906001600160a01b038216820361018c57565b35906001600160a01b038216820361018c57565b3461018c57604036600319011261018c5760206102006101d9610176565b602435600052600083526040600020906001600160a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b031981160361018c57565b3461018c57602036600319011261018c5760206001600160e01b031960043561024381610209565b167fd9b67a260000000000000000000000000000000000000000000000000000000081149081156102ab575b8115610281575b506040519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438610276565b7f0e89341c000000000000000000000000000000000000000000000000000000008114915061026f565b60005b8381106102e85750506000910152565b81810151838201526020016102d8565b90602091610311815180928185528580860191016102d5565b601f01601f1916010190565b90602061032e9281815201906102f8565b90565b3461018c57602036600319011261018c5760043561034d6111e9565b600091807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000081818110156104cb575b50506d04ee2d6d415b85acef8100000000808310156104bc575b50662386f26fc10000808310156104ad575b506305f5e1008083101561049e575b506127108083101561048f575b50606482101561047f575b600a80921015610475575b6001908160216103e7600188016115da565b96870101905b610432575b60405161042e90610422816104148a61040e602084018c610aa8565b90610aa8565b03601f198101835282610597565b6040519182918261031d565b0390f35b600019019083907f30313233343536373839616263646566000000000000000000000000000000008282061a835304918215610470579190826103ed565b6103f2565b92600101926103d5565b92906064600291049101926103ca565b600491949204910192386103bf565b600891949204910192386103b2565b601091949204910192386103a3565b60209194920491019238610391565b604095500491503880610377565b9181601f8401121561018c5782359167ffffffffffffffff831161018c576020838186019501011161018c57565b3461018c57602036600319011261018c5760043567ffffffffffffffff811161018c5761020061053d60209236906004016104d9565b9061130c565b3461018c57600036600319011261018c5760206040516127108152f35b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761059257604052565b610560565b90601f8019910116810190811067ffffffffffffffff82111761059257604052565b67ffffffffffffffff81116105925760051b60200190565b9080601f8301121561018c5760209082356105eb816105b9565b936105f96040519586610597565b81855260208086019260051b82010192831161018c57602001905b828210610622575050505090565b81358152908301908301610614565b67ffffffffffffffff811161059257601f01601f191660200190565b92919261065982610631565b916106676040519384610597565b82948184528183011161018c578281602093846000960137010152565b9080601f8301121561018c5781602061032e9335910161064d565b3461018c5760a036600319011261018c576106b8610176565b6106c0610191565b906044359167ffffffffffffffff9081841161018c576106e5600494369086016105d1565b9060643583811161018c576106fd90369087016105d1565b9260843590811161018c576107159036908701610684565b936001600160a01b038082169033821415806107a4575b6107775783161561075f571561074857610746955061199b565b005b602486600060405191626a0d4560e21b8352820152fd5b602487600060405191632bfa23e760e11b8352820152fd5b6040805163711bec9160e11b815233818b019081526001600160a01b038616602082015290918291010390fd5b5081600052600160205260ff6107d1336040600020906001600160a01b0316600052602052604060002090565b54161561072c565b3461018c576000806003193601126108be576107f361160c565b47906001600160a01b0360035416807f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b656020604051868152a2824710610886578180809481935af1610843611650565b901561084d575080f35b80511561085c57602081519101fd5b60046040517fd6bda275000000000000000000000000000000000000000000000000000000008152fd5b6040517fcf47918100000000000000000000000000000000000000000000000000000000815247600482015260248101849052604490fd5b80fd5b3461018c57604036600319011261018c5760043560243567ffffffffffffffff811161018c576108f59036906004016104d9565b6108fd611680565b60008381526020818152604080832033845290915290205415610964576109577f8eb20336e0911a379870111ec015103173254d8f89a70b406fe0d198f87294709161094985336116bb565b604051918291339583611346565b0390a36107466001600455565b606460405162461bcd60e51b815260206004820152601160248201527f4e6f20736565647320746f20636c61696d0000000000000000000000000000006044820152fd5b90815180825260208080930193019160005b8281106109c8575050505090565b8351855293810193928101926001016109ba565b90602061032e9281815201906109a8565b3461018c57604036600319011261018c5760043567ffffffffffffffff80821161018c573660238301121561018c578160040135610a2a816105b9565b92610a386040519485610597565b8184526020916024602086019160051b8301019136831161018c57602401905b828210610a91578560243586811161018c5761042e91610a7f610a859236906004016105d1565b90611381565b604051918291826109dc565b838091610a9d846101a7565b815201910190610a58565b90610abb602092828151948592016102d5565b0190565b3461018c57602036600319011261018c5760043567ffffffffffffffff811161018c573660238201121561018c57610b1c6020610b0961042e93369060248160040135910161064d565b81604051938285809451938492016102d5565b8101600581520301902054604051918291829190602083019252565b3461018c576000806003193601126108be57610b5261160c565b806001600160a01b0360035473ffffffffffffffffffffffffffffffffffffffff198116600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b3461018c57600036600319011261018c5760206001600160a01b0360035416604051908152f35b604036600319011261018c5760043567ffffffffffffffff811161018c57610bf49036906004016104d9565b907f38f7c5c3827fcb56dabd1150e538e385707d18e91dd676ff68cf63cfa07d0af7602435610c21611680565b610c2b848461130c565b5493610c3885151561143f565b610c4c610c44836114a0565b3410156114bc565b610c77612710610c7084610c6a896000526007602052604060002090565b54611507565b1115611514565b610cb7600a610cb084610c6a89610ca1336001600160a01b03166000526008602052604060002090565b90600052602052604060002090565b111561155f565b610ccb856000526007602052604060002090565b610cd6838254611507565b9055610cf985610ca1336001600160a01b03166000526008602052604060002090565b610d04838254611507565b9055610d19610d116115aa565b838733611852565b6109576040519283923396846115bd565b3461018c57604036600319011261018c57610d43610176565b60243580151580820361018c576001600160a01b038316928315610dd657610d8b903360005260016020526040600020906001600160a01b0316600052602052604060002090565b9060ff801983541691161790557f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160405180610dd1339482919091602081019215159052565b0390a3005b60246040517fced3e10000000000000000000000000000000000000000000000000000000000815260006004820152fd5b3461018c57602036600319011261018c5760043560005260076020526020604060002054604051908152f35b3461018c57600036600319011261018c576020604051662386f26fc100008152f35b3461018c57604036600319011261018c576001600160a01b03610e76610176565b16600052600860205260406000206024356000526020526020604060002054604051908152f35b3461018c57604036600319011261018c57602060ff610ef3610ebd610176565b6001600160a01b03610ecd610191565b9116600052600184526040600020906001600160a01b0316600052602052604060002090565b54166040519015158152f35b3461018c5760208060031936011261018c5760006004358152600682526040812091604051918084549460018660011c9360018816928315611006575b8686108414610ff2578798610f58878a98999a60209181520190565b94908115610fd15750600114610f8b575b8588610f7782880383610597565b61042e6040519282849384528301906102f8565b610f9e9196929450600052602060002090565b94925b86828510610fbb57505050610f7793500138808080610f69565b8654858501529581019588955090930192610fa1565b9350505050610f779491925060ff19168252151560051b0138808080610f69565b602482634e487b7160e01b81526022600452fd5b94607f1694610f3c565b3461018c5760a036600319011261018c57611029610176565b611031610191565b60843567ffffffffffffffff811161018c57611051903690600401610684565b906001600160a01b03808416903382141580611108575b6110e1578216156110c957156110b257610746926110aa6064356044359160405192600184526020840152604083019160018352606084015260808301604052565b92909161199b565b6024604051626a0d4560e21b815260006004820152fd5b6024604051632bfa23e760e11b815260006004820152fd5b60405163711bec9160e11b81523360048201526001600160a01b0386166024820152604490fd5b5081600052600160205260ff611135336040600020906001600160a01b0316600052602052604060002090565b541615611068565b3461018c57602036600319011261018c57611156610176565b61115e61160c565b6001600160a01b038091169081156111b8576003548273ffffffffffffffffffffffffffffffffffffffff19821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b6040519060006002549060018260011c92600181169182156112d5575b6020916020861084146112c1578588528794936020860193929181156112a25750600114611240575b50505061123e92500383610597565b565b92509361126f60026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90565b946000935b82851061128c5750505061123e93500138808061122f565b8654858501529586019588955093810193611274565b9250505061123e9491925060ff19168252151560051b0138808061122f565b602485634e487b7160e01b81526022600452fd5b93607f1693611206565b6113089160005260006020526040600020906001600160a01b0316600052602052604060002090565b5490565b6020908260405193849283378101600581520301902090565b908060209392818452848401376000828201840152601f01601f1916010190565b91602061032e938181520191611325565b805182101561136b5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b919091805183518082036114045750508051906113b66113a0836105b9565b926113ae6040519485610597565b8084526105b9565b60209190601f1901368484013760005b81518110156113fc57806113eb60019260051b85808287010151918a010151906112df565b6113f58287611357565b52016113c6565b509193505050565b6040517f5b05999100000000000000000000000000000000000000000000000000000000815260048101919091526024810191909152604490fd5b1561144657565b606460405162461bcd60e51b815260206004820152601360248201527f496e76616c6964207a6f64696163207369676e000000000000000000000000006044820152fd5b634e487b7160e01b600052601160045260246000fd5b90662386f26fc1000091808302928304036114b757565b61148a565b156114c357565b606460405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e74207061796d656e740000000000000000000000006044820152fd5b919082018092116114b757565b1561151b57565b606460405162461bcd60e51b815260206004820152601260248201527f45786365656473206d617820737570706c7900000000000000000000000000006044820152fd5b1561156657565b606460405162461bcd60e51b815260206004820152601860248201527f4d617820313020706572207573657220706572207369676e00000000000000006044820152fd5b604051906115b782610576565b60008252565b9392916020916115d591604087526040870191611325565b930152565b906115e482610631565b6115f16040519182610597565b8281528092611602601f1991610631565b0190602036910137565b6001600160a01b0360035416330361162057565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b3d1561167b573d9061166182610631565b9161166f6040519384610597565b82523d6000602084013e565b606090565b600260045414611691576002600455565b60046040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b6001600160a01b0381169182156110b2576116f5604051916001835260208301526040820190600182526001606084015260808301604052565b9190604094600060405161170881610576565b52815184519081810361140457505060005b82518110156117c8578060051b602080828601015191870101516117648661174c846000526000602052604060002090565b906001600160a01b0316600052602052604060002090565b54818110611792578661174c600195949361178b9303936000526000602052604060002090565b550161171a565b89516303dee4c560e01b81526001600160a01b038816600482015260248101919091526044810182905260648101839052608490fd5b5094506000939291506001815114841461181f5760209081015191810151604080519384529183015233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291819081015b0390a4565b60405133927f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb92829161181a9183611b8f565b909291926001600160a01b0382169384156110c95761188e60405192600184526020840152604083019160018352606084015260808301604052565b92815184519081810361140457505060005b82518110156118e8578060019160051b6118e06118d88761174c602080868b010151958c010151946000526000602052604060002090565b918254611507565b9055016118a0565b50929193600182511460001461195f5760208281015184820151604080519283529282015260009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a45b8051600103611955579060208061123e959301519101519133611e46565b61123e9333611c48565b60006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180611993888883611b8f565b0390a4611937565b94919091815184519081810361140457505060005b8251811015611a9b578060051b9060208083860101519287010151856001600160a01b0393848b16611a15575b60019482166119f0575b505050016119b0565b611a0b9161174c6118d8926000526000602052604060002090565b90553885816119e7565b9192939050611a328a61174c846000526000602052604060002090565b54838110611a645791879184600196959403611a5c8d61174c856000526000602052604060002090565b5594506119dd565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810184905260648101839052608490fd5b509491939290936001855114600014611b46576020858101518382015160408051928352928201526001600160a01b03838116929086169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b038116611b0f575b5050505050565b8451600103611b3557602080611b2b9601519201519233611e7b565b3880808080611b08565b611b4194919233611d43565b611b2b565b6001600160a01b03604051818316918516907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180611b87888c83611b8f565b0390a4611af9565b9091611ba661032e936040845260408401906109a8565b9160208184039101526109a8565b9081602091031261018c575161032e81610209565b92611bf961032e95936001600160a01b03611c07941686526000602087015260a0604087015260a08601906109a8565b9084820360608601526109a8565b9160808184039101526102f8565b939061032e9593611bf991611c07946001600160a01b03809216885216602087015260a0604087015260a08601906109a8565b9293919093843b611c5a575050505050565b602091611c7d604051948593849363bc197c8160e01b9889865260048601611bc9565b038160006001600160a01b0388165af160009181611d12575b50611cd55782611ca4611650565b8051919082611cce57604051632bfa23e760e11b81526001600160a01b0383166004820152602490fd5b6020915001fd5b6001600160e01b03191603611cef57503880808080611b08565b604051632bfa23e760e11b81526001600160a01b03919091166004820152602490fd5b611d3591925060203d602011611d3c575b611d2d8183610597565b810190611bb4565b9038611c96565b503d611d23565b939290949194853b611d58575b505050505050565b611d7b602093604051958694859463bc197c8160e01b998a875260048701611c15565b038160006001600160a01b0388165af160009181611dbd575b50611da25782611ca4611650565b6001600160e01b03191603611cef5750388080808080611d50565b611dd791925060203d602011611d3c57611d2d8183610597565b9038611d94565b909260a0926001600160a01b0361032e9695168352600060208401526040830152606082015281608082015201906102f8565b919261032e95949160a0946001600160a01b0380921685521660208401526040830152606082015281608082015201906102f8565b9293919093843b611e58575050505050565b602091611c7d604051948593849363f23a6e6160e01b9889865260048601611dde565b939290949194853b611e8f57505050505050565b611d7b602093604051958694859463f23a6e6160e01b998a875260048701611e1156fea26469706673582212209bb524b789fa8298e8176b61b02b0084a47d8df511ced99187d394679d0c75b764736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x1E7663BC EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x2462A252 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x49D7F074 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x56F0866C EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x93FB6E87 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xC002D23D EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xCD49618C EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xEC8451DA EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x112 JUMPI PUSH4 0xF4A79B24 EQ PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFF JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST PUSH2 0x1010 JUMP JUMPDEST PUSH2 0xE9D JUMP JUMPDEST PUSH2 0xE55 JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0xB38 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x18C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x18C JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x18C JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH2 0x200 PUSH2 0x1D9 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x18C JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x4 CALLDATALOAD PUSH2 0x243 DUP2 PUSH2 0x209 JUMP JUMPDEST AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2AB JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x281 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x276 JUMP JUMPDEST PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x26F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2E8 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D8 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x311 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x32E SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x2F8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x34D PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP2 DUP2 DUP2 LT ISZERO PUSH2 0x4CB JUMPI JUMPDEST POP POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x4BC JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x4AD JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x49E JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x48F JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x47F JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x475 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x3E7 PUSH1 0x1 DUP9 ADD PUSH2 0x15DA JUMP JUMPDEST SWAP7 DUP8 ADD ADD SWAP1 JUMPDEST PUSH2 0x432 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP1 PUSH2 0x422 DUP2 PUSH2 0x414 DUP11 PUSH2 0x40E PUSH1 0x20 DUP5 ADD DUP13 PUSH2 0xAA8 JUMP JUMPDEST SWAP1 PUSH2 0xAA8 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x31D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x470 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST SWAP3 PUSH1 0x1 ADD SWAP3 PUSH2 0x3D5 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP3 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 CODESIZE PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 CODESIZE PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 CODESIZE PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 CODESIZE PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 SWAP6 POP DIV SWAP2 POP CODESIZE DUP1 PUSH2 0x377 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x18C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x18C JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x18C JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x200 PUSH2 0x53D PUSH1 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x4D9 JUMP JUMPDEST SWAP1 PUSH2 0x130C JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x592 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x592 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x592 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18C JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x5EB DUP2 PUSH2 0x5B9 JUMP JUMPDEST SWAP4 PUSH2 0x5F9 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x597 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x18C JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x622 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x614 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x592 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x659 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 PUSH2 0x667 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x597 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x18C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18C JUMPI DUP2 PUSH1 0x20 PUSH2 0x32E SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x64D JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH2 0x6B8 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x6C0 PUSH2 0x191 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 GT PUSH2 0x18C JUMPI PUSH2 0x6E5 PUSH1 0x4 SWAP5 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x5D1 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x6FD SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x5D1 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x715 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x684 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x7A4 JUMPI JUMPDEST PUSH2 0x777 JUMPI DUP4 AND ISZERO PUSH2 0x75F JUMPI ISZERO PUSH2 0x748 JUMPI PUSH2 0x746 SWAP6 POP PUSH2 0x199B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x24 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x7D1 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x72C JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8BE JUMPI PUSH2 0x7F3 PUSH2 0x160C JUMP JUMPDEST SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND DUP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 PUSH1 0x20 PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE LOG2 DUP3 SELFBALANCE LT PUSH2 0x886 JUMPI DUP2 DUP1 DUP1 SWAP5 DUP2 SWAP4 GAS CALL PUSH2 0x843 PUSH2 0x1650 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x84D JUMPI POP DUP1 RETURN JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x85C JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x8F5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x8FD PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x964 JUMPI PUSH2 0x957 PUSH32 0x8EB20336E0911A379870111EC015103173254D8F89A70B406FE0D198F8729470 SWAP2 PUSH2 0x949 DUP6 CALLER PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1346 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x746 PUSH1 0x1 PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20736565647320746F20636C61696D000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x9C8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9BA JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x32E SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x9A8 JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x18C JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x18C JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0xA2A DUP2 PUSH2 0x5B9 JUMP JUMPDEST SWAP3 PUSH2 0xA38 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x597 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 PUSH1 0x20 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x18C JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xA91 JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x42E SWAP2 PUSH2 0xA7F PUSH2 0xA85 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x5D1 JUMP JUMPDEST SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x9DC JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0xA9D DUP5 PUSH2 0x1A7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA58 JUMP JUMPDEST SWAP1 PUSH2 0xABB PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x2D5 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x18C JUMPI PUSH2 0xB1C PUSH1 0x20 PUSH2 0xB09 PUSH2 0x42E SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x64D JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2D5 JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8BE JUMPI PUSH2 0xB52 PUSH2 0x160C JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x3 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH2 0xBF4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x4D9 JUMP JUMPDEST SWAP1 PUSH32 0x38F7C5C3827FCB56DABD1150E538E385707D18E91DD676FF68CF63CFA07D0AF7 PUSH1 0x24 CALLDATALOAD PUSH2 0xC21 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0xC2B DUP5 DUP5 PUSH2 0x130C JUMP JUMPDEST SLOAD SWAP4 PUSH2 0xC38 DUP6 ISZERO ISZERO PUSH2 0x143F JUMP JUMPDEST PUSH2 0xC4C PUSH2 0xC44 DUP4 PUSH2 0x14A0 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x14BC JUMP JUMPDEST PUSH2 0xC77 PUSH2 0x2710 PUSH2 0xC70 DUP5 PUSH2 0xC6A DUP10 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x1507 JUMP JUMPDEST GT ISZERO PUSH2 0x1514 JUMP JUMPDEST PUSH2 0xCB7 PUSH1 0xA PUSH2 0xCB0 DUP5 PUSH2 0xC6A DUP10 PUSH2 0xCA1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x155F JUMP JUMPDEST PUSH2 0xCCB DUP6 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xCD6 DUP4 DUP3 SLOAD PUSH2 0x1507 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xCF9 DUP6 PUSH2 0xCA1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD04 DUP4 DUP3 SLOAD PUSH2 0x1507 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xD19 PUSH2 0xD11 PUSH2 0x15AA JUMP JUMPDEST DUP4 DUP8 CALLER PUSH2 0x1852 JUMP JUMPDEST PUSH2 0x957 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH2 0x15BD JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH2 0xD43 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 DUP3 SUB PUSH2 0x18C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0xDD6 JUMPI PUSH2 0xD8B SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x40 MLOAD DUP1 PUSH2 0xDD1 CALLER SWAP5 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH7 0x2386F26FC10000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE76 PUSH2 0x176 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xEF3 PUSH2 0xEBD PUSH2 0x176 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xECD PUSH2 0x191 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP1 DUP5 SLOAD SWAP5 PUSH1 0x1 DUP7 PUSH1 0x1 SHR SWAP4 PUSH1 0x1 DUP9 AND SWAP3 DUP4 ISZERO PUSH2 0x1006 JUMPI JUMPDEST DUP7 DUP7 LT DUP5 EQ PUSH2 0xFF2 JUMPI DUP8 SWAP9 PUSH2 0xF58 DUP8 DUP11 SWAP9 SWAP10 SWAP11 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP5 SWAP1 DUP2 ISZERO PUSH2 0xFD1 JUMPI POP PUSH1 0x1 EQ PUSH2 0xF8B JUMPI JUMPDEST DUP6 DUP9 PUSH2 0xF77 DUP3 DUP9 SUB DUP4 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x42E PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0xF9E SWAP2 SWAP7 SWAP3 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP3 JUMPDEST DUP7 DUP3 DUP6 LT PUSH2 0xFBB JUMPI POP POP POP PUSH2 0xF77 SWAP4 POP ADD CODESIZE DUP1 DUP1 DUP1 PUSH2 0xF69 JUMP JUMPDEST DUP7 SLOAD DUP6 DUP6 ADD MSTORE SWAP6 DUP2 ADD SWAP6 DUP9 SWAP6 POP SWAP1 SWAP4 ADD SWAP3 PUSH2 0xFA1 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xF77 SWAP5 SWAP2 SWAP3 POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD CODESIZE DUP1 DUP1 DUP1 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP5 PUSH1 0x7F AND SWAP5 PUSH2 0xF3C JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH2 0x1029 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x1031 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH2 0x1051 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x684 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x1108 JUMPI JUMPDEST PUSH2 0x10E1 JUMPI DUP3 AND ISZERO PUSH2 0x10C9 JUMPI ISZERO PUSH2 0x10B2 JUMPI PUSH2 0x746 SWAP3 PUSH2 0x10AA PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1135 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x1068 JUMP JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18C JUMPI PUSH2 0x1156 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x115E PUSH2 0x160C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x3 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0x3 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x12D5 JUMPI JUMPDEST PUSH1 0x20 SWAP2 PUSH1 0x20 DUP7 LT DUP5 EQ PUSH2 0x12C1 JUMPI DUP6 DUP9 MSTORE DUP8 SWAP5 SWAP4 PUSH1 0x20 DUP7 ADD SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x12A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1240 JUMPI JUMPDEST POP POP POP PUSH2 0x123E SWAP3 POP SUB DUP4 PUSH2 0x597 JUMP JUMPDEST JUMP JUMPDEST SWAP3 POP SWAP4 PUSH2 0x126F PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x128C JUMPI POP POP POP PUSH2 0x123E SWAP4 POP ADD CODESIZE DUP1 DUP1 PUSH2 0x122F JUMP JUMPDEST DUP7 SLOAD DUP6 DUP6 ADD MSTORE SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x123E SWAP5 SWAP2 SWAP3 POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD CODESIZE DUP1 DUP1 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x1308 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x32E SWAP4 DUP2 DUP2 MSTORE ADD SWAP2 PUSH2 0x1325 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x136B JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1404 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x13B6 PUSH2 0x13A0 DUP4 PUSH2 0x5B9 JUMP JUMPDEST SWAP3 PUSH2 0x13AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x597 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x13FC JUMPI DUP1 PUSH2 0x13EB PUSH1 0x1 SWAP3 PUSH1 0x5 SHL DUP6 DUP1 DUP3 DUP8 ADD ADD MLOAD SWAP2 DUP11 ADD ADD MLOAD SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x13F5 DUP3 DUP8 PUSH2 0x1357 JUMP JUMPDEST MSTORE ADD PUSH2 0x13C6 JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1446 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207A6F64696163207369676E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH7 0x2386F26FC10000 SWAP2 DUP1 DUP4 MUL SWAP3 DUP4 DIV SUB PUSH2 0x14B7 JUMPI JUMP JUMPDEST PUSH2 0x148A JUMP JUMPDEST ISZERO PUSH2 0x14C3 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061796D656E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x14B7 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x151B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x1566 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820313020706572207573657220706572207369676E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x15B7 DUP3 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP4 SWAP3 SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x15D5 SWAP2 PUSH1 0x40 DUP8 MSTORE PUSH1 0x40 DUP8 ADD SWAP2 PUSH2 0x1325 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x15E4 DUP3 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x15F1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x597 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1602 PUSH1 0x1F NOT SWAP2 PUSH2 0x631 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER SUB PUSH2 0x1620 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x167B JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1661 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP2 PUSH2 0x166F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x597 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD EQ PUSH2 0x1691 JUMPI PUSH1 0x2 PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x10B2 JUMPI PUSH2 0x16F5 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 SWAP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1708 DUP2 PUSH2 0x576 JUMP JUMPDEST MSTORE DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1404 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x17C8 JUMPI DUP1 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP7 ADD ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH2 0x1764 DUP7 PUSH2 0x174C DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x1792 JUMPI DUP7 PUSH2 0x174C PUSH1 0x1 SWAP6 SWAP5 SWAP4 PUSH2 0x178B SWAP4 SUB SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE ADD PUSH2 0x171A JUMP JUMPDEST DUP10 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 POP PUSH1 0x0 SWAP4 SWAP3 SWAP2 POP PUSH1 0x1 DUP2 MLOAD EQ DUP5 EQ PUSH2 0x181F JUMPI PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP2 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 DUP2 SWAP1 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP3 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP3 DUP3 SWAP2 PUSH2 0x181A SWAP2 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 DUP5 ISZERO PUSH2 0x10C9 JUMPI PUSH2 0x188E PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1404 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x18E8 JUMPI DUP1 PUSH1 0x1 SWAP2 PUSH1 0x5 SHL PUSH2 0x18E0 PUSH2 0x18D8 DUP8 PUSH2 0x174C PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x1507 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x18A0 JUMP JUMPDEST POP SWAP3 SWAP2 SWAP4 PUSH1 0x1 DUP3 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x195F JUMPI PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP5 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 SWAP1 LOG4 JUMPDEST DUP1 MLOAD PUSH1 0x1 SUB PUSH2 0x1955 JUMPI SWAP1 PUSH1 0x20 DUP1 PUSH2 0x123E SWAP6 SWAP4 ADD MLOAD SWAP2 ADD MLOAD SWAP2 CALLER PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x123E SWAP4 CALLER PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x1993 DUP9 DUP9 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1937 JUMP JUMPDEST SWAP5 SWAP2 SWAP1 SWAP2 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1404 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1A9B JUMPI DUP1 PUSH1 0x5 SHL SWAP1 PUSH1 0x20 DUP1 DUP4 DUP7 ADD ADD MLOAD SWAP3 DUP8 ADD ADD MLOAD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP12 AND PUSH2 0x1A15 JUMPI JUMPDEST PUSH1 0x1 SWAP5 DUP3 AND PUSH2 0x19F0 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x1A0B SWAP2 PUSH2 0x174C PUSH2 0x18D8 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP6 DUP2 PUSH2 0x19E7 JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP1 POP PUSH2 0x1A32 DUP11 PUSH2 0x174C DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x1A64 JUMPI SWAP2 DUP8 SWAP2 DUP5 PUSH1 0x1 SWAP7 SWAP6 SWAP5 SUB PUSH2 0x1A5C DUP14 PUSH2 0x174C DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP5 POP PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 PUSH1 0x1 DUP6 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1B46 JUMPI PUSH1 0x20 DUP6 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B0F JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x1B35 JUMPI PUSH1 0x20 DUP1 PUSH2 0x1B2B SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x1E7B JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x1B41 SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD DUP2 DUP4 AND SWAP2 DUP6 AND SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x1B87 DUP9 DUP13 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1BA6 PUSH2 0x32E SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x9A8 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9A8 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x18C JUMPI MLOAD PUSH2 0x32E DUP2 PUSH2 0x209 JUMP JUMPDEST SWAP3 PUSH2 0x1BF9 PUSH2 0x32E SWAP6 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1C07 SWAP5 AND DUP7 MSTORE PUSH1 0x0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x9A8 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2F8 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x32E SWAP6 SWAP4 PUSH2 0x1BF9 SWAP2 PUSH2 0x1C07 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x9A8 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x1C5A JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x1C7D PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1BC9 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1D12 JUMPI JUMPDEST POP PUSH2 0x1CD5 JUMPI DUP3 PUSH2 0x1CA4 PUSH2 0x1650 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x1CCE JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x1CEF JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x1D35 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D3C JUMPI JUMPDEST PUSH2 0x1D2D DUP2 DUP4 PUSH2 0x597 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1BB4 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1C96 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D23 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x1D58 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D7B PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x1C15 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1DBD JUMPI JUMPDEST POP PUSH2 0x1DA2 JUMPI DUP3 PUSH2 0x1CA4 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x1CEF JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1DD7 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D3C JUMPI PUSH2 0x1D2D DUP2 DUP4 PUSH2 0x597 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1D94 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x32E SWAP7 SWAP6 AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2F8 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x32E SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2F8 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x1E58 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x1C7D PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x1E8F JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D7B PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x1E11 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB5 0x24 0xB7 DUP10 STATICCALL DUP3 SWAP9 0xE8 OR PUSH12 0x61B02B0084A47D8DF511CED9 SWAP2 DUP8 0xD3 SWAP5 PUSH8 0x9D0C75B764736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"452:3923:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;452:3923:32;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;:::o;:::-;;;-1:-1:-1;;;;;452:3923:32;;;;;;:::o;:::-;;;;;;-1:-1:-1;;452:3923:32;;;;;2290:22:3;452:3923:32;;:::i;:::-;;;-1:-1:-1;452:3923:32;-1:-1:-1;452:3923:32;;;-1:-1:-1;452:3923:32;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;2290:22:3;452:3923:32;;;;;;;;-1:-1:-1;;;;;;452:3923:32;;;;;:::o;:::-;;;;;;-1:-1:-1;;452:3923:32;;;;;-1:-1:-1;;;;;;452:3923:32;;;;;:::i;:::-;;1497:26:3;1482:41;;:109;;;;;452:3923:32;1482:161:3;;;;452:3923:32;;;;;;;;;;1482:161:3;844:25:26;829:40;;;1482:161:3;;;:109;1554:37;1539:52;;;-1:-1:-1;1482:109:3;;452:3923:32;;;;;;;;-1:-1:-1;;452:3923:32;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;452:3923:32;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;452:3923:32;;;;;;;;:::i;:::-;-1:-1:-1;;3591:25:32;29291:8:28;3591:25:32;29282:17:28;;;;29278:103;;452:3923:32;29407:8:28;;;29398:17;;;;29394:103;;452:3923:32;29523:8:28;;29514:17;;;;29510:103;;452:3923:32;29639:7:28;;29630:16;;;;29626:100;;452:3923:32;29752:7:28;;29743:16;;;;29739:100;;452:3923:32;29856:16:28;29865:7;29856:16;;;29852:100;;452:3923:32;29978:7:28;;29969:16;;;29965:66;;452:3923:32;1450:1:25;452:3923:32;;1545:94:25;1488:18;1450:1;452:3923:32;;1488:18:25;:::i;:::-;1520:11;1545:94;;;1652:247;1450:1;;;1652:247;452:3923:32;;;;3565:52;452:3923;;;;;3565:52;;452:3923;;:::i;:::-;;;:::i;:::-;3565:52;452:3923;;3565:52;;;;;;:::i;:::-;452:3923;;;;;;;:::i;:::-;;;;1652:247:25;-1:-1:-1;;452:3923:32;;;;1706:111:25;;;;;452:3923:32;1706:111:25;452:3923:32;1867:10:25;;;1863:21;;1652:247;;;;;1863:21;1879:5;;29965:66:28;452:3923:32;30015:1:28;452:3923:32;29965:66:28;;;29852:100;452:3923:32;;29865:7:28;2141:4:3;452:3923:32;;;;29852:100:28;;;29739;452:3923:32;;;;;;;29739:100:28;;;;29626;29710:1;452:3923:32;;;;;;29626:100:28;;;;29510:103;29596:2;452:3923:32;;;;;;29510:103:28;;;;29394;452:3923:32;;;;;;;29394:103:28;;;;29278;29364:2;;-1:-1:-1;452:3923:32;;-1:-1:-1;29278:103:28;;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;452:3923:32;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;452:3923:32;;;;;;;826:5;452:3923;;;;-1:-1:-1;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;452:3923:32;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;452:3923:32;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;452:3923:32;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;452:3923:32;;;735:10:19;;4057:14:3;;;:49;;;452:3923:32;4053:129:3;;452:3923:32;;9024:16:3;9020:88;;9121:18;9117:88;;9264:4;;;;:::i;:::-;452:3923:32;9117:88:3;452:3923:32;;9038:1:3;452:3923:32;;9162:32:3;-1:-1:-1;;;9162:32:3;;;;452:3923:32;9162:32:3;9020:88;452:3923:32;;9038:1:3;452:3923:32;;9063:34:3;-1:-1:-1;;;9063:34:3;;;;452:3923:32;9063:34:3;4053:129;452:3923:32;;;-1:-1:-1;;;4129:42:3;;735:10:19;4129:42:3;;;452:3923:32;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;;4129:42:3;;;4057:49;452:3923:32;;-1:-1:-1;452:3923:32;3355:18:3;452:3923:32;;;3355:37:3;735:10:19;452:3923:32;-1:-1:-1;452:3923:32;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;3355:37:3;452:3923:32;;4075:31:3;4057:49;;452:3923:32;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3756:21:32;452:3923;-1:-1:-1;;;;;1710:6:0;452:3923:32;;;3793:27;452:3923;;;;;;3793:27;1375:21:15;;:30;1371:125;;1548:33;;;;;;;;;;:::i;:::-;1595:8;;1591:58;;452:3923:32;;;1591:58:15;452:3923:32;;5690:21:15;:17;;452:3923:32;5815:105:15;;;;;5686:301;452:3923:32;;;5957:19:15;;;;1371:125;452:3923:32;;1428:57:15;;;1455:21;452:3923:32;1428:57:15;;452:3923:32;;;;;;;;;4129:42:3;452:3923:32;;;;;;;;;-1:-1:-1;;452:3923:32;;;;;;;;;;;;;;;;;;;;:::i;:::-;2466:103:22;;:::i;:::-;-1:-1:-1;452:3923:32;;;;;;;;;;;3129:10;452:3923;;;;;;;;3119:34;452:3923;;3235:44;;3129:10;3188:29;3129:10;;3188:29;:::i;:::-;452:3923;;3129:10;;;;3235:44;;;:::i;:::-;;;;2531:1:22;1857;3068:21;452:3923:32;2888:208:22;452:3923:32;;;;-1:-1:-1;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;452:3923:32;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;-1:-1:-1;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;640:47;452:3923;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;452:3923:32;-1:-1:-1;;;;;3004:6:0;452:3923:32;-1:-1:-1;;452:3923:32;;3004:6:0;452:3923:32;;3052:40:0;;;;452:3923:32;;;;;;;;-1:-1:-1;;452:3923:32;;;;;-1:-1:-1;;;;;1710:6:0;452:3923:32;;;;;;;;;;;-1:-1:-1;;452:3923:32;;;;;;;;;;;;;;;;;;:::i;:::-;;2775:45;452:3923;;2466:103:22;;:::i;:::-;452:3923:32;;;;:::i;:::-;;2313:12;2305:44;2313:12;;;2305:44;:::i;:::-;2360:65;2381:19;;;:::i;:::-;2368:9;:32;;2360:65;:::i;:::-;2436:83;826:5;2444:29;:20;;;452:3923;;2444:11;452:3923;;;;;;;2444:20;452:3923;2444:29;:::i;:::-;:52;;2436:83;:::i;:::-;2530:82;2581:2;2538:39;2548:10;2538:30;2548:10;2538:21;2548:10;-1:-1:-1;;;;;452:3923:32;;;2538:9;452:3923;;;;;;;2538:21;452:3923;;;;;;;;;;2538:39;:45;;2530:82;:::i;:::-;2625:20;;452:3923;;2444:11;452:3923;;;;;;;2625:20;:30;452:3923;;;2625:30;:::i;:::-;452:3923;;2666:30;2548:10;2666:21;2548:10;-1:-1:-1;;;;;452:3923:32;;;2538:9;452:3923;;;;;;;2666:30;:40;452:3923;;;2666:40;:::i;:::-;452:3923;;2719:38;452:3923;;:::i;:::-;2548:10;;;2719:38;:::i;:::-;2775:45;452:3923;;2548:10;;;;2775:45;;;:::i;452:3923::-;;;;;;-1:-1:-1;;452:3923:32;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;452:3923:32;;13191:22:3;;;13187:94;;13290:35;735:10:19;;-1:-1:-1;452:3923:32;13290:18:3;452:3923:32;;;-1:-1:-1;452:3923:32;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;13290:35:3;452:3923:32;;;;;;;;;;;;13351:41:3;452:3923:32;;735:10:19;13351:41:3;735:10:19;13351:41:3;;452:3923:32;;;;;;;;;;;;13351:41:3;;;;452:3923:32;13187:94:3;452:3923:32;;;13236:34:3;;;-1:-1:-1;452:3923:32;13236:34:3;;452:3923:32;13236:34:3;452:3923:32;;;;;;-1:-1:-1;;452:3923:32;;;;;;-1:-1:-1;452:3923:32;911:46;452:3923;;;;-1:-1:-1;452:3923:32;;;;;;;;;;;;;;-1:-1:-1;;452:3923:32;;;;;;;875:10;452:3923;;;;;;;;;-1:-1:-1;;452:3923:32;;;;-1:-1:-1;;;;;452:3923:32;;:::i;:::-;;-1:-1:-1;452:3923:32;964:64;452:3923;;;-1:-1:-1;452:3923:32;;;-1:-1:-1;452:3923:32;;;;;-1:-1:-1;452:3923:32;;;;;;;;;;;;;;-1:-1:-1;;452:3923:32;;;;;;3355:37:3;452:3923:32;;:::i;:::-;-1:-1:-1;;;;;452:3923:32;;:::i;:::-;;;-1:-1:-1;452:3923:32;3355:18:3;452:3923:32;;;-1:-1:-1;452:3923:32;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;3355:37:3;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;452:3923:32;;;;4098:13;452:3923;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;452:3923:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;452:3923:32;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;452:3923:32;;;735:10:19;;3600:14:3;;;:49;;;452:3923:32;3596:129:3;;452:3923:32;;8089:16:3;8085:88;;8186:18;8182:88;;8418:4;452:3923:32;8329:29:3;452:3923:32;;;;13515:822:3;13683:648;;;;;;;;;;;;;;;;;;;;;;;;;;13515:822;8329:29;8418:4;;;;:::i;8182:88::-;452:3923:32;;;-1:-1:-1;;;8227:32:3;;-1:-1:-1;452:3923:32;8227:32:3;;452:3923:32;8227:32:3;8085:88;452:3923:32;;;-1:-1:-1;;;8128:34:3;;-1:-1:-1;452:3923:32;8128:34:3;;452:3923:32;8128:34:3;3596:129;452:3923:32;;-1:-1:-1;;;3672:42:3;;735:10:19;452:3923:32;3672:42:3;;452:3923:32;-1:-1:-1;;;;;452:3923:32;;;;;;;;4129:42:3;3600:49;452:3923:32;;-1:-1:-1;452:3923:32;3355:18:3;452:3923:32;;;3355:37:3;735:10:19;452:3923:32;-1:-1:-1;452:3923:32;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;3355:37:3;452:3923:32;;3618:31:3;3600:49;;452:3923:32;;;;;;-1:-1:-1;;452:3923:32;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;452:3923:32;;;2627:22:0;;;2623:91;;3004:6;452:3923:32;;-1:-1:-1;;452:3923:32;;;3004:6:0;452:3923:32;;3052:40:0;-1:-1:-1;3052:40:0;;452:3923:32;2623:91:0;452:3923:32;;;2672:31:0;;;-1:-1:-1;452:3923:32;2672:31:0;;452:3923:32;2672:31:0;452:3923:32;;;;-1:-1:-1;2141:4:3;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;2141:4:3;452:3923:32;;;;;;;-1:-1:-1;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;452:3923:32;;;;;;;;;;;;;2187:132:3;2290:22;2187:132;2290:9;452:3923:32;2290:9:3;452:3923:32;;;2290:9:3;452:3923:32;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;2290:22:3;452:3923:32;2187:132:3;:::o;452:3923:32:-;;;;;;;;;;;;;4345:13;452:3923;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;452:3923:32;;;;;;;;-1:-1:-1;;452:3923:32;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;452:3923:32;;;;;;;;2476:552:3;;;;452:3923:32;;;;2632:29:3;;;2628:121;;452:3923:32;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;-1:-1:-1;;452:3923:32;;;;;;-1:-1:-1;2874:3:3;452:3923:32;;2853:19:3;;;;;17194:82:16;2912:68:3;452:3923:32;17194:82:16;;;;;;;;;;17992;;;;;2912:68:3;;:::i;:::-;2893:87;;;;:::i;:::-;452:3923:32;;2838:13:3;;2853:19;-1:-1:-1;2853:19:3;;-1:-1:-1;;;2476:552:3:o;2628:121::-;452:3923:32;;2684:54:3;;;;;;452:3923:32;;;;;;;;;;;;;4129:42:3;452:3923:32;;;;:::o;:::-;;;;-1:-1:-1;;;452:3923:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;452:3923:32;;;;;;;;;;875:10;452:3923;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2324:1;452:3923;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;1796:162:0:-;-1:-1:-1;;;;;1710:6:0;452:3923:32;;735:10:19;1855:23:0;1851:101;;1796:162::o;1851:101::-;452:3923:32;;;1901:40:0;;;735:10:19;1901:40:0;;;452:3923:32;1901:40:0;452:3923:32;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;452:3923:32;;;;:::o;:::-;;;:::o;2575:307:22:-;1899:1;2702:7;452:3923:32;2702:18:22;2698:86;;1899:1;2702:7;452:3923:32;2575:307:22:o;2698:86::-;2702:7;452:3923:32;;2743:30:22;;;;11915:329:3;-1:-1:-1;;;;;452:3923:32;;11994:18:3;;;11990:88;;12137:29;13683:648;;;3215:1:32;13683:648:3;;;;;;;;;;3215:1:32;13683:648:3;;3215:1:32;13683:648:3;;;;;;;;;13515:822;12137:29;452:3923:32;;;;12010:1:3;452:3923:32;;;;;:::i;:::-;;;;;;5071:27:3;;;;5067:117;;5241:13;;12010:1;5272:3;452:3923:32;;5256:14:3;;;;;17992:82:16;;;452:3923:32;17992:82:16;;;;;;;;;;;5466:19:3;:13;;;5253:1;452:3923:32;5253:1:3;452:3923:32;;;5253:1:3;452:3923:32;;;5466:13:3;452:3923:32;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;5466:19:3;452:3923:32;5507:19:3;;;5503:129;;452:3923:32;5748:13:3;5406:18;452:3923:32;;;5748:19:3;452:3923:32;;5748:13:3;5253:1;452:3923:32;5253:1:3;452:3923:32;;;5253:1:3;452:3923:32;;;5748:19:3;452:3923:32;;5241:13:3;;5503:129;452:3923:32;;-1:-1:-1;;;5557:56:3;;-1:-1:-1;;;;;452:3923:32;;5557:56:3;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;4129:42:3;5256:14;;;;12010:1;5256:14;;;;5406:18;452:3923:32;;5941:15:3;5406:18;;;;452:3923:32;17992:82:16;;;;;;;;452:3923:32;;;;;;;;;;735:10:19;;6087:45:3;;452:3923:32;;;;6087:45:3;;;;11915:329::o;5937:288::-;452:3923:32;;735:10:19;;6168:46:3;;452:3923:32;;6168:46:3;;452:3923:32;6168:46:3;:::i;10562:346::-;;;;;-1:-1:-1;;;;;452:3923:32;;10658:16:3;;;10654:88;;10801:29;13683:648;;;;;;;;;;;;;;;;;;;;;;;;;;13515:822;10801:29;452:3923:32;;;;;5071:27:3;;;;5067:117;;5241:13;;452:3923:32;5272:3:3;452:3923:32;;5256:14:3;;;;;17992:82:16;5840:16:3;17992:82:16;;;5876:26:3;:17;17992:82:16;5876:13:3;17992:82:16;;;;;;;;;;;;5876:13:3;5253:1;452:3923:32;5253:1:3;452:3923:32;;;5253:1:3;452:3923:32;;;5876:17:3;452:3923:32;;;5876:26:3;:::i;:::-;452:3923:32;;;5241:13:3;;5256:14;;;;;5840:16;452:3923:32;;5941:15:3;5937:288;5840:16;;;17992:82:16;;;;;;;;;452:3923:32;;;;;;;;;;-1:-1:-1;;735:10:19;;6087:45:3;;452:3923:32;6087:45:3;5937:288;452:3923:32;;5840:16:3;7136:15;5840:16;;17992:82:16;;;7356:4:3;17992:82:16;;;;;;;735:10:19;;7356:4:3;:::i;7132:362::-;7474:4;735:10:19;;7474:4:3;:::i;5937:288::-;452:3923:32;;;6168:46:3;735:10:19;6168:46:3;;;;;;;:::i;:::-;;;;5937:288;;6810:700;;;;;452:3923:32;;;;5071:27:3;;;;5067:117;;5241:13;;-1:-1:-1;5272:3:3;452:3923:32;;5256:14:3;;;;;17992:82:16;;;;;;;;;;;;;;;;452:3923:32;-1:-1:-1;;;;;452:3923:32;;;;5402:420:3;;5272:3;452:3923:32;;;;5836:81:3;;5272:3;;;;452:3923:32;5241:13:3;;5836:81;5876:26;:13;;:17;:13;5253:1;452:3923:32;5253:1:3;452:3923:32;;;5253:1:3;452:3923:32;;;5876:26:3;452:3923:32;;5836:81:3;;;;;5402:420;5466:13;;;;;:19;:13;;;5253:1;452:3923:32;5253:1:3;452:3923:32;;;5253:1:3;452:3923:32;;;5466:19:3;452:3923:32;5507:19:3;;;5503:129;;452:3923:32;;;;;;;;;5748:19:3;:13;;;5253:1;452:3923:32;5253:1:3;452:3923:32;;;5253:1:3;452:3923:32;;;5748:19:3;452:3923:32;5402:420:3;;;;5503:129;452:3923:32;;-1:-1:-1;;;5557:56:3;;-1:-1:-1;;;;;452:3923:32;;5557:56:3;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;4129:42:3;5256:14;;;;;;;;452:3923:32;;;5941:15:3;5937:288;452:3923:32;;;17992:82:16;;;;;;;;;452:3923:32;;;;;;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;735:10:19;;6087:45:3;;;5937:288;-1:-1:-1;;;;;452:3923:32;;7051:453:3;;5937:288;6810:700;;;;;:::o;7051:453::-;452:3923:32;;;7136:15:3;452:3923:32;;17992:82:16;;7356:4:3;17992:82:16;;;;;;735:10:19;;7356:4:3;:::i;:::-;7051:453;;;;;;;7132:362;7474:4;735:10:19;;;;7474:4:3;:::i;:::-;7132:362;;5937:288;-1:-1:-1;;;;;452:3923:32;;;;;;;;735:10:19;6168:46:3;735:10:19;6168:46:3;;;;;;;:::i;:::-;;;;5937:288;;452:3923:32;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;;;;;;;;;;;:::i;2523:1028:7:-;;;;;;2747:14;;2743:802;;2523:1028;;;;;:::o;2743:802::-;2785:78;452:3923:32;2785:78:7;452:3923:32;;;;;;;-1:-1:-1;;;2785:78:7;;;;;;;;:::i;:::-;;452:3923:32;;-1:-1:-1;;;;;452:3923:32;;2785:78:7;;452:3923:32;;2785:78:7;;;2743:802;-1:-1:-1;2781:754:7;;3147:388;;;:::i;:::-;452:3923:32;;;;3197:18:7;;;452:3923:32;;-1:-1:-1;;;3302:41:7;;-1:-1:-1;;;;;452:3923:32;;2785:78:7;3302:41;;452:3923:32;;;4129:42:3;3193:328:7;2785:78;3390:113;;;;2781:754;-1:-1:-1;;;;;;452:3923:32;2942:60:7;2938:194;;2781:754;2743:802;;;;;;;2938:194;452:3923:32;;-1:-1:-1;;;3072:41:7;;-1:-1:-1;;;;;452:3923:32;;;;2785:78:7;3072:41;;452:3923:32;;;4129:42:3;2785:78:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;2523:1028;;;;;;;2747:14;;2743:802;;2523:1028;;;;;;;:::o;2743:802::-;2785:78;;452:3923:32;;;;;;;;-1:-1:-1;;;2785:78:7;;;;;;;;:::i;:::-;;452:3923:32;2764:1:7;-1:-1:-1;;;;;452:3923:32;;2785:78:7;;2764:1;;2785:78;;;2743:802;-1:-1:-1;2781:754:7;;3147:388;;;:::i;2781:754::-;-1:-1:-1;;;;;;452:3923:32;2942:60:7;2938:194;;2781:754;2743:802;;;;;;;;2785:78;;;;;;;;;;;;;;;:::i;:::-;;;;;452:3923:32;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;452:3923:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1006:961:7:-;;;;;;1205:14;;1201:760;;1006:961;;;;;:::o;1201:760::-;1243:71;452:3923:32;1243:71:7;452:3923:32;;;;;;;-1:-1:-1;;;1243:71:7;;;;;;;;:::i;1006:961::-;;;;;;;1205:14;;1201:760;;1006:961;;;;;;:::o;1201:760::-;1243:71;;452:3923:32;;;;;;;;-1:-1:-1;;;1243:71:7;;;;;;;;:::i"},"methodIdentifiers":{"MAX_SUPPLY_PER_SIGN()":"2462a252","MINT_PRICE()":"c002d23d","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","claimHoroscope(uint256,string)":"49d7f074","getSign(uint256)":"ec8451da","getTokenId(string)":"1e7663bc","isApprovedForAll(address,address)":"e985e9c5","mintSeed(string,uint256)":"93fb6e87","owner()":"8da5cb5b","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","signToTokenId(string)":"56f0866c","supportsInterface(bytes4)":"01ffc9a7","tokenIdToSign(uint256)":"f4a79b24","totalSupply(uint256)":"bd85b039","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c","userMints(address,uint256)":"cd49618c","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"theme\",\"type\":\"string\"}],\"name\":\"HoroscopeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"sign\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SeedMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY_PER_SIGN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"theme\",\"type\":\"string\"}],\"name\":\"claimHoroscope\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getSign\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"sign\",\"type\":\"string\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"sign\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintSeed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"signToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdToSign\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userMints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1155 token for StaticFruit seeds with horoscope-based minting\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"claimHoroscope(uint256,string)\":{\"details\":\"Claim horoscope reading (burns seed)\",\"params\":{\"theme\":\"Generated horoscope theme\",\"tokenId\":\"Token ID to burn\"}},\"getSign(uint256)\":{\"details\":\"Get zodiac sign for token ID\",\"params\":{\"tokenId\":\"Token ID\"},\"returns\":{\"_0\":\"Zodiac sign string\"}},\"getTokenId(string)\":{\"details\":\"Get token ID for zodiac sign\",\"params\":{\"sign\":\"Zodiac sign\"},\"returns\":{\"_0\":\"Token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"mintSeed(string,uint256)\":{\"details\":\"Mint seeds based on horoscope\",\"params\":{\"amount\":\"Amount to mint\",\"sign\":\"Zodiac sign\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"Get token URI for metadata\",\"params\":{\"tokenId\":\"Token ID\"},\"returns\":{\"_0\":\"URI string\"}},\"withdraw()\":{\"details\":\"Withdraw contract funds\"}},\"title\":\"StaticSeeds\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StaticSeeds.sol\":\"StaticSeeds\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/StaticSeeds.sol\":{\"keccak256\":\"0xd77470ef0417be2bc9ab1942d572e9830571a8eff2f2c483f39ff5044be0c96e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e00e87b600c08293ca089f1700e249882ec15fb4e8f8f92cd09a5d09d5dc58a\",\"dweb:/ipfs/QmW5tgVqXzJ1EKzn3f1LURLYi2qSPgnYDszSjmAamBvq1y\"]}},\"version\":1}"}}}}}